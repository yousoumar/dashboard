{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/ical.js@1.5.0/node_modules/ical.js/build/ical.js", "../../../../../../node_modules/.pnpm/@fullcalendar+icalendar@6.1.13_@fullcalendar+core@6.1.13_ical.js@1.5.0/node_modules/@fullcalendar/icalendar/index.js"],
  "sourcesContent": ["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2021 */\n\n/* jshint ignore:start */\nvar ICAL;\n(function() {\n  /* istanbul ignore next */\n  if (typeof module === 'object') {\n    // CommonJS, where exports may be different each time.\n    ICAL = module.exports;\n  } else if (typeof HTMLScriptElement !== 'undefined' && 'noModule' in HTMLScriptElement.prototype) {\n    // Until we use ES6 exports, using <script type=\"module\"> we define ICAL on the window global.\n    window.ICAL = ICAL = {};\n  } else if (typeof ICAL !== 'object') {\n    ICAL = {};\n  }\n})();\n/* jshint ignore:end */\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * The number of characters before iCalendar line folding should occur\n * @type {Number}\n * @default 75\n */\nICAL.foldLength = 75;\n\n\n/**\n * The character(s) to be used for a newline. The default value is provided by\n * rfc5545.\n * @type {String}\n * @default \"\\r\\n\"\n */\nICAL.newLineChar = '\\r\\n';\n\n\n/**\n * Helper functions used in various places within ical.js\n * @namespace\n */\nICAL.helpers = {\n  /**\n   * Compiles a list of all referenced TZIDs in all subcomponents and\n   * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n   * are referenced by a component, but a VTIMEZONE does not exist,\n   * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n   *\n   * @param {ICAL.Component} vcal     The top-level VCALENDAR component.\n   * @return {ICAL.Component}         The ICAL.Component that was passed in.\n   */\n  updateTimezones: function(vcal) {\n    var allsubs, properties, vtimezones, reqTzid, i, tzid;\n\n    if (!vcal || vcal.name !== \"vcalendar\") {\n      //not a top-level vcalendar component\n      return vcal;\n    }\n\n    //Store vtimezone subcomponents in an object reference by tzid.\n    //Store properties from everything else in another array\n    allsubs = vcal.getAllSubcomponents();\n    properties = [];\n    vtimezones = {};\n    for (i = 0; i < allsubs.length; i++) {\n      if (allsubs[i].name === \"vtimezone\") {\n        tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n        vtimezones[tzid] = allsubs[i];\n      } else {\n        properties = properties.concat(allsubs[i].getAllProperties());\n      }\n    }\n\n    //create an object with one entry for each required tz\n    reqTzid = {};\n    for (i = 0; i < properties.length; i++) {\n      if ((tzid = properties[i].getParameter(\"tzid\"))) {\n        reqTzid[tzid] = true;\n      }\n    }\n\n    //delete any vtimezones that are not on the reqTzid list.\n    for (i in vtimezones) {\n      if (vtimezones.hasOwnProperty(i) && !reqTzid[i]) {\n        vcal.removeSubcomponent(vtimezones[i]);\n      }\n    }\n\n    //create any missing, but registered timezones\n    for (i in reqTzid) {\n      if (\n        reqTzid.hasOwnProperty(i) &&\n        !vtimezones[i] &&\n        ICAL.TimezoneService.has(i)\n      ) {\n        vcal.addSubcomponent(ICAL.TimezoneService.get(i).component);\n      }\n    }\n\n    return vcal;\n  },\n\n  /**\n   * Checks if the given type is of the number type and also NaN.\n   *\n   * @param {Number} number     The number to check\n   * @return {Boolean}          True, if the number is strictly NaN\n   */\n  isStrictlyNaN: function(number) {\n    return typeof(number) === 'number' && isNaN(number);\n  },\n\n  /**\n   * Parses a string value that is expected to be an integer, when the valid is\n   * not an integer throws a decoration error.\n   *\n   * @param {String} string     Raw string input\n   * @return {Number}           Parsed integer\n   */\n  strictParseInt: function(string) {\n    var result = parseInt(string, 10);\n\n    if (ICAL.helpers.isStrictlyNaN(result)) {\n      throw new Error(\n        'Could not extract integer from \"' + string + '\"'\n      );\n    }\n\n    return result;\n  },\n\n  /**\n   * Creates or returns a class instance of a given type with the initialization\n   * data if the data is not already an instance of the given type.\n   *\n   * @example\n   * var time = new ICAL.Time(...);\n   * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n   *\n   * (result instanceof ICAL.Time)\n   * // => true\n   *\n   * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n   * (result isntanceof ICAL.Time)\n   * // => true\n   *\n   *\n   * @param {Object} data       object initialization data\n   * @param {Object} type       object type (like ICAL.Time)\n   * @return {?}                An instance of the found type.\n   */\n  formatClassType: function formatClassType(data, type) {\n    if (typeof(data) === 'undefined') {\n      return undefined;\n    }\n\n    if (data instanceof type) {\n      return data;\n    }\n    return new type(data);\n  },\n\n  /**\n   * Identical to indexOf but will only match values when they are not preceded\n   * by a backslash character.\n   *\n   * @param {String} buffer         String to search\n   * @param {String} search         Value to look for\n   * @param {Number} pos            Start position\n   * @return {Number}               The position, or -1 if not found\n   */\n  unescapedIndexOf: function(buffer, search, pos) {\n    while ((pos = buffer.indexOf(search, pos)) !== -1) {\n      if (pos > 0 && buffer[pos - 1] === '\\\\') {\n        pos += 1;\n      } else {\n        return pos;\n      }\n    }\n    return -1;\n  },\n\n  /**\n   * Find the index for insertion using binary search.\n   *\n   * @param {Array} list            The list to search\n   * @param {?} seekVal             The value to insert\n   * @param {function(?,?)} cmpfunc The comparison func, that can\n   *                                  compare two seekVals\n   * @return {Number}               The insert position\n   */\n  binsearchInsert: function(list, seekVal, cmpfunc) {\n    if (!list.length)\n      return 0;\n\n    var low = 0, high = list.length - 1,\n        mid, cmpval;\n\n    while (low <= high) {\n      mid = low + Math.floor((high - low) / 2);\n      cmpval = cmpfunc(seekVal, list[mid]);\n\n      if (cmpval < 0)\n        high = mid - 1;\n      else if (cmpval > 0)\n        low = mid + 1;\n      else\n        break;\n    }\n\n    if (cmpval < 0)\n      return mid; // insertion is displacing, so use mid outright.\n    else if (cmpval > 0)\n      return mid + 1;\n    else\n      return mid;\n  },\n\n  /**\n   * Convenience function for debug output\n   * @private\n   */\n  dumpn: /* istanbul ignore next */ function() {\n    if (!ICAL.debug) {\n      return;\n    }\n\n    if (typeof (console) !== 'undefined' && 'log' in console) {\n      ICAL.helpers.dumpn = function consoleDumpn(input) {\n        console.log(input);\n      };\n    } else {\n      ICAL.helpers.dumpn = function geckoDumpn(input) {\n        dump(input + '\\n');\n      };\n    }\n\n    ICAL.helpers.dumpn(arguments[0]);\n  },\n\n  /**\n   * Clone the passed object or primitive. By default a shallow clone will be\n   * executed.\n   *\n   * @param {*} aSrc            The thing to clone\n   * @param {Boolean=} aDeep    If true, a deep clone will be performed\n   * @return {*}                The copy of the thing\n   */\n  clone: function(aSrc, aDeep) {\n    if (!aSrc || typeof aSrc != \"object\") {\n      return aSrc;\n    } else if (aSrc instanceof Date) {\n      return new Date(aSrc.getTime());\n    } else if (\"clone\" in aSrc) {\n      return aSrc.clone();\n    } else if (Array.isArray(aSrc)) {\n      var arr = [];\n      for (var i = 0; i < aSrc.length; i++) {\n        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);\n      }\n      return arr;\n    } else {\n      var obj = {};\n      for (var name in aSrc) {\n        // uses prototype method to allow use of Object.create(null);\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {\n          if (aDeep) {\n            obj[name] = ICAL.helpers.clone(aSrc[name], true);\n          } else {\n            obj[name] = aSrc[name];\n          }\n        }\n      }\n      return obj;\n    }\n  },\n\n  /**\n   * Performs iCalendar line folding. A line ending character is inserted and\n   * the next line begins with a whitespace.\n   *\n   * @example\n   * SUMMARY:This line will be fold\n   *  ed right in the middle of a word.\n   *\n   * @param {String} aLine      The line to fold\n   * @return {String}           The folded line\n   */\n  foldline: function foldline(aLine) {\n    var result = \"\";\n    var line = aLine || \"\", pos = 0, line_length = 0;\n    //pos counts position in line for the UTF-16 presentation\n    //line_length counts the bytes for the UTF-8 presentation\n    while (line.length) {\n      var cp = line.codePointAt(pos);\n      if (cp < 128) ++line_length;\n      else if (cp < 2048) line_length += 2;//needs 2 UTF-8 bytes\n      else if (cp < 65536) line_length += 3;\n      else line_length += 4; //cp is less than 1114112\n      if (line_length < ICAL.foldLength + 1)\n        pos += cp > 65535 ? 2 : 1;\n      else {\n        result += ICAL.newLineChar + \" \" + line.substring(0, pos);\n        line = line.substring(pos);\n        pos = line_length = 0;\n      }\n    }\n    return result.substr(ICAL.newLineChar.length + 1);\n  },\n\n  /**\n   * Pads the given string or number with zeros so it will have at least two\n   * characters.\n   *\n   * @param {String|Number} data    The string or number to pad\n   * @return {String}               The number padded as a string\n   */\n  pad2: function pad(data) {\n    if (typeof(data) !== 'string') {\n      // handle fractions.\n      if (typeof(data) === 'number') {\n        data = parseInt(data);\n      }\n      data = String(data);\n    }\n\n    var len = data.length;\n\n    switch (len) {\n      case 0:\n        return '00';\n      case 1:\n        return '0' + data;\n      default:\n        return data;\n    }\n  },\n\n  /**\n   * Truncates the given number, correctly handling negative numbers.\n   *\n   * @param {Number} number     The number to truncate\n   * @return {Number}           The truncated number\n   */\n  trunc: function trunc(number) {\n    return (number < 0 ? Math.ceil(number) : Math.floor(number));\n  },\n\n  /**\n   * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all\n   * the features, but enough for our usage.\n   *\n   * @param {Function} base     The base class constructor function.\n   * @param {Function} child    The child class constructor function.\n   * @param {Object} extra      Extends the prototype with extra properties\n   *                              and methods\n   */\n  inherits: function(base, child, extra) {\n    function F() {}\n    F.prototype = base.prototype;\n    child.prototype = new F();\n\n    if (extra) {\n      ICAL.helpers.extend(extra, child.prototype);\n    }\n  },\n\n  /**\n   * Poor-man's cross-browser object extension. Doesn't support all the\n   * features, but enough for our usage. Note that the target's properties are\n   * not overwritten with the source properties.\n   *\n   * @example\n   * var child = ICAL.helpers.extend(parent, {\n   *   \"bar\": 123\n   * });\n   *\n   * @param {Object} source     The object to extend\n   * @param {Object} target     The object to extend with\n   * @return {Object}           Returns the target.\n   */\n  extend: function(source, target) {\n    for (var key in source) {\n      var descr = Object.getOwnPropertyDescriptor(source, key);\n      if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n        Object.defineProperty(target, key, descr);\n      }\n    }\n    return target;\n  }\n};\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/** @namespace ICAL */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.design = (function() {\n  'use strict';\n\n  var FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\n  var TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\n  var FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\n  var TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\n  function createTextType(fromNewline, toNewline) {\n    var result = {\n      matches: /.*/,\n\n      fromICAL: function(aValue, structuredEscape) {\n        return replaceNewline(aValue, fromNewline, structuredEscape);\n      },\n\n      toICAL: function(aValue, structuredEscape) {\n        var regEx = toNewline;\n        if (structuredEscape)\n          regEx = new RegExp(regEx.source + '|' + structuredEscape);\n        return aValue.replace(regEx, function(str) {\n          switch (str) {\n          case \"\\\\\":\n            return \"\\\\\\\\\";\n          case \";\":\n            return \"\\\\;\";\n          case \",\":\n            return \"\\\\,\";\n          case \"\\n\":\n            return \"\\\\n\";\n          /* istanbul ignore next */\n          default:\n            return str;\n          }\n        });\n      }\n    };\n    return result;\n  }\n\n  // default types used multiple times\n  var DEFAULT_TYPE_TEXT = { defaultType: \"text\" };\n  var DEFAULT_TYPE_TEXT_MULTI = { defaultType: \"text\", multiValue: \",\" };\n  var DEFAULT_TYPE_TEXT_STRUCTURED = { defaultType: \"text\", structuredValue: \";\" };\n  var DEFAULT_TYPE_INTEGER = { defaultType: \"integer\" };\n  var DEFAULT_TYPE_DATETIME_DATE = { defaultType: \"date-time\", allowedTypes: [\"date-time\", \"date\"] };\n  var DEFAULT_TYPE_DATETIME = { defaultType: \"date-time\" };\n  var DEFAULT_TYPE_URI = { defaultType: \"uri\" };\n  var DEFAULT_TYPE_UTCOFFSET = { defaultType: \"utc-offset\" };\n  var DEFAULT_TYPE_RECUR = { defaultType: \"recur\" };\n  var DEFAULT_TYPE_DATE_ANDOR_TIME = { defaultType: \"date-and-or-time\", allowedTypes: [\"date-time\", \"date\", \"text\"] };\n\n  function replaceNewlineReplace(string) {\n    switch (string) {\n      case \"\\\\\\\\\":\n        return \"\\\\\";\n      case \"\\\\;\":\n        return \";\";\n      case \"\\\\,\":\n        return \",\";\n      case \"\\\\n\":\n      case \"\\\\N\":\n        return \"\\n\";\n      /* istanbul ignore next */\n      default:\n        return string;\n    }\n  }\n\n  function replaceNewline(value, newline, structuredEscape) {\n    // avoid regex when possible.\n    if (value.indexOf('\\\\') === -1) {\n      return value;\n    }\n    if (structuredEscape)\n      newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape);\n    return value.replace(newline, replaceNewlineReplace);\n  }\n\n  var commonProperties = {\n    \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n    \"url\": DEFAULT_TYPE_URI,\n    \"version\": DEFAULT_TYPE_TEXT,\n    \"uid\": DEFAULT_TYPE_TEXT\n  };\n\n  var commonValues = {\n    \"boolean\": {\n      values: [\"TRUE\", \"FALSE\"],\n\n      fromICAL: function(aValue) {\n        switch (aValue) {\n          case 'TRUE':\n            return true;\n          case 'FALSE':\n            return false;\n          default:\n            //TODO: parser warning\n            return false;\n        }\n      },\n\n      toICAL: function(aValue) {\n        if (aValue) {\n          return 'TRUE';\n        }\n        return 'FALSE';\n      }\n\n    },\n    float: {\n      matches: /^[+-]?\\d+\\.\\d+$/,\n\n      fromICAL: function(aValue) {\n        var parsed = parseFloat(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          // TODO: parser warning\n          return 0.0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    integer: {\n      fromICAL: function(aValue) {\n        var parsed = parseInt(aValue);\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          return 0;\n        }\n        return parsed;\n      },\n\n      toICAL: function(aValue) {\n        return String(aValue);\n      }\n    },\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        if (aValue.length < 7) {\n          // no seconds\n          // -0500\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2);\n        } else {\n          // seconds\n          // -050000\n          return aValue.substr(0, 3) +\n                 aValue.substr(4, 2) +\n                 aValue.substr(7, 2);\n        }\n      },\n\n      fromICAL: function(aValue) {\n        if (aValue.length < 6) {\n          // no seconds\n          // -05:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2);\n        } else {\n          // seconds\n          // -05:00:00\n          return aValue.substr(0, 3) + ':' +\n                 aValue.substr(3, 2) + ':' +\n                 aValue.substr(5, 2);\n        }\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  };\n\n  var icalParams = {\n    // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n    // enfoce anything aside from it being a valid content line.\n    //\n    // At least some params require - if multi values are used - DQUOTEs\n    // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n    // To indicate this, I introduced the new k/v pair\n    // multiValueSeparateDQuote: true\n    //\n    // \"ALTREP\": { ... },\n\n    // CN just wants a param-value\n    // \"CN\": { ... }\n\n    \"cutype\": {\n      values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n\n    \"delegated-from\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"delegated-to\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    // \"DIR\": { ... }, // See ALTREP\n    \"encoding\": {\n      values: [\"8BIT\", \"BASE64\"]\n    },\n    // \"FMTTYPE\": { ... }, // See ALTREP\n    \"fbtype\": {\n      values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    // \"LANGUAGE\": { ... }, // See ALTREP\n    \"member\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"partstat\": {\n      // TODO These values are actually different per-component\n      values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\",\n               \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"range\": {\n      values: [\"THISANDFUTURE\"]\n    },\n    \"related\": {\n      values: [\"START\", \"END\"]\n    },\n    \"reltype\": {\n      values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"role\": {\n      values: [\"REQ-PARTICIPANT\", \"CHAIR\",\n               \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"rsvp\": {\n      values: [\"TRUE\", \"FALSE\"]\n    },\n    \"sent-by\": {\n      valueType: \"cal-address\"\n    },\n    \"tzid\": {\n      matches: /^\\//\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\",\n               \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\",\n               \"time\", \"uri\", \"utc-offset\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var icalValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n\n    uri: {\n      // TODO\n      /* ... */\n    },\n\n    \"binary\": {\n      decorate: function(aString) {\n        return ICAL.Binary.fromString(aString);\n      },\n\n      undecorate: function(aBinary) {\n        return aBinary.toString();\n      }\n    },\n    \"cal-address\": {\n      // needs to be an uri\n    },\n    \"date\": {\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      /**\n       * undecorates a time object.\n       */\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        // from: 20120901\n        // to: 2012-09-01\n        if (!design.strict && aValue.length >= 15) {\n          // This is probably a date-time, e.g. 20120901T130000Z\n          return icalValues[\"date-time\"].fromICAL(aValue);\n        } else {\n          return aValue.substr(0, 4) + '-' +\n                 aValue.substr(4, 2) + '-' +\n                 aValue.substr(6, 2);\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01\n        // to: 20120901\n        var len = aValue.length;\n\n        if (len == 10) {\n          return aValue.substr(0, 4) +\n                 aValue.substr(5, 2) +\n                 aValue.substr(8, 2);\n        } else if (len >= 19) {\n          return icalValues[\"date-time\"].toICAL(aValue);\n        } else {\n          //TODO: serialize warning?\n          return aValue;\n        }\n\n      }\n    },\n    \"date-time\": {\n      fromICAL: function(aValue) {\n        // from: 20120901T130000\n        // to: 2012-09-01T13:00:00\n        if (!design.strict && aValue.length == 8) {\n          // This is probably a date, e.g. 20120901\n          return icalValues.date.fromICAL(aValue);\n        } else {\n          var result = aValue.substr(0, 4) + '-' +\n                       aValue.substr(4, 2) + '-' +\n                       aValue.substr(6, 2) + 'T' +\n                       aValue.substr(9, 2) + ':' +\n                       aValue.substr(11, 2) + ':' +\n                       aValue.substr(13, 2);\n\n          if (aValue[15] && aValue[15] === 'Z') {\n            result += 'Z';\n          }\n\n          return result;\n        }\n      },\n\n      toICAL: function(aValue) {\n        // from: 2012-09-01T13:00:00\n        // to: 20120901T130000\n        var len = aValue.length;\n\n        if (len == 10 && !design.strict) {\n          return icalValues.date.toICAL(aValue);\n        } else if (len >= 19) {\n          var result = aValue.substr(0, 4) +\n                       aValue.substr(5, 2) +\n                       // grab the (DDTHH) segment\n                       aValue.substr(8, 5) +\n                       // MM\n                       aValue.substr(14, 2) +\n                       // SS\n                       aValue.substr(17, 2);\n\n          if (aValue[19] && aValue[19] === 'Z') {\n            result += 'Z';\n          }\n          return result;\n        } else {\n          // TODO: error\n          return aValue;\n        }\n      },\n\n      decorate: function(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateTimeString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    duration: {\n      decorate: function(aValue) {\n        return ICAL.Duration.fromString(aValue);\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    },\n    period: {\n\n      fromICAL: function(string) {\n        var parts = string.split('/');\n        parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n        }\n\n        return parts;\n      },\n\n      toICAL: function(parts) {\n        if (!design.strict && parts[0].length == 10) {\n          parts[0] = icalValues.date.toICAL(parts[0]);\n        } else {\n          parts[0] = icalValues['date-time'].toICAL(parts[0]);\n        }\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          if (!design.strict && parts[1].length == 10) {\n            parts[1] = icalValues.date.toICAL(parts[1]);\n          } else {\n            parts[1] = icalValues['date-time'].toICAL(parts[1]);\n          }\n        }\n\n        return parts.join(\"/\");\n      },\n\n      decorate: function(aValue, aProp) {\n        return ICAL.Period.fromJSON(aValue, aProp, !design.strict);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toJSON();\n      }\n    },\n    recur: {\n      fromICAL: function(string) {\n        return ICAL.Recur._stringToData(string, true);\n      },\n\n      toICAL: function(data) {\n        var str = \"\";\n        for (var k in data) {\n          /* istanbul ignore if */\n          if (!Object.prototype.hasOwnProperty.call(data, k)) {\n            continue;\n          }\n          var val = data[k];\n          if (k == \"until\") {\n            if (val.length > 10) {\n              val = icalValues['date-time'].toICAL(val);\n            } else {\n              val = icalValues.date.toICAL(val);\n            }\n          } else if (k == \"wkst\") {\n            if (typeof val === 'number') {\n              val = ICAL.Recur.numericDayToIcalDay(val);\n            }\n          } else if (Array.isArray(val)) {\n            val = val.join(\",\");\n          }\n          str += k.toUpperCase() + \"=\" + val + \";\";\n        }\n        return str.substr(0, str.length - 1);\n      },\n\n      decorate: function decorate(aValue) {\n        return ICAL.Recur.fromData(aValue);\n      },\n\n      undecorate: function(aRecur) {\n        return aRecur.toJSON();\n      }\n    },\n\n    time: {\n      fromICAL: function(aValue) {\n        // from: MMHHSS(Z)?\n        // to: HH:MM:SS(Z)?\n        if (aValue.length < 6) {\n          // TODO: parser exception?\n          return aValue;\n        }\n\n        // HH::MM::SSZ?\n        var result = aValue.substr(0, 2) + ':' +\n                     aValue.substr(2, 2) + ':' +\n                     aValue.substr(4, 2);\n\n        if (aValue[6] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n\n      toICAL: function(aValue) {\n        // from: HH:MM:SS(Z)?\n        // to: MMHHSS(Z)?\n        if (aValue.length < 8) {\n          //TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 2) +\n                     aValue.substr(3, 2) +\n                     aValue.substr(6, 2);\n\n        if (aValue[8] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    }\n  });\n\n  var icalProperties = ICAL.helpers.extend(commonProperties, {\n\n    \"action\": DEFAULT_TYPE_TEXT,\n    \"attach\": { defaultType: \"uri\" },\n    \"attendee\": { defaultType: \"cal-address\" },\n    \"calscale\": DEFAULT_TYPE_TEXT,\n    \"class\": DEFAULT_TYPE_TEXT,\n    \"comment\": DEFAULT_TYPE_TEXT,\n    \"completed\": DEFAULT_TYPE_DATETIME,\n    \"contact\": DEFAULT_TYPE_TEXT,\n    \"created\": DEFAULT_TYPE_DATETIME,\n    \"description\": DEFAULT_TYPE_TEXT,\n    \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n    \"dtstamp\": DEFAULT_TYPE_DATETIME,\n    \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n    \"due\": DEFAULT_TYPE_DATETIME_DATE,\n    \"duration\": { defaultType: \"duration\" },\n    \"exdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      multiValue: ','\n    },\n    \"exrule\": DEFAULT_TYPE_RECUR,\n    \"freebusy\": { defaultType: \"period\", multiValue: \",\" },\n    \"geo\": { defaultType: \"float\", structuredValue: \";\" },\n    \"last-modified\": DEFAULT_TYPE_DATETIME,\n    \"location\": DEFAULT_TYPE_TEXT,\n    \"method\": DEFAULT_TYPE_TEXT,\n    \"organizer\": { defaultType: \"cal-address\" },\n    \"percent-complete\": DEFAULT_TYPE_INTEGER,\n    \"priority\": DEFAULT_TYPE_INTEGER,\n    \"prodid\": DEFAULT_TYPE_TEXT,\n    \"related-to\": DEFAULT_TYPE_TEXT,\n    \"repeat\": DEFAULT_TYPE_INTEGER,\n    \"rdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\", \"period\"],\n      multiValue: ',',\n      detectType: function(string) {\n        if (string.indexOf('/') !== -1) {\n          return 'period';\n        }\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n    \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n    \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"rrule\": DEFAULT_TYPE_RECUR,\n    \"sequence\": DEFAULT_TYPE_INTEGER,\n    \"status\": DEFAULT_TYPE_TEXT,\n    \"summary\": DEFAULT_TYPE_TEXT,\n    \"transp\": DEFAULT_TYPE_TEXT,\n    \"trigger\": { defaultType: \"duration\", allowedTypes: [\"duration\", \"date-time\"] },\n    \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzurl\": DEFAULT_TYPE_URI,\n    \"tzid\": DEFAULT_TYPE_TEXT,\n    \"tzname\": DEFAULT_TYPE_TEXT\n  });\n\n  // When adding a value here, be sure to add it to the parameter types!\n  var vcardValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n\n    date: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        if (aValue.length == 8) {\n          return icalValues.date.fromICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 6) {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4);\n        } else {\n          return aValue;\n        }\n      },\n      toICAL: function(aValue) {\n        if (aValue.length == 10) {\n          return icalValues.date.toICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 7) {\n          return aValue.substr(0, 4) + aValue.substr(5);\n        } else {\n          return aValue;\n        }\n      }\n    },\n\n    time: {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n      },\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue, true);\n        var zone = splitzone[0], value = splitzone[1];\n\n        //console.log(\"SPLIT: \",splitzone);\n\n        if (value.length == 6) {\n          value = value.substr(0, 2) + ':' +\n                  value.substr(2, 2) + ':' +\n                  value.substr(4, 2);\n        } else if (value.length == 4 && value[0] != '-') {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2);\n        } else if (value.length == 5) {\n          value = value.substr(0, 3) + ':' + value.substr(3, 2);\n        }\n\n        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + ':' + zone.substr(3);\n        }\n\n        return value + zone;\n      },\n\n      toICAL: function(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue);\n        var zone = splitzone[0], value = splitzone[1];\n\n        if (value.length == 8) {\n          value = value.substr(0, 2) +\n                  value.substr(3, 2) +\n                  value.substr(6, 2);\n        } else if (value.length == 5 && value[0] != '-') {\n          value = value.substr(0, 2) + value.substr(3, 2);\n        } else if (value.length == 6) {\n          value = value.substr(0, 3) + value.substr(4, 2);\n        }\n\n        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + zone.substr(4);\n        }\n\n        return value + zone;\n      },\n\n      _splitZone: function(aValue, isFromIcal) {\n        var lastChar = aValue.length - 1;\n        var signChar = aValue.length - (isFromIcal ? 5 : 6);\n        var sign = aValue[signChar];\n        var zone, value;\n\n        if (aValue[lastChar] == 'Z') {\n          zone = aValue[lastChar];\n          value = aValue.substr(0, lastChar);\n        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n          zone = aValue.substr(signChar);\n          value = aValue.substr(0, signChar);\n        } else {\n          zone = \"\";\n          value = aValue;\n        }\n\n        return [zone, value];\n      }\n    },\n\n    \"date-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].fromICAL(aValue);\n      },\n\n      toICAL: function(aValue) {\n        return vcardValues['date-and-or-time'].toICAL(aValue);\n      }\n    },\n\n    \"date-and-or-time\": {\n      decorate: function(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      },\n\n      fromICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') +\n               (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n      },\n\n      toICAL: function(aValue) {\n        var parts = aValue.split('T');\n        return vcardValues.date.toICAL(parts[0]) +\n               (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n\n      }\n    },\n    timestamp: icalValues['date-time'],\n    \"language-tag\": {\n      matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n    }\n  });\n\n  var vcardParams = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\",\n               \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\",\n               \"language-tag\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcardProperties = ICAL.helpers.extend(commonProperties, {\n    \"adr\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"caladruri\": DEFAULT_TYPE_URI,\n    \"caluri\": DEFAULT_TYPE_URI,\n    \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"email\": DEFAULT_TYPE_TEXT,\n    \"fburl\": DEFAULT_TYPE_URI,\n    \"fn\": DEFAULT_TYPE_TEXT,\n    \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"geo\": DEFAULT_TYPE_URI,\n    \"impp\": DEFAULT_TYPE_URI,\n    \"key\": DEFAULT_TYPE_URI,\n    \"kind\": DEFAULT_TYPE_TEXT,\n    \"lang\": { defaultType: \"language-tag\" },\n    \"logo\": DEFAULT_TYPE_URI,\n    \"member\": DEFAULT_TYPE_URI,\n    \"n\": { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n    \"note\": DEFAULT_TYPE_TEXT,\n    \"org\": { defaultType: \"text\", structuredValue: \";\" },\n    \"photo\": DEFAULT_TYPE_URI,\n    \"related\": DEFAULT_TYPE_URI,\n    \"rev\": { defaultType: \"timestamp\" },\n    \"role\": DEFAULT_TYPE_TEXT,\n    \"sound\": DEFAULT_TYPE_URI,\n    \"source\": DEFAULT_TYPE_URI,\n    \"tel\": { defaultType: \"uri\", allowedTypes: [\"uri\", \"text\"] },\n    \"title\": DEFAULT_TYPE_TEXT,\n    \"tz\": { defaultType: \"text\", allowedTypes: [\"text\", \"utc-offset\", \"uri\"] },\n    \"xml\": DEFAULT_TYPE_TEXT\n  });\n\n  var vcard3Values = ICAL.helpers.extend(commonValues, {\n    binary: icalValues.binary,\n    date: vcardValues.date,\n    \"date-time\": vcardValues[\"date-time\"],\n    \"phone-number\": {\n      // TODO\n      /* ... */\n    },\n    uri: icalValues.uri,\n    text: icalValues.text,\n    time: icalValues.time,\n    vcard: icalValues.text,\n    \"utc-offset\": {\n      toICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      fromICAL: function(aValue) {\n        return aValue.substr(0, 7);\n      },\n\n      decorate: function(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n\n      undecorate: function(aValue) {\n        return aValue.toString();\n      }\n    }\n  });\n\n  var vcard3Params = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\",\n               \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n\n  var vcard3Properties = ICAL.helpers.extend(commonProperties, {\n    fn: DEFAULT_TYPE_TEXT,\n    n: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    nickname: DEFAULT_TYPE_TEXT_MULTI,\n    photo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    bday: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n\n    adr: { defaultType: \"text\", structuredValue: \";\", multiValue: \",\" },\n    label: DEFAULT_TYPE_TEXT,\n\n    tel: { defaultType: \"phone-number\" },\n    email: DEFAULT_TYPE_TEXT,\n    mailer: DEFAULT_TYPE_TEXT,\n\n    tz: { defaultType: \"utc-offset\", allowedTypes: [\"utc-offset\", \"text\"] },\n    geo: { defaultType: \"float\", structuredValue: \";\" },\n\n    title: DEFAULT_TYPE_TEXT,\n    role: DEFAULT_TYPE_TEXT,\n    logo: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n    agent: { defaultType: \"vcard\", allowedTypes: [\"vcard\", \"text\", \"uri\"] },\n    org: DEFAULT_TYPE_TEXT_STRUCTURED,\n\n    note: DEFAULT_TYPE_TEXT_MULTI,\n    prodid: DEFAULT_TYPE_TEXT,\n    rev: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function(string) {\n        return (string.indexOf('T') === -1) ? 'date' : 'date-time';\n      }\n    },\n    \"sort-string\": DEFAULT_TYPE_TEXT,\n    sound: { defaultType: \"binary\", allowedTypes: [\"binary\", \"uri\"] },\n\n    class: DEFAULT_TYPE_TEXT,\n    key: { defaultType: \"binary\", allowedTypes: [\"binary\", \"text\"] }\n  });\n\n  /**\n   * iCalendar design set\n   * @type {ICAL.design.designSet}\n   */\n  var icalSet = {\n    value: icalValues,\n    param: icalParams,\n    property: icalProperties\n  };\n\n  /**\n   * vCard 4.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcardSet = {\n    value: vcardValues,\n    param: vcardParams,\n    property: vcardProperties\n  };\n\n  /**\n   * vCard 3.0 design set\n   * @type {ICAL.design.designSet}\n   */\n  var vcard3Set = {\n    value: vcard3Values,\n    param: vcard3Params,\n    property: vcard3Properties\n  };\n\n  /**\n   * The design data, used by the parser to determine types for properties and\n   * other metadata needed to produce correct jCard/jCal data.\n   *\n   * @alias ICAL.design\n   * @namespace\n   */\n  var design = {\n    /**\n     * A designSet describes value, parameter and property data. It is used by\n     * ther parser and stringifier in components and properties to determine they\n     * should be represented.\n     *\n     * @typedef {Object} designSet\n     * @memberOf ICAL.design\n     * @property {Object} value       Definitions for value types, keys are type names\n     * @property {Object} param       Definitions for params, keys are param names\n     * @property {Object} property    Defintions for properties, keys are property names\n     */\n\n    /**\n     * Can be set to false to make the parser more lenient.\n     */\n    strict: true,\n\n    /**\n     * The default set for new properties and components if none is specified.\n     * @type {ICAL.design.designSet}\n     */\n    defaultSet: icalSet,\n\n    /**\n     * The default type for unknown properties\n     * @type {String}\n     */\n    defaultType: 'unknown',\n\n    /**\n     * Holds the design set for known top-level components\n     *\n     * @type {Object}\n     * @property {ICAL.design.designSet} vcard       vCard VCARD\n     * @property {ICAL.design.designSet} vevent      iCalendar VEVENT\n     * @property {ICAL.design.designSet} vtodo       iCalendar VTODO\n     * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL\n     * @property {ICAL.design.designSet} valarm      iCalendar VALARM\n     * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE\n     * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT\n     * @property {ICAL.design.designSet} standard    iCalendar STANDARD\n     *\n     * @example\n     * var propertyName = 'fn';\n     * var componentDesign = ICAL.design.components.vcard;\n     * var propertyDetails = componentDesign.property[propertyName];\n     * if (propertyDetails.defaultType == 'text') {\n     *   // Yep, sure is...\n     * }\n     */\n    components: {\n      vcard: vcardSet,\n      vcard3: vcard3Set,\n      vevent: icalSet,\n      vtodo: icalSet,\n      vjournal: icalSet,\n      valarm: icalSet,\n      vtimezone: icalSet,\n      daylight: icalSet,\n      standard: icalSet\n    },\n\n\n    /**\n     * The design set for iCalendar (rfc5545/rfc7265) components.\n     * @type {ICAL.design.designSet}\n     */\n    icalendar: icalSet,\n\n    /**\n     * The design set for vCard (rfc6350/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard: vcardSet,\n\n    /**\n     * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard3: vcard3Set,\n\n    /**\n     * Gets the design set for the given component name.\n     *\n     * @param {String} componentName        The name of the component\n     * @return {ICAL.design.designSet}      The design set for the component\n     */\n    getDesignSet: function(componentName) {\n      var isInDesign = componentName && componentName in design.components;\n      return isInDesign ? design.components[componentName] : design.defaultSet;\n    }\n  };\n\n  return design;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to convert jCal and jCard data back into\n * iCalendar and vCard.\n * @namespace\n */\nICAL.stringify = (function() {\n  'use strict';\n\n  var LINE_ENDING = '\\r\\n';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * Convert a full jCal/jCard array into a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify\n   * @variation function\n   * @param {Array} jCal    The jCal/jCard document\n   * @return {String}       The stringified iCalendar/vCard document\n   */\n  function stringify(jCal) {\n    if (typeof jCal[0] == \"string\") {\n      // This is a single component\n      jCal = [jCal];\n    }\n\n    var i = 0;\n    var len = jCal.length;\n    var result = '';\n\n    for (; i < len; i++) {\n      result += stringify.component(jCal[i]) + LINE_ENDING;\n    }\n\n    return result;\n  }\n\n  /**\n   * Converts an jCal component array into a ICAL string.\n   * Recursive will resolve sub-components.\n   *\n   * Exact component/property order is not saved all\n   * properties will come before subcomponents.\n   *\n   * @function ICAL.stringify.component\n   * @param {Array} component\n   *        jCal/jCard fragment of a component\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this component\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.component = function(component, designSet) {\n    var name = component[0].toUpperCase();\n    var result = 'BEGIN:' + name + LINE_ENDING;\n\n    var props = component[1];\n    var propIdx = 0;\n    var propLen = props.length;\n\n    var designSetName = component[0];\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (designSetName === 'vcard' && component[1].length > 0 &&\n            !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n      designSetName = \"vcard3\";\n    }\n    designSet = designSet || design.getDesignSet(designSetName);\n\n    for (; propIdx < propLen; propIdx++) {\n      result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n    }\n\n    // Ignore subcomponents if none exist, e.g. in vCard.\n    var comps = component[2] || [];\n    var compIdx = 0;\n    var compLen = comps.length;\n\n    for (; compIdx < compLen; compIdx++) {\n      result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n    }\n\n    result += 'END:' + name;\n    return result;\n  };\n\n  /**\n   * Converts a single jCal/jCard property to a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify.property\n   * @param {Array} property\n   *        jCal/jCard property array\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   * @param {Boolean} noFold\n   *        If true, the line is not folded\n   * @return {String}       The iCalendar/vCard string\n   */\n  stringify.property = function(property, designSet, noFold) {\n    var name = property[0].toUpperCase();\n    var jsName = property[0];\n    var params = property[1];\n\n    var line = name;\n\n    var paramName;\n    for (paramName in params) {\n      var value = params[paramName];\n\n      /* istanbul ignore else */\n      if (params.hasOwnProperty(paramName)) {\n        var multiValue = (paramName in designSet.param) && designSet.param[paramName].multiValue;\n        if (multiValue && Array.isArray(value)) {\n          if (designSet.param[paramName].multiValueSeparateDQuote) {\n            multiValue = '\"' + multiValue + '\"';\n          }\n          value = value.map(stringify._rfc6868Unescape);\n          value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n        } else {\n          value = stringify._rfc6868Unescape(value);\n        }\n\n\n        line += ';' + paramName.toUpperCase();\n        line += '=' + stringify.propertyValue(value);\n      }\n    }\n\n    if (property.length === 3) {\n      // If there are no values, we must assume a blank value\n      return line + ':';\n    }\n\n    var valueType = property[2];\n\n    if (!designSet) {\n      designSet = design.defaultSet;\n    }\n\n    var propDetails;\n    var multiValue = false;\n    var structuredValue = false;\n    var isDefault = false;\n\n    if (jsName in designSet.property) {\n      propDetails = designSet.property[jsName];\n\n      if ('multiValue' in propDetails) {\n        multiValue = propDetails.multiValue;\n      }\n\n      if (('structuredValue' in propDetails) && Array.isArray(property[3])) {\n        structuredValue = propDetails.structuredValue;\n      }\n\n      if ('defaultType' in propDetails) {\n        if (valueType === propDetails.defaultType) {\n          isDefault = true;\n        }\n      } else {\n        if (valueType === DEFAULT_VALUE_TYPE) {\n          isDefault = true;\n        }\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    }\n\n    // push the VALUE property if type is not the default\n    // for the current property.\n    if (!isDefault) {\n      // value will never contain ;/:/, so we don't escape it here.\n      line += ';VALUE=' + valueType.toUpperCase();\n    }\n\n    line += ':';\n\n    if (multiValue && structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, multiValue, designSet, structuredValue\n      );\n    } else if (multiValue) {\n      line += stringify.multiValue(\n        property.slice(3), multiValue, valueType, null, designSet, false\n      );\n    } else if (structuredValue) {\n      line += stringify.multiValue(\n        property[3], structuredValue, valueType, null, designSet, structuredValue\n      );\n    } else {\n      line += stringify.value(property[3], valueType, designSet, false);\n    }\n\n    return noFold ? line : ICAL.helpers.foldline(line);\n  };\n\n  /**\n   * Handles escaping of property values that may contain:\n   *\n   *    COLON (:), SEMICOLON (;), or COMMA (,)\n   *\n   * If any of the above are present the result is wrapped\n   * in double quotes.\n   *\n   * @function ICAL.stringify.propertyValue\n   * @param {String} value      Raw property value\n   * @return {String}           Given or escaped value when needed\n   */\n  stringify.propertyValue = function(value) {\n\n    if ((helpers.unescapedIndexOf(value, ',') === -1) &&\n        (helpers.unescapedIndexOf(value, ':') === -1) &&\n        (helpers.unescapedIndexOf(value, ';') === -1)) {\n\n      return value;\n    }\n\n    return '\"' + value + '\"';\n  };\n\n  /**\n   * Converts an array of ical values into a single\n   * string based on a type and a delimiter value (like \",\").\n   *\n   * @function ICAL.stringify.multiValue\n   * @param {Array} values      List of values to convert\n   * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n   * @param {String} type       Lowecase ical value type\n   *        (like boolean, date-time, etc..)\n   * @param {?String} innerMulti If set, each value will again be processed\n   *        Used for structured values\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   *\n   * @return {String}           iCalendar/vCard string for value\n   */\n  stringify.multiValue = function(values, delim, type, innerMulti, designSet, structuredValue) {\n    var result = '';\n    var len = values.length;\n    var i = 0;\n\n    for (; i < len; i++) {\n      if (innerMulti && Array.isArray(values[i])) {\n        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n      } else {\n        result += stringify.value(values[i], type, designSet, structuredValue);\n      }\n\n      if (i !== (len - 1)) {\n        result += delim;\n      }\n    }\n\n    return result;\n  };\n\n  /**\n   * Processes a single ical value runs the associated \"toICAL\" method from the\n   * design value type if available to convert the value.\n   *\n   * @function ICAL.stringify.value\n   * @param {String|Number} value       A formatted value\n   * @param {String} type               Lowercase iCalendar/vCard value type\n   *  (like boolean, date-time, etc..)\n   * @return {String}                   iCalendar/vCard value for single value\n   */\n  stringify.value = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n      return designSet.value[type].toICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @param {String} val        The value to unescape\n   * @return {String}           The escaped value\n   */\n  stringify._rfc6868Unescape = function(val) {\n    return val.replace(/[\\n^\"]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { '\"': \"^'\", \"\\n\": \"^n\", \"^\": \"^^\" };\n\n  return stringify;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * Contains various functions to parse iCalendar and vCard data.\n * @namespace\n */\nICAL.parse = (function() {\n  'use strict';\n\n  var CHAR = /[^ \\t]/;\n  var MULTIVALUE_DELIMITER = ',';\n  var VALUE_DELIMITER = ':';\n  var PARAM_DELIMITER = ';';\n  var PARAM_NAME_DELIMITER = '=';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var DEFAULT_PARAM_TYPE = 'text';\n\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n\n  /**\n   * An error that occurred during parsing.\n   *\n   * @param {String} message        The error message\n   * @memberof ICAL.parse\n   * @extends {Error}\n   * @class\n   */\n  function ParserError(message) {\n    this.message = message;\n    this.name = 'ParserError';\n\n    try {\n      throw new Error();\n    } catch (e) {\n      if (e.stack) {\n        var split = e.stack.split('\\n');\n        split.shift();\n        this.stack = split.join('\\n');\n      }\n    }\n  }\n\n  ParserError.prototype = Error.prototype;\n\n  /**\n   * Parses iCalendar or vCard data into a raw jCal object. Consult\n   * documentation on the {@tutorial layers|layers of parsing} for more\n   * details.\n   *\n   * @function ICAL.parse\n   * @variation function\n   * @todo Fix the API to be more clear on the return type\n   * @param {String} input      The string data to parse\n   * @return {Object|Object[]}  A single jCal object, or an array thereof\n   */\n  function parser(input) {\n    var state = {};\n    var root = state.component = [];\n\n    state.stack = [root];\n\n    parser._eachLine(input, function(err, line) {\n      parser._handleContentLine(line, state);\n    });\n\n\n    // when there are still items on the stack\n    // throw a fatal error, a component was not closed\n    // correctly in that case.\n    if (state.stack.length > 1) {\n      throw new ParserError(\n        'invalid ical body. component began but did not end'\n      );\n    }\n\n    state = null;\n\n    return (root.length == 1 ? root[0] : root);\n  }\n\n  /**\n   * Parse an iCalendar property value into the jCal for a single property\n   *\n   * @function ICAL.parse.property\n   * @param {String} str\n   *   The iCalendar property string to parse\n   * @param {ICAL.design.designSet=} designSet\n   *   The design data to use for this property\n   * @return {Object}\n   *   The jCal Object containing the property\n   */\n  parser.property = function(str, designSet) {\n    var state = {\n      component: [[], []],\n      designSet: designSet || design.defaultSet\n    };\n    parser._handleContentLine(str, state);\n    return state.component[1][0];\n  };\n\n  /**\n   * Convenience method to parse a component. You can use ICAL.parse() directly\n   * instead.\n   *\n   * @function ICAL.parse.component\n   * @see ICAL.parse(function)\n   * @param {String} str    The iCalendar component string to parse\n   * @return {Object}       The jCal Object containing the component\n   */\n  parser.component = function(str) {\n    return parser(str);\n  };\n\n  // classes & constants\n  parser.ParserError = ParserError;\n\n  /**\n   * The state for parsing content lines from an iCalendar/vCard string.\n   *\n   * @private\n   * @memberof ICAL.parse\n   * @typedef {Object} parserState\n   * @property {ICAL.design.designSet} designSet    The design set to use for parsing\n   * @property {ICAL.Component[]} stack             The stack of components being processed\n   * @property {ICAL.Component} component           The currently active component\n   */\n\n\n  /**\n   * Handles a single line of iCalendar/vCard, updating the state.\n   *\n   * @private\n   * @function ICAL.parse._handleContentLine\n   * @param {String} line               The content line to process\n   * @param {ICAL.parse.parserState}    The current state of the line parsing\n   */\n  parser._handleContentLine = function(line, state) {\n    // break up the parts of the line\n    var valuePos = line.indexOf(VALUE_DELIMITER);\n    var paramPos = line.indexOf(PARAM_DELIMITER);\n\n    var lastParamIndex;\n    var lastValuePos;\n\n    // name of property or begin/end\n    var name;\n    var value;\n    // params is only overridden if paramPos !== -1.\n    // we can't do params = params || {} later on\n    // because it sacrifices ops.\n    var params = {};\n\n    /**\n     * Different property cases\n     *\n     *\n     * 1. RRULE:FREQ=foo\n     *    // FREQ= is not a param but the value\n     *\n     * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n     *    // ROLE= is a param because : has not happened yet\n     */\n      // when the parameter delimiter is after the\n      // value delimiter then it is not a parameter.\n\n    if ((paramPos !== -1 && valuePos !== -1)) {\n      // when the parameter delimiter is after the\n      // value delimiter then it is not a parameter.\n      if (paramPos > valuePos) {\n        paramPos = -1;\n      }\n    }\n\n    var parsedParams;\n    if (paramPos !== -1) {\n      name = line.substring(0, paramPos).toLowerCase();\n      parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);\n      if (parsedParams[2] == -1) {\n        throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n      }\n      params = parsedParams[0];\n      lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n      if ((lastValuePos =\n        line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {\n        value = line.substring(lastParamIndex + lastValuePos + 1);\n      } else {\n        throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n      }\n    } else if (valuePos !== -1) {\n      // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n      name = line.substring(0, valuePos).toLowerCase();\n      value = line.substring(valuePos + 1);\n\n      if (name === 'begin') {\n        var newComponent = [value.toLowerCase(), [], []];\n        if (state.stack.length === 1) {\n          state.component.push(newComponent);\n        } else {\n          state.component[2].push(newComponent);\n        }\n        state.stack.push(state.component);\n        state.component = newComponent;\n        if (!state.designSet) {\n          state.designSet = design.getDesignSet(state.component[0]);\n        }\n        return;\n      } else if (name === 'end') {\n        state.component = state.stack.pop();\n        return;\n      }\n      // If it is not begin/end, then this is a property with an empty value,\n      // which should be considered valid.\n    } else {\n      /**\n       * Invalid line.\n       * The rational to throw an error is we will\n       * never be certain that the rest of the file\n       * is sane and it is unlikely that we can serialize\n       * the result correctly either.\n       */\n      throw new ParserError(\n        'invalid line (no token \";\" or \":\") \"' + line + '\"'\n      );\n    }\n\n    var valueType;\n    var multiValue = false;\n    var structuredValue = false;\n    var propertyDetails;\n\n    if (name in state.designSet.property) {\n      propertyDetails = state.designSet.property[name];\n\n      if ('multiValue' in propertyDetails) {\n        multiValue = propertyDetails.multiValue;\n      }\n\n      if ('structuredValue' in propertyDetails) {\n        structuredValue = propertyDetails.structuredValue;\n      }\n\n      if (value && 'detectType' in propertyDetails) {\n        valueType = propertyDetails.detectType(value);\n      }\n    }\n\n    // attempt to determine value\n    if (!valueType) {\n      if (!('value' in params)) {\n        if (propertyDetails) {\n          valueType = propertyDetails.defaultType;\n        } else {\n          valueType = DEFAULT_VALUE_TYPE;\n        }\n      } else {\n        // possible to avoid this?\n        valueType = params.value.toLowerCase();\n      }\n    }\n\n    delete params.value;\n\n    /**\n     * Note on `var result` juggling:\n     *\n     * I observed that building the array in pieces has adverse\n     * effects on performance, so where possible we inline the creation.\n     * It is a little ugly but resulted in ~2000 additional ops/sec.\n     */\n\n    var result;\n    if (multiValue && structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else if (multiValue) {\n      result = [name, params, valueType];\n      parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n    } else if (structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else {\n      value = parser._parseValue(value, valueType, state.designSet, false);\n      result = [name, params, valueType, value];\n    }\n    // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n    if (state.component[0] === 'vcard' && state.component[1].length === 0 &&\n            !(name === 'version' && value === '4.0')) {\n      state.designSet = design.getDesignSet(\"vcard3\");\n    }\n    state.component[1].push(result);\n  };\n\n  /**\n   * Parse a value from the raw value into the jCard/jCal value.\n   *\n   * @private\n   * @function ICAL.parse._parseValue\n   * @param {String} value          Original value\n   * @param {String} type           Type of value\n   * @param {Object} designSet      The design data to use for this value\n   * @return {Object} varies on type\n   */\n  parser._parseValue = function(value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n      return designSet.value[type].fromICAL(value, structuredValue);\n    }\n    return value;\n  };\n\n  /**\n   * Parse parameters from a string to object.\n   *\n   * @function ICAL.parse._parseParameters\n   * @private\n   * @param {String} line           A single unfolded line\n   * @param {Numeric} start         Position to start looking for properties\n   * @param {Object} designSet      The design data to use for this property\n   * @return {Object} key/value pairs\n   */\n  parser._parseParameters = function(line, start, designSet) {\n    var lastParam = start;\n    var pos = 0;\n    var delim = PARAM_NAME_DELIMITER;\n    var result = {};\n    var name, lcname;\n    var value, valuePos = -1;\n    var type, multiValue, mvdelim;\n\n    // find the next '=' sign\n    // use lastParam and pos to find name\n    // check if \" is used if so get value from \"->\"\n    // then increment pos to find next ;\n\n    while ((pos !== false) &&\n           (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {\n\n      name = line.substr(lastParam + 1, pos - lastParam - 1);\n      if (name.length == 0) {\n        throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n      }\n      lcname = name.toLowerCase();\n      mvdelim = false;\n      multiValue = false;\n\n      if (lcname in designSet.param && designSet.param[lcname].valueType) {\n        type = designSet.param[lcname].valueType;\n      } else {\n        type = DEFAULT_PARAM_TYPE;\n      }\n\n      if (lcname in designSet.param) {\n        multiValue = designSet.param[lcname].multiValue;\n        if (designSet.param[lcname].multiValueSeparateDQuote) {\n          mvdelim = parser._rfc6868Escape('\"' + multiValue + '\"');\n        }\n      }\n\n      var nextChar = line[pos + 1];\n      if (nextChar === '\"') {\n        valuePos = pos + 2;\n        pos = helpers.unescapedIndexOf(line, '\"', valuePos);\n        if (multiValue && pos != -1) {\n            var extendedValue = true;\n            while (extendedValue) {\n              if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n                pos = helpers.unescapedIndexOf(line, '\"', pos + 3);\n              } else {\n                extendedValue = false;\n              }\n            }\n          }\n        if (pos === -1) {\n          throw new ParserError(\n            'invalid line (no matching double quote) \"' + line + '\"'\n          );\n        }\n        value = line.substr(valuePos, pos - valuePos);\n        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);\n        if (lastParam === -1) {\n          pos = false;\n        }\n      } else {\n        valuePos = pos + 1;\n\n        // move to next \";\"\n        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);\n        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);\n        if (propValuePos !== -1 && nextPos > propValuePos) {\n          // this is a delimiter in the property value, let's stop here\n          nextPos = propValuePos;\n          pos = false;\n        } else if (nextPos === -1) {\n          // no \";\"\n          if (propValuePos === -1) {\n            nextPos = line.length;\n          } else {\n            nextPos = propValuePos;\n          }\n          pos = false;\n        } else {\n          lastParam = nextPos;\n          pos = nextPos;\n        }\n\n        value = line.substr(valuePos, nextPos - valuePos);\n      }\n\n      value = parser._rfc6868Escape(value);\n      if (multiValue) {\n        var delimiter = mvdelim || multiValue;\n        value = parser._parseMultiValue(value, delimiter, type, [], null, designSet);\n      } else {\n        value = parser._parseValue(value, type, designSet);\n      }\n\n      if (multiValue && (lcname in result)) {\n        if (Array.isArray(result[lcname])) {\n          result[lcname].push(value);\n        } else {\n          result[lcname] = [\n            result[lcname],\n            value\n          ];\n        }\n      } else {\n        result[lcname] = value;\n      }\n    }\n    return [result, value, valuePos];\n  };\n\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @function ICAL.parse._rfc6868Escape\n   * @param {String} val        The value to escape\n   * @return {String}           The escaped value\n   */\n  parser._rfc6868Escape = function(val) {\n    return val.replace(/\\^['n^]/g, function(x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n  var RFC6868_REPLACE_MAP = { \"^'\": '\"', \"^n\": \"\\n\", \"^^\": \"^\" };\n\n  /**\n   * Parse a multi value string. This function is used either for parsing\n   * actual multi-value property's values, or for handling parameter values. It\n   * can be used for both multi-value properties and structured value properties.\n   *\n   * @private\n   * @function ICAL.parse._parseMultiValue\n   * @param {String} buffer     The buffer containing the full value\n   * @param {String} delim      The multi-value delimiter\n   * @param {String} type       The value type to be parsed\n   * @param {Array.<?>} result        The array to append results to, varies on value type\n   * @param {String} innerMulti The inner delimiter to split each value with\n   * @param {ICAL.design.designSet} designSet   The design data for this value\n   * @return {?|Array.<?>}            Either an array of results, or the first result\n   */\n  parser._parseMultiValue = function(buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n    var pos = 0;\n    var lastPos = 0;\n    var value;\n    if (delim.length === 0) {\n      return buffer;\n    }\n\n    // split each piece\n    while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n      value = buffer.substr(lastPos, pos - lastPos);\n      if (innerMulti) {\n        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n      } else {\n        value = parser._parseValue(value, type, designSet, structuredValue);\n      }\n      result.push(value);\n      lastPos = pos + delim.length;\n    }\n\n    // on the last piece take the rest of string\n    value = buffer.substr(lastPos);\n    if (innerMulti) {\n      value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parser._parseValue(value, type, designSet, structuredValue);\n    }\n    result.push(value);\n\n    return result.length == 1 ? result[0] : result;\n  };\n\n  /**\n   * Process a complete buffer of iCalendar/vCard data line by line, correctly\n   * unfolding content. Each line will be processed with the given callback\n   *\n   * @private\n   * @function ICAL.parse._eachLine\n   * @param {String} buffer                         The buffer to process\n   * @param {function(?String, String)} callback    The callback for each line\n   */\n  parser._eachLine = function(buffer, callback) {\n    var len = buffer.length;\n    var lastPos = buffer.search(CHAR);\n    var pos = lastPos;\n    var line;\n    var firstChar;\n\n    var newlineOffset;\n\n    do {\n      pos = buffer.indexOf('\\n', lastPos) + 1;\n\n      if (pos > 1 && buffer[pos - 2] === '\\r') {\n        newlineOffset = 2;\n      } else {\n        newlineOffset = 1;\n      }\n\n      if (pos === 0) {\n        pos = len;\n        newlineOffset = 0;\n      }\n\n      firstChar = buffer[lastPos];\n\n      if (firstChar === ' ' || firstChar === '\\t') {\n        // add to line\n        line += buffer.substr(\n          lastPos + 1,\n          pos - lastPos - (newlineOffset + 1)\n        );\n      } else {\n        if (line)\n          callback(null, line);\n        // push line\n        line = buffer.substr(\n          lastPos,\n          pos - lastPos - newlineOffset\n        );\n      }\n\n      lastPos = pos;\n    } while (pos !== len);\n\n    // extra ending line\n    line = line.trim();\n\n    if (line.length)\n      callback(null, line);\n  };\n\n  return parser;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Component = (function() {\n  'use strict';\n\n  var PROPERTY_INDEX = 1;\n  var COMPONENT_INDEX = 2;\n  var NAME_INDEX = 0;\n\n  /**\n   * @classdesc\n   * Wraps a jCal component, adding convenience methods to add, remove and\n   * update subcomponents and properties.\n   *\n   * @class\n   * @alias ICAL.Component\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {ICAL.Component} parent     Parent component to associate\n   */\n  function Component(jCal, parent) {\n    if (typeof(jCal) === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    }\n\n    // mostly for legacy reasons.\n    this.jCal = jCal;\n\n    this.parent = parent || null;\n  }\n\n  Component.prototype = {\n    /**\n     * Hydrated properties are inserted into the _properties array at the same\n     * position as in the jCal array, so it is possible that the array contains\n     * undefined values for unhydrdated properties. To avoid iterating the\n     * array when checking if all properties have been hydrated, we save the\n     * count here.\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedPropertyCount: 0,\n\n    /**\n     * The same count as for _hydratedPropertyCount, but for subcomponents\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedComponentCount: 0,\n\n    /**\n     * The name of this component\n     * @readonly\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The design set for this component, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      var parentDesign = this.parent && this.parent._designSet;\n      return parentDesign || ICAL.design.getDesignSet(this.name);\n    },\n\n    _hydrateComponent: function(index) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (this._components[index]) {\n        return this._components[index];\n      }\n\n      var comp = new Component(\n        this.jCal[COMPONENT_INDEX][index],\n        this\n      );\n\n      this._hydratedComponentCount++;\n      return (this._components[index] = comp);\n    },\n\n    _hydrateProperty: function(index) {\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (this._properties[index]) {\n        return this._properties[index];\n      }\n\n      var prop = new ICAL.Property(\n        this.jCal[PROPERTY_INDEX][index],\n        this\n      );\n\n      this._hydratedPropertyCount++;\n      return (this._properties[index] = prop);\n    },\n\n    /**\n     * Finds first sub component, optionally filtered by name.\n     *\n     * @param {String=} name        Optional name to filter by\n     * @return {?ICAL.Component}     The found subcomponent\n     */\n    getFirstSubcomponent: function(name) {\n      if (name) {\n        var i = 0;\n        var comps = this.jCal[COMPONENT_INDEX];\n        var len = comps.length;\n\n        for (; i < len; i++) {\n          if (comps[i][NAME_INDEX] === name) {\n            var result = this._hydrateComponent(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[COMPONENT_INDEX].length) {\n          return this._hydrateComponent(0);\n        }\n      }\n\n      // ensure we return a value (strict mode)\n      return null;\n    },\n\n    /**\n     * Finds all sub components, optionally filtering by name.\n     *\n     * @param {String=} name            Optional name to filter by\n     * @return {ICAL.Component[]}       The found sub components\n     */\n    getAllSubcomponents: function(name) {\n      var jCalLen = this.jCal[COMPONENT_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var comps = this.jCal[COMPONENT_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === comps[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateComponent(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._components ||\n            (this._hydratedComponentCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateComponent(i);\n          }\n        }\n\n        return this._components || [];\n      }\n    },\n\n    /**\n     * Returns true when a named property exists.\n     *\n     * @param {String} name     The property name\n     * @return {Boolean}        True, when property is found\n     */\n    hasProperty: function(name) {\n      var props = this.jCal[PROPERTY_INDEX];\n      var len = props.length;\n\n      var i = 0;\n      for (; i < len; i++) {\n        // 0 is property name\n        if (props[i][NAME_INDEX] === name) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Finds the first property, optionally with the given name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {?ICAL.Property}     The found property\n     */\n    getFirstProperty: function(name) {\n      if (name) {\n        var i = 0;\n        var props = this.jCal[PROPERTY_INDEX];\n        var len = props.length;\n\n        for (; i < len; i++) {\n          if (props[i][NAME_INDEX] === name) {\n            var result = this._hydrateProperty(i);\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[PROPERTY_INDEX].length) {\n          return this._hydrateProperty(0);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns first property's value, if available.\n     *\n     * @param {String=} name    Lowercase property name\n     * @return {?String}        The found property value.\n     */\n    getFirstPropertyValue: function(name) {\n      var prop = this.getFirstProperty(name);\n      if (prop) {\n        return prop.getFirstValue();\n      }\n\n      return null;\n    },\n\n    /**\n     * Get all properties in the component, optionally filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {ICAL.Property[]}    List of properties\n     */\n    getAllProperties: function(name) {\n      var jCalLen = this.jCal[PROPERTY_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var props = this.jCal[PROPERTY_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === props[i][NAME_INDEX]) {\n            result.push(\n              this._hydrateProperty(i)\n            );\n          }\n        }\n        return result;\n      } else {\n        if (!this._properties ||\n            (this._hydratedPropertyCount !== jCalLen)) {\n          for (; i < jCalLen; i++) {\n            this._hydrateProperty(i);\n          }\n        }\n\n        return this._properties || [];\n      }\n    },\n\n    _removeObjectByIndex: function(jCalIndex, cache, index) {\n      cache = cache || [];\n      // remove cached version\n      if (cache[index]) {\n        var obj = cache[index];\n        if (\"parent\" in obj) {\n            obj.parent = null;\n        }\n      }\n\n      cache.splice(index, 1);\n\n      // remove it from the jCal\n      this.jCal[jCalIndex].splice(index, 1);\n    },\n\n    _removeObject: function(jCalIndex, cache, nameOrObject) {\n      var i = 0;\n      var objects = this.jCal[jCalIndex];\n      var len = objects.length;\n      var cached = this[cache];\n\n      if (typeof(nameOrObject) === 'string') {\n        for (; i < len; i++) {\n          if (objects[i][NAME_INDEX] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      } else if (cached) {\n        for (; i < len; i++) {\n          if (cached[i] && cached[i] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    _removeAllObjects: function(jCalIndex, cache, name) {\n      var cached = this[cache];\n\n      // Unfortunately we have to run through all children to reset their\n      // parent property.\n      var objects = this.jCal[jCalIndex];\n      var i = objects.length - 1;\n\n      // descending search required because splice\n      // is used and will effect the indices.\n      for (; i >= 0; i--) {\n        if (!name || objects[i][NAME_INDEX] === name) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n        }\n      }\n    },\n\n    /**\n     * Adds a single sub component.\n     *\n     * @param {ICAL.Component} component        The component to add\n     * @return {ICAL.Component}                 The passed in component\n     */\n    addSubcomponent: function(component) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (component.parent) {\n        component.parent.removeSubcomponent(component);\n      }\n\n      var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n      this._components[idx - 1] = component;\n      this._hydratedComponentCount++;\n      component.parent = this;\n      return component;\n    },\n\n    /**\n     * Removes a single component by name or the instance of a specific\n     * component.\n     *\n     * @param {ICAL.Component|String} nameOrComp    Name of component, or component\n     * @return {Boolean}                            True when comp is removed\n     */\n    removeSubcomponent: function(nameOrComp) {\n      var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n      if (removed) {\n        this._hydratedComponentCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all components or (if given) all components by a particular\n     * name.\n     *\n     * @param {String=} name            Lowercase component name\n     */\n    removeAllSubcomponents: function(name) {\n      var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n      this._hydratedComponentCount = 0;\n      return removed;\n    },\n\n    /**\n     * Adds an {@link ICAL.Property} to the component.\n     *\n     * @param {ICAL.Property} property      The property to add\n     * @return {ICAL.Property}              The passed in property\n     */\n    addProperty: function(property) {\n      if (!(property instanceof ICAL.Property)) {\n        throw new TypeError('must instance of ICAL.Property');\n      }\n\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (property.parent) {\n        property.parent.removeProperty(property);\n      }\n\n      var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n      this._properties[idx - 1] = property;\n      this._hydratedPropertyCount++;\n      property.parent = this;\n      return property;\n    },\n\n    /**\n     * Helper method to add a property with a value to the component.\n     *\n     * @param {String}               name         Property name to add\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    addPropertyWithValue: function(name, value) {\n      var prop = new ICAL.Property(name);\n      prop.setValue(value);\n\n      this.addProperty(prop);\n\n      return prop;\n    },\n\n    /**\n     * Helper method that will update or create a property of the given name\n     * and sets its value. If multiple properties with the given name exist,\n     * only the first is updated.\n     *\n     * @param {String}               name         Property name to update\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    updatePropertyWithValue: function(name, value) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        prop.setValue(value);\n      } else {\n        prop = this.addPropertyWithValue(name, value);\n      }\n\n      return prop;\n    },\n\n    /**\n     * Removes a single property by name or the instance of the specific\n     * property.\n     *\n     * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove\n     * @return {Boolean}                            True, when deleted\n     */\n    removeProperty: function(nameOrProp) {\n      var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n      if (removed) {\n        this._hydratedPropertyCount--;\n      }\n      return removed;\n    },\n\n    /**\n     * Removes all properties associated with this component, optionally\n     * filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {Boolean}            True, when deleted\n     */\n    removeAllProperties: function(name) {\n      var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n      this._hydratedPropertyCount = 0;\n      return removed;\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toString: function() {\n      return ICAL.stringify.component(\n        this.jCal, this._designSet\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n  Component.fromString = function(str) {\n    return new Component(ICAL.parse.component(str));\n  };\n\n  return Component;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Property = (function() {\n  'use strict';\n\n  var NAME_INDEX = 0;\n  var PROP_INDEX = 1;\n  var TYPE_INDEX = 2;\n  var VALUE_INDEX = 3;\n\n  var design = ICAL.design;\n\n  /**\n   * @classdesc\n   * Provides a layer on top of the raw jCal object for manipulating a single\n   * property, with its parameters and value.\n   *\n   * @description\n   * It is important to note that mutations done in the wrapper\n   * directly mutate the jCal object used to initialize.\n   *\n   * Can also be used to create new properties by passing\n   * the name of the property (as a String).\n   *\n   * @class\n   * @alias ICAL.Property\n   * @param {Array|String} jCal         Raw jCal representation OR\n   *  the new name of the property\n   *\n   * @param {ICAL.Component=} parent    Parent component\n   */\n  function Property(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof(jCal) === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n    this._updateType();\n  }\n\n  Property.prototype = {\n\n    /**\n     * The value type for this property\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n      return this.jCal[TYPE_INDEX];\n    },\n\n    /**\n     * The name of this property, in lowercase.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The parent component for this property.\n     * @type {ICAL.Component}\n     */\n    get parent() {\n      return this._parent;\n    },\n\n    set parent(p) {\n      // Before setting the parent, check if the design set has changed. If it\n      // has, we later need to update the type if it was unknown before.\n      var designSetChanged = !this._parent || (p && p._designSet != this._parent._designSet);\n\n      this._parent = p;\n\n      if (this.type == design.defaultType && designSetChanged) {\n        this.jCal[TYPE_INDEX] = this.getDefaultType();\n        this._updateType();\n      }\n\n      return p;\n    },\n\n    /**\n     * The design set for this property, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      return this.parent ? this.parent._designSet : design.defaultSet;\n    },\n\n    /**\n     * Updates the type metadata from the current jCal type and design set.\n     *\n     * @private\n     */\n    _updateType: function() {\n      var designSet = this._designSet;\n\n      if (this.type in designSet.value) {\n        var designType = designSet.value[this.type];\n\n        if ('decorate' in designSet.value[this.type]) {\n          this.isDecorated = true;\n        } else {\n          this.isDecorated = false;\n        }\n\n        if (this.name in designSet.property) {\n          this.isMultiValue = ('multiValue' in designSet.property[this.name]);\n          this.isStructuredValue = ('structuredValue' in designSet.property[this.name]);\n        }\n      }\n    },\n\n    /**\n     * Hydrate a single value. The act of hydrating means turning the raw jCal\n     * value into a potentially wrapped object, for example {@link ICAL.Time}.\n     *\n     * @private\n     * @param {Number} index        The index of the value to hydrate\n     * @return {Object}             The decorated value.\n     */\n    _hydrateValue: function(index) {\n      if (this._values && this._values[index]) {\n        return this._values[index];\n      }\n\n      // for the case where there is no value.\n      if (this.jCal.length <= (VALUE_INDEX + index)) {\n        return null;\n      }\n\n      if (this.isDecorated) {\n        if (!this._values) {\n          this._values = [];\n        }\n        return (this._values[index] = this._decorate(\n          this.jCal[VALUE_INDEX + index]\n        ));\n      } else {\n        return this.jCal[VALUE_INDEX + index];\n      }\n    },\n\n    /**\n     * Decorate a single value, returning its wrapped object. This is used by\n     * the hydrate function to actually wrap the value.\n     *\n     * @private\n     * @param {?} value         The value to decorate\n     * @return {Object}         The decorated value\n     */\n    _decorate: function(value) {\n      return this._designSet.value[this.type].decorate(value, this);\n    },\n\n    /**\n     * Undecorate a single value, returning its raw jCal data.\n     *\n     * @private\n     * @param {Object} value         The value to undecorate\n     * @return {?}                   The undecorated value\n     */\n    _undecorate: function(value) {\n      return this._designSet.value[this.type].undecorate(value, this);\n    },\n\n    /**\n     * Sets the value at the given index while also hydrating it. The passed\n     * value can either be a decorated or undecorated value.\n     *\n     * @private\n     * @param {?} value             The value to set\n     * @param {Number} index        The index to set it at\n     */\n    _setDecoratedValue: function(value, index) {\n      if (!this._values) {\n        this._values = [];\n      }\n\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        // decorated value\n        this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n        this._values[index] = value;\n      } else {\n        // undecorated value\n        this.jCal[VALUE_INDEX + index] = value;\n        this._values[index] = this._decorate(value);\n      }\n    },\n\n    /**\n     * Gets a parameter on the property.\n     *\n     * @param {String}        name   Parameter name (lowercase)\n     * @return {Array|String}        Parameter value\n     */\n    getParameter: function(name) {\n      if (name in this.jCal[PROP_INDEX]) {\n        return this.jCal[PROP_INDEX][name];\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Gets first parameter on the property.\n     *\n     * @param {String}        name   Parameter name (lowercase)\n     * @return {String}        Parameter value\n     */\n    getFirstParameter: function(name) {\n      var parameters = this.getParameter(name);\n\n      if (Array.isArray(parameters)) {\n        return parameters[0];\n      }\n\n      return parameters;\n    },\n\n    /**\n     * Sets a parameter on the property.\n     *\n     * @param {String}       name     The parameter name\n     * @param {Array|String} value    The parameter value\n     */\n    setParameter: function(name, value) {\n      var lcname = name.toLowerCase();\n      if (typeof value === \"string\" &&\n          lcname in this._designSet.param &&\n          'multiValue' in this._designSet.param[lcname]) {\n          value = [value];\n      }\n      this.jCal[PROP_INDEX][name] = value;\n    },\n\n    /**\n     * Removes a parameter\n     *\n     * @param {String} name     The parameter name\n     */\n    removeParameter: function(name) {\n      delete this.jCal[PROP_INDEX][name];\n    },\n\n    /**\n     * Get the default type based on this property's name.\n     *\n     * @return {String}     The default type for this property\n     */\n    getDefaultType: function() {\n      var name = this.jCal[NAME_INDEX];\n      var designSet = this._designSet;\n\n      if (name in designSet.property) {\n        var details = designSet.property[name];\n        if ('defaultType' in details) {\n          return details.defaultType;\n        }\n      }\n      return design.defaultType;\n    },\n\n    /**\n     * Sets type of property and clears out any existing values of the current\n     * type.\n     *\n     * @param {String} type     New iCAL type (see design.*.values)\n     */\n    resetType: function(type) {\n      this.removeAllValues();\n      this.jCal[TYPE_INDEX] = type;\n      this._updateType();\n    },\n\n    /**\n     * Finds the first property value.\n     *\n     * @return {String}         First property value\n     */\n    getFirstValue: function() {\n      return this._hydrateValue(0);\n    },\n\n    /**\n     * Gets all values on the property.\n     *\n     * NOTE: this creates an array during each call.\n     *\n     * @return {Array}          List of values\n     */\n    getValues: function() {\n      var len = this.jCal.length - VALUE_INDEX;\n\n      if (len < 1) {\n        // it is possible for a property to have no value.\n        return [];\n      }\n\n      var i = 0;\n      var result = [];\n\n      for (; i < len; i++) {\n        result[i] = this._hydrateValue(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Removes all values from this property\n     */\n    removeAllValues: function() {\n      if (this._values) {\n        this._values.length = 0;\n      }\n      this.jCal.length = 3;\n    },\n\n    /**\n     * Sets the values of the property.  Will overwrite the existing values.\n     * This can only be used for multi-value properties.\n     *\n     * @param {Array} values    An array of values\n     */\n    setValues: function(values) {\n      if (!this.isMultiValue) {\n        throw new Error(\n          this.name + ': does not not support mulitValue.\\n' +\n          'override isMultiValue'\n        );\n      }\n\n      var len = values.length;\n      var i = 0;\n      this.removeAllValues();\n\n      if (len > 0 &&\n          typeof(values[0]) === 'object' &&\n          'icaltype' in values[0]) {\n        this.resetType(values[0].icaltype);\n      }\n\n      if (this.isDecorated) {\n        for (; i < len; i++) {\n          this._setDecoratedValue(values[i], i);\n        }\n      } else {\n        for (; i < len; i++) {\n          this.jCal[VALUE_INDEX + i] = values[i];\n        }\n      }\n    },\n\n    /**\n     * Sets the current value of the property. If this is a multi-value\n     * property, all other values will be removed.\n     *\n     * @param {String|Object} value     New property value.\n     */\n    setValue: function(value) {\n      this.removeAllValues();\n      if (typeof(value) === 'object' && 'icaltype' in value) {\n        this.resetType(value.icaltype);\n      }\n\n      if (this.isDecorated) {\n        this._setDecoratedValue(value, 0);\n      } else {\n        this.jCal[VALUE_INDEX] = value;\n      }\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.stringify.property(\n        this.jCal, this._designSet, true\n      );\n    }\n  };\n\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str                        The iCalendar string to parse\n   * @param {ICAL.design.designSet=} designSet  The design data to use for this property\n   * @return {ICAL.Property}                    The created iCalendar property\n   */\n  Property.fromString = function(str, designSet) {\n    return new Property(ICAL.parse.property(str, designSet));\n  };\n\n  return Property;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.UtcOffset = (function() {\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.UtcOffset\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  function UtcOffset(aData) {\n    this.fromData(aData);\n  }\n\n  UtcOffset.prototype = {\n\n    /**\n     * The hours in the utc-offset\n     * @type {Number}\n     */\n    hours: 0,\n\n    /**\n     * The minutes in the utc-offset\n     * @type {Number}\n     */\n    minutes: 0,\n\n    /**\n     * The sign of the utc offset, 1 for positive offset, -1 for negative\n     * offsets.\n     * @type {Number}\n     */\n    factor: 1,\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"utc-offset\"\n     */\n    icaltype: \"utc-offset\",\n\n    /**\n     * Returns a clone of the utc offset object.\n     *\n     * @return {ICAL.UtcOffset}     The cloned object\n     */\n    clone: function() {\n      return ICAL.UtcOffset.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData          An object with members of the utc offset\n     * @param {Number=} aData.hours   The hours for the utc offset\n     * @param {Number=} aData.minutes The minutes in the utc offset\n     * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n     */\n    fromData: function(aData) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (aData.hasOwnProperty(key)) {\n            this[key] = aData[key];\n          }\n        }\n      }\n      this._normalize();\n    },\n\n    /**\n     * Sets up the current instance from the given seconds value. The seconds\n     * value is truncated to the minute. Offsets are wrapped when the world\n     * ends, the hour after UTC+14:00 is UTC-12:00.\n     *\n     * @param {Number} aSeconds         The seconds to convert into an offset\n     */\n    fromSeconds: function(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.factor = aSeconds < 0 ? -1 : 1;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n\n      secs -= (this.hours * 3600);\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      return this;\n    },\n\n    /**\n     * Convert the current offset to a value in seconds\n     *\n     * @return {Number}                 The offset in seconds\n     */\n    toSeconds: function() {\n      return this.factor * (60 * this.minutes + 3600 * this.hours);\n    },\n\n    /**\n     * Compare this utc offset with another one.\n     *\n     * @param {ICAL.UtcOffset} other        The other offset to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toSeconds();\n      var b = other.toSeconds();\n      return (a > b) - (b > a);\n    },\n\n    _normalize: function() {\n      // Range: 97200 seconds (with 1 hour inbetween)\n      var secs = this.toSeconds();\n      var factor = this.factor;\n      while (secs < -43200) { // = UTC-12:00\n        secs += 97200;\n      }\n      while (secs > 50400) { // = UTC+14:00\n        secs -= 97200;\n      }\n\n      this.fromSeconds(secs);\n\n      // Avoid changing the factor when on zero seconds\n      if (secs == 0) {\n        this.factor = factor;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this utc-offset.\n     * @return {String}\n     */\n    toICALString: function() {\n      return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this utc-offset.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.factor == 1 ? \"+\" : \"-\") +\n              ICAL.helpers.pad2(this.hours) + ':' +\n              ICAL.helpers.pad2(this.minutes);\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {ICAL.Duration}    The created utc-offset instance\n   */\n  UtcOffset.fromString = function(aString) {\n    // -05:00\n    var options = {};\n    //TODO: support seconds per rfc5545 ?\n    options.factor = (aString[0] === '+') ? 1 : -1;\n    options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));\n    options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));\n\n    return new ICAL.UtcOffset(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n  UtcOffset.fromSeconds = function(aSeconds) {\n    var instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  };\n\n  return UtcOffset;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Binary = (function() {\n\n  /**\n   * @classdesc\n   * Represents the BINARY value type, which contains extra methods for\n   * encoding and decoding.\n   *\n   * @class\n   * @alias ICAL.Binary\n   * @param {String} aValue     The binary data for this value\n   */\n  function Binary(aValue) {\n    this.value = aValue;\n  }\n\n  Binary.prototype = {\n    /**\n     * The type name, to be used in the jCal object.\n     * @default \"binary\"\n     * @constant\n     */\n    icaltype: \"binary\",\n\n    /**\n     * Base64 decode the current value\n     *\n     * @return {String}         The base64-decoded value\n     */\n    decodeValue: function decodeValue() {\n      return this._b64_decode(this.value);\n    },\n\n    /**\n     * Encodes the passed parameter with base64 and sets the internal\n     * value to the result.\n     *\n     * @param {String} aValue      The raw binary value to encode\n     */\n    setEncodedValue: function setEncodedValue(aValue) {\n      this.value = this._b64_encode(aValue);\n    },\n\n    _b64_encode: function base64_encode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Bayron Guevara\n      // +   improved by: Thunder.m\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   improved by: Rafał Kukawski (http://kukawski.pl)\n      // *     example 1: base64_encode('Kevin van Zonneveld');\n      // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['atob'] == 'function') {\n      //    return atob(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        enc = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      do { // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n\n        bits = o1 << 16 | o2 << 8 | o3;\n\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hexets to index into b64, and append result to encoded string\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      enc = tmp_arr.join('');\n\n      var r = data.length % 3;\n\n      return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n\n    },\n\n    _b64_decode: function base64_decode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Thunder.m\n      // +      input by: Aman Gupta\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Onno Marsman\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +      input by: Brett Zamir (http://brett-zamir.me)\n      // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n      // *     returns 1: 'Kevin van Zonneveld'\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['btoa'] == 'function') {\n      //    return btoa(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\n                \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1, o2, o3, h1, h2, h3, h4, bits, i = 0,\n        ac = 0,\n        dec = \"\",\n        tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      data += '';\n\n      do { // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n      } while (i < data.length);\n\n      dec = tmp_arr.join('');\n\n      return dec;\n    },\n\n    /**\n     * The string representation of this value\n     * @return {String}\n     */\n    toString: function() {\n      return this.value;\n    }\n  };\n\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {ICAL.Binary}          The binary value instance\n   */\n  Binary.fromString = function(aString) {\n    return new Binary(aString);\n  };\n\n  return Binary;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  /**\n   * @classdesc\n   * This class represents the \"period\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @description\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @class\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   */\n  ICAL.Period = function icalperiod(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof ICAL.Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof ICAL.Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n      this.duration = aData.duration;\n    }\n  };\n\n  ICAL.Period.prototype = {\n\n    /**\n     * The start of the period\n     * @type {ICAL.Time}\n     */\n    start: null,\n\n    /**\n     * The end of the period\n     * @type {ICAL.Time}\n     */\n    end: null,\n\n    /**\n     * The duration of the period\n     * @type {ICAL.Duration}\n     */\n    duration: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalperiod\"\n     */\n    icalclass: \"icalperiod\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"period\"\n     */\n    icaltype: \"period\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Period}      The cloned object\n     */\n    clone: function() {\n      return ICAL.Period.fromData({\n        start: this.start ? this.start.clone() : null,\n        end: this.end ? this.end.clone() : null,\n        duration: this.duration ? this.duration.clone() : null\n      });\n    },\n\n    /**\n     * Calculates the duration of the period, either directly or by subtracting\n     * start from end date.\n     *\n     * @return {ICAL.Duration}      The calculated duration\n     */\n    getDuration: function duration() {\n      if (this.duration) {\n        return this.duration;\n      } else {\n        return this.end.subtractDate(this.start);\n      }\n    },\n\n    /**\n     * Calculates the end date of the period, either directly or by adding\n     * duration to start date.\n     *\n     * @return {ICAL.Time}          The calculated end date\n     */\n    getEnd: function() {\n      if (this.end) {\n        return this.end;\n      } else {\n        var end = this.start.clone();\n        end.addDuration(this.duration);\n        return end;\n      }\n    },\n\n    /**\n     * The string representation of this period.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.start + \"/\" + (this.end || this.duration);\n    },\n\n    /**\n     * The jCal representation of this period type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      return [this.start.toString(), (this.end || this.duration).toString()];\n    },\n\n    /**\n     * The iCalendar string representation of this period.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.start.toICALString() + \"/\" +\n             (this.end || this.duration).toICALString();\n    }\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {ICAL.Property} prop    The property this period will be on\n   * @return {ICAL.Period}          The created period instance\n   */\n  ICAL.Period.fromString = function fromString(str, prop) {\n    var parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error(\n        'Invalid string value: \"' + str + '\" must contain a \"/\" char.'\n      );\n    }\n\n    var options = {\n      start: ICAL.Time.fromDateTimeString(parts[0], prop)\n    };\n\n    var end = parts[1];\n\n    if (ICAL.Duration.isValueString(end)) {\n      options.duration = ICAL.Duration.fromString(end);\n    } else {\n      options.end = ICAL.Time.fromDateTimeString(end, prop);\n    }\n\n    return new ICAL.Period(options);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromData = function fromData(aData) {\n    return new ICAL.Period(aData);\n  };\n\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {Array<String,String>} aData    The jCal data array\n   * @param {ICAL.Property} aProp           The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {ICAL.Period}                  The period instance\n   */\n  ICAL.Period.fromJSON = function(aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, aProp) {\n      if (aLenient) {\n        return ICAL.Time.fromString(aValue, aProp);\n      } else {\n        return ICAL.Time.fromDateTimeString(aValue, aProp);\n      }\n    }\n\n    if (ICAL.Duration.isValueString(aData[1])) {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: ICAL.Duration.fromString(aData[1])\n      });\n    } else {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DURATION_LETTERS = /([PDWHMTS]{1,1})/;\n\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Duration\n   * @param {Object} data               An object with members of the duration\n   * @param {Number} data.weeks         Duration in weeks\n   * @param {Number} data.days          Duration in days\n   * @param {Number} data.hours         Duration in hours\n   * @param {Number} data.minutes       Duration in minutes\n   * @param {Number} data.seconds       Duration in seconds\n   * @param {Boolean} data.isNegative   If true, the duration is negative\n   */\n  ICAL.Duration = function icalduration(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Duration.prototype = {\n    /**\n     * The weeks in this duration\n     * @type {Number}\n     * @default 0\n     */\n    weeks: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    days: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    hours: 0,\n\n    /**\n     * The minutes in this duration\n     * @type {Number}\n     * @default 0\n     */\n    minutes: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Number}\n     * @default 0\n     */\n    seconds: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Boolean}\n     * @default false\n     */\n    isNegative: false,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalduration\"\n     */\n    icalclass: \"icalduration\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"duration\"\n     */\n    icaltype: \"duration\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Duration}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Duration.fromData(this);\n    },\n\n    /**\n     * The duration value expressed as a number of seconds.\n     *\n     * @return {Number}             The duration value in seconds\n     */\n    toSeconds: function toSeconds() {\n      var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours +\n                    86400 * this.days + 7 * 86400 * this.weeks;\n      return (this.isNegative ? -seconds : seconds);\n    },\n\n    /**\n     * Reads the passed seconds value into this duration object. Afterwards,\n     * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n     * accordingly.\n     *\n     * @param {Number} aSeconds     The duration value in seconds\n     * @return {ICAL.Duration}      Returns this instance\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n\n      this.isNegative = (aSeconds < 0);\n      this.days = ICAL.helpers.trunc(secs / 86400);\n\n      // If we have a flat number of weeks, use them.\n      if (this.days % 7 == 0) {\n        this.weeks = this.days / 7;\n        this.days = 0;\n      } else {\n        this.weeks = 0;\n      }\n\n      secs -= (this.days + 7 * this.weeks) * 86400;\n\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      secs -= this.minutes * 60;\n\n      this.seconds = secs;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData               An object with members of the duration\n     * @param {Number} aData.weeks         Duration in weeks\n     * @param {Number} aData.days          Duration in days\n     * @param {Number} aData.hours         Duration in hours\n     * @param {Number} aData.minutes       Duration in minutes\n     * @param {Number} aData.seconds       Duration in seconds\n     * @param {Boolean} aData.isNegative   If true, the duration is negative\n     */\n    fromData: function fromData(aData) {\n      var propsToCopy = [\"weeks\", \"days\", \"hours\",\n                         \"minutes\", \"seconds\", \"isNegative\"];\n      for (var key in propsToCopy) {\n        /* istanbul ignore if */\n        if (!propsToCopy.hasOwnProperty(key)) {\n          continue;\n        }\n        var prop = propsToCopy[key];\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        } else {\n          this[prop] = 0;\n        }\n      }\n    },\n\n    /**\n     * Resets the duration instance to the default values, i.e. PT0S\n     */\n    reset: function reset() {\n      this.isNegative = false;\n      this.weeks = 0;\n      this.days = 0;\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n    },\n\n    /**\n     * Compares the duration instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function compare(aOther) {\n      var thisSeconds = this.toSeconds();\n      var otherSeconds = aOther.toSeconds();\n      return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n    },\n\n    /**\n     * Normalizes the duration instance. For example, a duration with a value\n     * of 61 seconds will be normalized to 1 minute and 1 second.\n     */\n    normalize: function normalize() {\n      this.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * The string representation of this duration.\n     * @return {String}\n     */\n    toString: function toString() {\n      if (this.toSeconds() == 0) {\n        return \"PT0S\";\n      } else {\n        var str = \"\";\n        if (this.isNegative) str += \"-\";\n        str += \"P\";\n        if (this.weeks) str += this.weeks + \"W\";\n        if (this.days) str += this.days + \"D\";\n\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) str += this.hours + \"H\";\n          if (this.minutes) str += this.minutes + \"M\";\n          if (this.seconds) str += this.seconds + \"S\";\n        }\n        return str;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this duration.\n     * @return {String}\n     */\n    toICALString: function() {\n      return this.toString();\n    }\n  };\n\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {ICAL.Duration}        The newly created duration instance\n   */\n  ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {\n    return (new ICAL.Duration()).fromSeconds(aSeconds);\n  };\n\n  /**\n   * Internal helper function to handle a chunk of a duration.\n   *\n   * @param {String} letter type of duration chunk\n   * @param {String} number numeric value or -/+\n   * @param {Object} dict target to assign values to\n   */\n  function parseDurationChunk(letter, number, object) {\n    var type;\n    switch (letter) {\n      case 'P':\n        if (number && number === '-') {\n          object.isNegative = true;\n        } else {\n          object.isNegative = false;\n        }\n        // period\n        break;\n      case 'D':\n        type = 'days';\n        break;\n      case 'W':\n        type = 'weeks';\n        break;\n      case 'H':\n        type = 'hours';\n        break;\n      case 'M':\n        type = 'minutes';\n        break;\n      case 'S':\n        type = 'seconds';\n        break;\n      default:\n        // Not a valid chunk\n        return 0;\n    }\n\n    if (type) {\n      if (!number && number !== 0) {\n        throw new Error(\n          'invalid duration value: Missing number before \"' + letter + '\"'\n        );\n      }\n      var num = parseInt(number, 10);\n      if (ICAL.helpers.isStrictlyNaN(num)) {\n        throw new Error(\n          'invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"'\n        );\n      }\n      object[type] = num;\n    }\n\n    return 1;\n  }\n\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n  ICAL.Duration.isValueString = function(string) {\n    return (string[0] === 'P' || string[1] === 'P');\n  };\n\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {ICAL.Duration}    The created duration instance\n   */\n  ICAL.Duration.fromString = function icalduration_from_string(aStr) {\n    var pos = 0;\n    var dict = Object.create(null);\n    var chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      var type = aStr[pos];\n      var numeric = aStr.substr(0, pos);\n      aStr = aStr.substr(pos + 1);\n\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error(\n        'invalid duration value: Not enough duration components in \"' + aStr + '\"'\n      );\n    }\n\n    return new ICAL.Duration(dict);\n  };\n\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData               An object with members of the duration\n   * @param {Number} aData.weeks         Duration in weeks\n   * @param {Number} aData.days          Duration in days\n   * @param {Number} aData.hours         Duration in hours\n   * @param {Number} aData.minutes       Duration in minutes\n   * @param {Number} aData.seconds       Duration in seconds\n   * @param {Boolean} aData.isNegative   If true, the duration is negative\n   * @return {ICAL.Duration}             The createad duration instance\n   */\n  ICAL.Duration.fromData = function icalduration_from_data(aData) {\n    return new ICAL.Duration(aData);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2012 */\n\n\n\n(function() {\n  var OPTIONS = [\"tzid\", \"location\", \"tznames\",\n                 \"latitude\", \"longitude\"];\n\n  /**\n   * @classdesc\n   * Timezone representation, created by passing in a tzid and component.\n   *\n   * @example\n   * var vcalendar;\n   * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n   * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n   *\n   * var timezone = new ICAL.Timezone({\n   *   component: timezoneComp,\n   *   tzid\n   * });\n   *\n   * @class\n   * @param {ICAL.Component|Object} data options for class\n   * @param {String|ICAL.Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n  ICAL.Timezone = function icaltimezone(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Timezone.prototype = {\n\n    /**\n     * Timezone identifier\n     * @type {String}\n     */\n    tzid: \"\",\n\n    /**\n     * Timezone location\n     * @type {String}\n     */\n    location: \"\",\n\n    /**\n     * Alternative timezone name, for the string representation\n     * @type {String}\n     */\n    tznames: \"\",\n\n    /**\n     * The primary latitude for the timezone.\n     * @type {Number}\n     */\n    latitude: 0.0,\n\n    /**\n     * The primary longitude for the timezone.\n     * @type {Number}\n     */\n    longitude: 0.0,\n\n    /**\n     * The vtimezone component for this timezone.\n     * @type {ICAL.Component}\n     */\n    component: null,\n\n    /**\n     * The year this timezone has been expanded to. All timezone transition\n     * dates until this year are known and can be used for calculation\n     *\n     * @private\n     * @type {Number}\n     */\n    expandedUntilYear: 0,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltimezone\"\n     */\n    icalclass: \"icaltimezone\",\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {ICAL.Component|Object} aData options for class\n     * @param {String|ICAL.Component} aData.component\n     *        If aData is a simple object, then this member can be set to either a\n     *        string containing the component data, or an already parsed\n     *        ICAL.Component\n     * @param {String} aData.tzid      The timezone identifier\n     * @param {String} aData.location  The timezone locationw\n     * @param {String} aData.tznames   An alternative string representation of the\n     *                                  timezone\n     * @param {Number} aData.latitude  The latitude of the timezone\n     * @param {Number} aData.longitude The longitude of the timezone\n     */\n    fromData: function fromData(aData) {\n      this.expandedUntilYear = 0;\n      this.changes = [];\n\n      if (aData instanceof ICAL.Component) {\n        // Either a component is passed directly\n        this.component = aData;\n      } else {\n        // Otherwise the component may be in the data object\n        if (aData && \"component\" in aData) {\n          if (typeof aData.component == \"string\") {\n            // If a string was passed, parse it as a component\n            var jCal = ICAL.parse(aData.component);\n            this.component = new ICAL.Component(jCal);\n          } else if (aData.component instanceof ICAL.Component) {\n            // If it was a component already, then just set it\n            this.component = aData.component;\n          } else {\n            // Otherwise just null out the component\n            this.component = null;\n          }\n        }\n\n        // Copy remaining passed properties\n        for (var key in OPTIONS) {\n          /* istanbul ignore else */\n          if (OPTIONS.hasOwnProperty(key)) {\n            var prop = OPTIONS[key];\n            if (aData && prop in aData) {\n              this[prop] = aData[prop];\n            }\n          }\n        }\n      }\n\n      // If we have a component but no TZID, attempt to get it from the\n      // component's properties.\n      if (this.component instanceof ICAL.Component && !this.tzid) {\n        this.tzid = this.component.getFirstPropertyValue('tzid');\n      }\n\n      return this;\n    },\n\n    /**\n     * Finds the utcOffset the given time would occur in this timezone.\n     *\n     * @param {ICAL.Time} tt        The time to check for\n     * @return {Number} utc offset in seconds\n     */\n    utcOffset: function utcOffset(tt) {\n      if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {\n        return 0;\n      }\n\n      this._ensureCoverage(tt.year);\n\n      if (!this.changes.length) {\n        return 0;\n      }\n\n      var tt_change = {\n        year: tt.year,\n        month: tt.month,\n        day: tt.day,\n        hour: tt.hour,\n        minute: tt.minute,\n        second: tt.second\n      };\n\n      var change_num = this._findNearbyChange(tt_change);\n      var change_num_to_use = -1;\n      var step = 1;\n\n      // TODO: replace with bin search?\n      for (;;) {\n        var change = ICAL.helpers.clone(this.changes[change_num], true);\n        if (change.utcOffset < change.prevUtcOffset) {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n        } else {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                          change.prevUtcOffset);\n        }\n\n        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);\n\n        if (cmp >= 0) {\n          change_num_to_use = change_num;\n        } else {\n          step = -1;\n        }\n\n        if (step == -1 && change_num_to_use != -1) {\n          break;\n        }\n\n        change_num += step;\n\n        if (change_num < 0) {\n          return 0;\n        }\n\n        if (change_num >= this.changes.length) {\n          break;\n        }\n      }\n\n      var zone_change = this.changes[change_num_to_use];\n      var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n      if (utcOffset_change < 0 && change_num_to_use > 0) {\n        var tmp_change = ICAL.helpers.clone(zone_change, true);\n        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0,\n                                        tmp_change.prevUtcOffset);\n\n        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n          var prev_zone_change = this.changes[change_num_to_use - 1];\n\n          var want_daylight = false; // TODO\n\n          if (zone_change.is_daylight != want_daylight &&\n              prev_zone_change.is_daylight == want_daylight) {\n            zone_change = prev_zone_change;\n          }\n        }\n      }\n\n      // TODO return is_daylight?\n      return zone_change.utcOffset;\n    },\n\n    _findNearbyChange: function icaltimezone_find_nearby_change(change) {\n      // find the closest match\n      var idx = ICAL.helpers.binsearchInsert(\n        this.changes,\n        change,\n        ICAL.Timezone._compare_change_fn\n      );\n\n      if (idx >= this.changes.length) {\n        return this.changes.length - 1;\n      }\n\n      return idx;\n    },\n\n    _ensureCoverage: function(aYear) {\n      if (ICAL.Timezone._minimumExpansionYear == -1) {\n        var today = ICAL.Time.now();\n        ICAL.Timezone._minimumExpansionYear = today.year;\n      }\n\n      var changesEndYear = aYear;\n      if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {\n        changesEndYear = ICAL.Timezone._minimumExpansionYear;\n      }\n\n      changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;\n\n      if (changesEndYear > ICAL.Timezone.MAX_YEAR) {\n        changesEndYear = ICAL.Timezone.MAX_YEAR;\n      }\n\n      if (!this.changes.length || this.expandedUntilYear < aYear) {\n        var subcomps = this.component.getAllSubcomponents();\n        var compLen = subcomps.length;\n        var compIdx = 0;\n\n        for (; compIdx < compLen; compIdx++) {\n          this._expandComponent(\n            subcomps[compIdx], changesEndYear, this.changes\n          );\n        }\n\n        this.changes.sort(ICAL.Timezone._compare_change_fn);\n        this.expandedUntilYear = changesEndYear;\n      }\n    },\n\n    _expandComponent: function(aComponent, aYear, changes) {\n      if (!aComponent.hasProperty(\"dtstart\") ||\n          !aComponent.hasProperty(\"tzoffsetto\") ||\n          !aComponent.hasProperty(\"tzoffsetfrom\")) {\n        return null;\n      }\n\n      var dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n      var change;\n\n      function convert_tzoffset(offset) {\n        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n      }\n\n      function init_changes() {\n        var changebase = {};\n        changebase.is_daylight = (aComponent.name == \"daylight\");\n        changebase.utcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue()\n        );\n\n        changebase.prevUtcOffset = convert_tzoffset(\n          aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue()\n        );\n\n        return changebase;\n      }\n\n      if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n        change = init_changes();\n        change.year = dtstart.year;\n        change.month = dtstart.month;\n        change.day = dtstart.day;\n        change.hour = dtstart.hour;\n        change.minute = dtstart.minute;\n        change.second = dtstart.second;\n\n        ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                        -change.prevUtcOffset);\n        changes.push(change);\n      } else {\n        var props = aComponent.getAllProperties(\"rdate\");\n        for (var rdatekey in props) {\n          /* istanbul ignore if */\n          if (!props.hasOwnProperty(rdatekey)) {\n            continue;\n          }\n          var rdate = props[rdatekey];\n          var time = rdate.getFirstValue();\n          change = init_changes();\n\n          change.year = time.year;\n          change.month = time.month;\n          change.day = time.day;\n\n          if (time.isDate) {\n            change.hour = dtstart.hour;\n            change.minute = dtstart.minute;\n            change.second = dtstart.second;\n\n            if (dtstart.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          } else {\n            change.hour = time.hour;\n            change.minute = time.minute;\n            change.second = time.second;\n\n            if (time.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                              -change.prevUtcOffset);\n            }\n          }\n\n          changes.push(change);\n        }\n\n        var rrule = aComponent.getFirstProperty(\"rrule\");\n\n        if (rrule) {\n          rrule = rrule.getFirstValue();\n          change = init_changes();\n\n          if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {\n            rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n            rrule.until.zone = ICAL.Timezone.localTimezone;\n          }\n\n          var iterator = rrule.iterator(dtstart);\n\n          var occ;\n          while ((occ = iterator.next())) {\n            change = init_changes();\n            if (occ.year > aYear || !occ) {\n              break;\n            }\n\n            change.year = occ.year;\n            change.month = occ.month;\n            change.day = occ.day;\n            change.hour = occ.hour;\n            change.minute = occ.minute;\n            change.second = occ.second;\n            change.isDate = occ.isDate;\n\n            ICAL.Timezone.adjust_change(change, 0, 0, 0,\n                                            -change.prevUtcOffset);\n            changes.push(change);\n          }\n        }\n      }\n\n      return changes;\n    },\n\n    /**\n     * The string representation of this timezone.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.tznames ? this.tznames : this.tzid);\n    }\n  };\n\n  ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;\n    else if (a.year > b.year) return 1;\n\n    if (a.month < b.month) return -1;\n    else if (a.month > b.month) return 1;\n\n    if (a.day < b.day) return -1;\n    else if (a.day > b.day) return 1;\n\n    if (a.hour < b.hour) return -1;\n    else if (a.hour > b.hour) return 1;\n\n    if (a.minute < b.minute) return -1;\n    else if (a.minute > b.minute) return 1;\n\n    if (a.second < b.second) return -1;\n    else if (a.second > b.second) return 1;\n\n    return 0;\n  };\n\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {ICAL.Time} tt                  The time to convert\n   * @param {ICAL.Timezone} from_zone       The source zone to convert from\n   * @param {ICAL.Timezone} to_zone         The target zone to convert to\n   * @return {ICAL.Time}                    The converted date/time object\n   */\n  ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate ||\n        from_zone.tzid == to_zone.tzid ||\n        from_zone == ICAL.Timezone.localTimezone ||\n        to_zone == ICAL.Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    var utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, - utcOffset);\n\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n\n    return null;\n  };\n\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {ICAL.Component|Object} aData options for class\n   * @param {String|ICAL.Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n  ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {\n    var tt = new ICAL.Timezone();\n    return tt.fromData(aData);\n  };\n\n  /**\n   * The instance describing the UTC timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({\n    tzid: \"UTC\"\n  });\n\n  /**\n   * The instance describing the local timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n  ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({\n    tzid: \"floating\"\n  });\n\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n  ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {\n    return ICAL.Time.prototype.adjust.call(\n      change,\n      days,\n      hours,\n      minutes,\n      seconds,\n      change\n    );\n  };\n\n  ICAL.Timezone._minimumExpansionYear = -1;\n  ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?\n  ICAL.Timezone.EXTRA_COVERAGE = 5;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.TimezoneService = (function() {\n  var zones;\n\n  /**\n   * @classdesc\n   * Singleton class to contain timezones.  Right now it is all manual registry in\n   * the future we may use this class to download timezone information or handle\n   * loading pre-expanded timezones.\n   *\n   * @namespace\n   * @alias ICAL.TimezoneService\n   */\n  var TimezoneService = {\n    get count() {\n      return Object.keys(zones).length;\n    },\n\n    reset: function() {\n      zones = Object.create(null);\n      var utc = ICAL.Timezone.utcTimezone;\n\n      zones.Z = utc;\n      zones.UTC = utc;\n      zones.GMT = utc;\n    },\n\n    /**\n     * Checks if timezone id has been registered.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {Boolean}        False, when not present\n     */\n    has: function(tzid) {\n      return !!zones[tzid];\n    },\n\n    /**\n     * Returns a timezone by its tzid if present.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The timezone, or null if not found\n     */\n    get: function(tzid) {\n      return zones[tzid];\n    },\n\n    /**\n     * Registers a timezone object or component.\n     *\n     * @param {String=} name\n     *        The name of the timezone. Defaults to the component's TZID if not\n     *        passed.\n     * @param {ICAL.Component|ICAL.Timezone} zone\n     *        The initialized zone or vtimezone.\n     */\n    register: function(name, timezone) {\n      if (name instanceof ICAL.Component) {\n        if (name.name === 'vtimezone') {\n          timezone = new ICAL.Timezone(name);\n          name = timezone.tzid;\n        }\n      }\n\n      if (timezone instanceof ICAL.Timezone) {\n        zones[name] = timezone;\n      } else {\n        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n      }\n    },\n\n    /**\n     * Removes a timezone by its tzid from the list.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The removed timezone, or null if not registered\n     */\n    remove: function(tzid) {\n      return (delete zones[tzid]);\n    }\n  };\n\n  // initialize defaults\n  TimezoneService.reset();\n\n  return TimezoneService;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n\n  /**\n   * @classdesc\n   * iCalendar Time representation (similar to JS Date object).  Fully\n   * independent of system (OS) timezone / time.  Unlike JS Date, the month\n   * January is 1, not zero.\n   *\n   * @example\n   * var time = new ICAL.Time({\n   *   year: 2012,\n   *   month: 10,\n   *   day: 11\n   *   minute: 0,\n   *   second: 0,\n   *   isDate: false\n   * });\n   *\n   *\n   * @alias ICAL.Time\n   * @class\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {ICAL.Timezone} zone timezone this position occurs in\n   */\n  ICAL.Time = function icaltime(data, zone) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    /* time defaults */\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n\n    this.fromData(data, zone);\n  };\n\n  ICAL.Time._dowCache = {};\n  ICAL.Time._wnCache = {};\n\n  ICAL.Time.prototype = {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltime\"\n     */\n    icalclass: \"icaltime\",\n    _cachedUnixTime: null,\n\n    /**\n     * The type name, to be used in the jCal object. This value may change and\n     * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n     * @readonly\n     * @type {String}\n     * @default \"date-time\"\n     */\n    get icaltype() {\n      return this.isDate ? 'date' : 'date-time';\n    },\n\n    /**\n     * The timezone for this time.\n     * @type {ICAL.Timezone}\n     */\n    zone: null,\n\n    /**\n     * Internal uses to indicate that a change has been made and the next read\n     * operation must attempt to normalize the value (for example changing the\n     * day to 33).\n     *\n     * @type {Boolean}\n     * @private\n     */\n    _pendingNormalization: false,\n\n    /**\n     * Returns a clone of the time object.\n     *\n     * @return {ICAL.Time}              The cloned object\n     */\n    clone: function() {\n      return new ICAL.Time(this._time, this.zone);\n    },\n\n    /**\n     * Reset the time instance to epoch time\n     */\n    reset: function icaltime_reset() {\n      this.fromData(ICAL.Time.epochTime);\n      this.zone = ICAL.Timezone.utcTimezone;\n    },\n\n    /**\n     * Reset the time instance to the given date/time values.\n     *\n     * @param {Number} year             The year to set\n     * @param {Number} month            The month to set\n     * @param {Number} day              The day to set\n     * @param {Number} hour             The hour to set\n     * @param {Number} minute           The minute to set\n     * @param {Number} second           The second to set\n     * @param {ICAL.Timezone} timezone  The timezone to set\n     */\n    resetTo: function icaltime_resetTo(year, month, day,\n                                       hour, minute, second, timezone) {\n      this.fromData({\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        zone: timezone\n      });\n    },\n\n    /**\n     * Set up the current instance from the Javascript date value.\n     *\n     * @param {?Date} aDate     The Javascript Date to read, or null to reset\n     * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n     */\n    fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {\n      if (!aDate) {\n        this.reset();\n      } else {\n        if (useUTC) {\n          this.zone = ICAL.Timezone.utcTimezone;\n          this.year = aDate.getUTCFullYear();\n          this.month = aDate.getUTCMonth() + 1;\n          this.day = aDate.getUTCDate();\n          this.hour = aDate.getUTCHours();\n          this.minute = aDate.getUTCMinutes();\n          this.second = aDate.getUTCSeconds();\n        } else {\n          this.zone = ICAL.Timezone.localTimezone;\n          this.year = aDate.getFullYear();\n          this.month = aDate.getMonth() + 1;\n          this.day = aDate.getDate();\n          this.hour = aDate.getHours();\n          this.minute = aDate.getMinutes();\n          this.second = aDate.getSeconds();\n        }\n      }\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData            Time initialization\n     * @param {Number=} aData.year      The year for this date\n     * @param {Number=} aData.month     The month for this date\n     * @param {Number=} aData.day       The day for this date\n     * @param {Number=} aData.hour      The hour for this date\n     * @param {Number=} aData.minute    The minute for this date\n     * @param {Number=} aData.second    The second for this date\n     * @param {Boolean=} aData.isDate   If true, the instance represents a date\n     *                                    (as opposed to a date-time)\n     * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n     */\n    fromData: function fromData(aData, aZone) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(aData, key)) {\n            // ical type cannot be set\n            if (key === 'icaltype') continue;\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      if (aZone) {\n        this.zone = aZone;\n      }\n\n      if (aData && !(\"isDate\" in aData)) {\n        this.isDate = !(\"hour\" in aData);\n      } else if (aData && (\"isDate\" in aData)) {\n        this.isDate = aData.isDate;\n      }\n\n      if (aData && \"timezone\" in aData) {\n        var zone = ICAL.TimezoneService.get(\n          aData.timezone\n        );\n\n        this.zone = zone || ICAL.Timezone.localTimezone;\n      }\n\n      if (aData && \"zone\" in aData) {\n        this.zone = aData.zone;\n      }\n\n      if (!this.zone) {\n        this.zone = ICAL.Timezone.localTimezone;\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Calculate the day of week.\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time.weekDay}\n     */\n    dayOfWeek: function icaltime_dayOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n      if (dowCacheKey in ICAL.Time._dowCache) {\n        return ICAL.Time._dowCache[dowCacheKey];\n      }\n\n      // Using Zeller's algorithm\n      var q = this.day;\n      var m = this.month + (this.month < 3 ? 12 : 0);\n      var Y = this.year - (this.month < 3 ? 1 : 0);\n\n      var h = (q + Y + ICAL.helpers.trunc(((m + 1) * 26) / 10) + ICAL.helpers.trunc(Y / 4));\n      /* istanbul ignore else */\n      if (true /* gregorian */) {\n        h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);\n      } else {\n        h += 5;\n      }\n\n      // Normalize to 1 = wkst\n      h = ((h + 7 - firstDow) % 7) + 1;\n      ICAL.Time._dowCache[dowCacheKey] = h;\n      return h;\n    },\n\n    /**\n     * Calculate the day of year.\n     * @return {Number}\n     */\n    dayOfYear: function dayOfYear() {\n      var is_leap = (ICAL.Time.isLeapYear(this.year) ? 1 : 0);\n      var diypm = ICAL.Time.daysInYearPassedMonth;\n      return diypm[is_leap][this.month - 1] + this.day;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * week. The resulting ICAL.Time instance is of icaltype date, even if this\n     * is a date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The start of the week (cloned)\n     */\n    startOfWeek: function startOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day -= ((this.dayOfWeek() + 7 - firstDow) % 7);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the week.\n     * The resulting ICAL.Time instance is of icaltype date, even if this is a\n     * date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The end of the week (cloned)\n     */\n    endOfWeek: function endOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * month. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the month (cloned)\n     */\n    startOfMonth: function startOfMonth() {\n      var result = this.clone();\n      result.day = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * month.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the month (cloned)\n     */\n    endOfMonth: function endOfMonth() {\n      var result = this.clone();\n      result.day = ICAL.Time.daysInMonth(result.month, result.year);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * year. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the year (cloned)\n     */\n    startOfYear: function startOfYear() {\n      var result = this.clone();\n      result.day = 1;\n      result.month = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * year.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the year (cloned)\n     */\n    endOfYear: function endOfYear() {\n      var result = this.clone();\n      result.day = 31;\n      result.month = 12;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * First calculates the start of the week, then returns the day of year for\n     * this date. If the day falls into the previous year, the day is zero or negative.\n     *\n     * @param {ICAL.Time.weekDay=} aFirstDayOfWeek\n     *        The week start weekday, defaults to SUNDAY\n     * @return {Number}     The calculated day of year\n     */\n    startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {\n      var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;\n      var delta = this.dayOfWeek() - firstDow;\n      if (delta < 0) delta += 7;\n      return this.dayOfYear() - delta;\n    },\n\n    /**\n     * Get the dominical letter for the current year. Letters range from A - G\n     * for common years, and AG to GF for leap years.\n     *\n     * @param {Number} yr           The year to retrieve the letter for\n     * @return {String}             The dominical letter.\n     */\n    getDominicalLetter: function() {\n      return ICAL.Time.getDominicalLetter(this.year);\n    },\n\n    /**\n     * Finds the nthWeekDay relative to the current month (not day).  The\n     * returned value is a day relative the month that this month belongs to so\n     * 1 would indicate the first of the month and 40 would indicate a day in\n     * the following month.\n     *\n     * @param {Number} aDayOfWeek   Day of the week see the day name constants\n     * @param {Number} aPos         Nth occurrence of a given week day values\n     *        of 1 and 0 both indicate the first weekday of that type. aPos may\n     *        be either positive or negative\n     *\n     * @return {Number} numeric value indicating a day relative\n     *                   to the current month of this time object\n     */\n    nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {\n      var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);\n      var weekday;\n      var pos = aPos;\n\n      var start = 0;\n\n      var otherDay = this.clone();\n\n      if (pos >= 0) {\n        otherDay.day = 1;\n\n        // because 0 means no position has been given\n        // 1 and 0 indicate the same day.\n        if (pos != 0) {\n          // remove the extra numeric value\n          pos--;\n        }\n\n        // set current start offset to current day.\n        start = otherDay.day;\n\n        // find the current day of week\n        var startDow = otherDay.dayOfWeek();\n\n        // calculate the difference between current\n        // day of the week and desired day of the week\n        var offset = aDayOfWeek - startDow;\n\n\n        // if the offset goes into the past\n        // week we add 7 so it goes into the next\n        // week. We only want to go forward in time here.\n        if (offset < 0)\n          // this is really important otherwise we would\n          // end up with dates from in the past.\n          offset += 7;\n\n        // add offset to start so start is the same\n        // day of the week as the desired day of week.\n        start += offset;\n\n        // because we are going to add (and multiply)\n        // the numeric value of the day we subtract it\n        // from the start position so not to add it twice.\n        start -= aDayOfWeek;\n\n        // set week day\n        weekday = aDayOfWeek;\n      } else {\n\n        // then we set it to the last day in the current month\n        otherDay.day = daysInMonth;\n\n        // find the ends weekday\n        var endDow = otherDay.dayOfWeek();\n\n        pos++;\n\n        weekday = (endDow - aDayOfWeek);\n\n        if (weekday < 0) {\n          weekday += 7;\n        }\n\n        weekday = daysInMonth - weekday;\n      }\n\n      weekday += pos * 7;\n\n      return start + weekday;\n    },\n\n    /**\n     * Checks if current time is the nth weekday, relative to the current\n     * month.  Will always return false when rule resolves outside of current\n     * month.\n     *\n     * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check\n     * @param {Number} aPos                        Relative position\n     * @return {Boolean}                           True, if it is the nth weekday\n     */\n    isNthWeekDay: function(aDayOfWeek, aPos) {\n      var dow = this.dayOfWeek();\n\n      if (aPos === 0 && dow === aDayOfWeek) {\n        return true;\n      }\n\n      // get pos\n      var day = this.nthWeekDay(aDayOfWeek, aPos);\n\n      if (day === this.day) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Calculates the ISO 8601 week number. The first week of a year is the\n     * week that contains the first Thursday. The year can have 53 weeks, if\n     * January 1st is a Friday.\n     *\n     * Note there are regions where the first week of the year is the one that\n     * starts on January 1st, which may offset the week number. Also, if a\n     * different week start is specified, this will also affect the week\n     * number.\n     *\n     * @see ICAL.Time.weekOneStarts\n     * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with\n     * @return {Number}                             The ISO week number\n     */\n    weekNumber: function weekNumber(aWeekStart) {\n      var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n      if (wnCacheKey in ICAL.Time._wnCache) {\n        return ICAL.Time._wnCache[wnCacheKey];\n      }\n      // This function courtesty of Julian Bucknall, published under the MIT license\n      // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n      // plus some fixes to be able to use different week starts.\n      var week1;\n\n      var dt = this.clone();\n      dt.isDate = true;\n      var isoyear = this.year;\n\n      if (dt.month == 12 && dt.day > 25) {\n        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        } else {\n          isoyear++;\n        }\n      } else {\n        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);\n        }\n      }\n\n      var daysBetween = (dt.subtractDate(week1).toSeconds() / 86400);\n      var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;\n      ICAL.Time._wnCache[wnCacheKey] = answer;\n      return answer;\n    },\n\n    /**\n     * Adds the duration to the current time. The instance is modified in\n     * place.\n     *\n     * @param {ICAL.Duration} aDuration         The duration to add\n     */\n    addDuration: function icaltime_add(aDuration) {\n      var mult = (aDuration.isNegative ? -1 : 1);\n\n      // because of the duration optimizations it is much\n      // more efficient to grab all the values up front\n      // then set them directly (which will avoid a normalization call).\n      // So we don't actually normalize until we need it.\n      var second = this.second;\n      var minute = this.minute;\n      var hour = this.hour;\n      var day = this.day;\n\n      second += mult * aDuration.seconds;\n      minute += mult * aDuration.minutes;\n      hour += mult * aDuration.hours;\n      day += mult * aDuration.days;\n      day += mult * 7 * aDuration.weeks;\n\n      this.second = second;\n      this.minute = minute;\n      this.hour = hour;\n      this.day = day;\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Subtract the date details (_excluding_ timezone).  Useful for finding\n     * the relative difference between two time objects excluding their\n     * timezone differences.\n     *\n     * @param {ICAL.Time} aDate     The date to substract\n     * @return {ICAL.Duration}      The difference as a duration\n     */\n    subtractDate: function icaltime_subtract(aDate) {\n      var unixTime = this.toUnixTime() + this.utcOffset();\n      var other = aDate.toUnixTime() + aDate.utcOffset();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Subtract the date details, taking timezones into account.\n     *\n     * @param {ICAL.Time} aDate  The date to subtract\n     * @return {ICAL.Duration}  The difference in duration\n     */\n    subtractDateTz: function icaltime_subtract_abs(aDate) {\n      var unixTime = this.toUnixTime();\n      var other = aDate.toUnixTime();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Compares the ICAL.Time instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toUnixTime();\n      var b = other.toUnixTime();\n\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    },\n\n    /**\n     * Compares only the date part of this instance with another one.\n     *\n     * @param {ICAL.Duration} other         The instance to compare with\n     * @param {ICAL.Timezone} tz            The timezone to compare in\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {\n      function cmp(attr) {\n        return ICAL.Time._cmp_attr(a, b, attr);\n      }\n      var a = this.convertToZone(tz);\n      var b = other.convertToZone(tz);\n      var rc = 0;\n\n      if ((rc = cmp(\"year\")) != 0) return rc;\n      if ((rc = cmp(\"month\")) != 0) return rc;\n      if ((rc = cmp(\"day\")) != 0) return rc;\n\n      return rc;\n    },\n\n    /**\n     * Convert the instance into another timezone. The returned ICAL.Time\n     * instance is always a copy.\n     *\n     * @param {ICAL.Timezone} zone      The zone to convert to\n     * @return {ICAL.Time}              The copy, converted to the zone\n     */\n    convertToZone: function convertToZone(zone) {\n      var copy = this.clone();\n      var zone_equals = (this.zone.tzid == zone.tzid);\n\n      if (!this.isDate && !zone_equals) {\n        ICAL.Timezone.convert_time(copy, this.zone, zone);\n      }\n\n      copy.zone = zone;\n      return copy;\n    },\n\n    /**\n     * Calculates the UTC offset of the current date/time in the timezone it is\n     * in.\n     *\n     * @return {Number}     UTC offset in seconds\n     */\n    utcOffset: function utc_offset() {\n      if (this.zone == ICAL.Timezone.localTimezone ||\n          this.zone == ICAL.Timezone.utcTimezone) {\n        return 0;\n      } else {\n        return this.zone.utcOffset(this);\n      }\n    },\n\n    /**\n     * Returns an RFC 5545 compliant ical representation of this object.\n     *\n     * @return {String} ical date/date-time\n     */\n    toICALString: function() {\n      var string = this.toString();\n\n      if (string.length > 10) {\n        return ICAL.design.icalendar.value['date-time'].toICAL(string);\n      } else {\n        return ICAL.design.icalendar.value.date.toICAL(string);\n      }\n    },\n\n    /**\n     * The string representation of this date/time, in jCal form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var result = this.year + '-' +\n                   ICAL.helpers.pad2(this.month) + '-' +\n                   ICAL.helpers.pad2(this.day);\n\n      if (!this.isDate) {\n          result += 'T' + ICAL.helpers.pad2(this.hour) + ':' +\n                    ICAL.helpers.pad2(this.minute) + ':' +\n                    ICAL.helpers.pad2(this.second);\n\n        if (this.zone === ICAL.Timezone.utcTimezone) {\n          result += 'Z';\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the current instance to a Javascript date\n     * @return {Date}\n     */\n    toJSDate: function toJSDate() {\n      if (this.zone == ICAL.Timezone.localTimezone) {\n        if (this.isDate) {\n          return new Date(this.year, this.month - 1, this.day);\n        } else {\n          return new Date(this.year, this.month - 1, this.day,\n                          this.hour, this.minute, this.second, 0);\n        }\n      } else {\n        return new Date(this.toUnixTime() * 1000);\n      }\n    },\n\n    _normalize: function icaltime_normalize() {\n      var isDate = this._time.isDate;\n      if (this._time.isDate) {\n        this._time.hour = 0;\n        this._time.minute = 0;\n        this._time.second = 0;\n      }\n      this.adjust(0, 0, 0, 0);\n\n      return this;\n    },\n\n    /**\n     * Adjust the date/time by the given offset\n     *\n     * @param {Number} aExtraDays       The extra amount of days\n     * @param {Number} aExtraHours      The extra amount of hours\n     * @param {Number} aExtraMinutes    The extra amount of minutes\n     * @param {Number} aExtraSeconds    The extra amount of seconds\n     * @param {Number=} aTime           The time to adjust, defaults to the\n     *                                    current instance.\n     */\n    adjust: function icaltime_adjust(aExtraDays, aExtraHours,\n                                     aExtraMinutes, aExtraSeconds, aTime) {\n\n      var minutesOverflow, hoursOverflow,\n          daysOverflow = 0, yearsOverflow = 0;\n\n      var second, minute, hour, day;\n      var daysInMonth;\n\n      var time = aTime || this._time;\n\n      if (!time.isDate) {\n        second = time.second + aExtraSeconds;\n        time.second = second % 60;\n        minutesOverflow = ICAL.helpers.trunc(second / 60);\n        if (time.second < 0) {\n          time.second += 60;\n          minutesOverflow--;\n        }\n\n        minute = time.minute + aExtraMinutes + minutesOverflow;\n        time.minute = minute % 60;\n        hoursOverflow = ICAL.helpers.trunc(minute / 60);\n        if (time.minute < 0) {\n          time.minute += 60;\n          hoursOverflow--;\n        }\n\n        hour = time.hour + aExtraHours + hoursOverflow;\n\n        time.hour = hour % 24;\n        daysOverflow = ICAL.helpers.trunc(hour / 24);\n        if (time.hour < 0) {\n          time.hour += 24;\n          daysOverflow--;\n        }\n      }\n\n\n      // Adjust month and year first, because we need to know what month the day\n      // is in before adjusting it.\n      if (time.month > 12) {\n        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);\n      } else if (time.month < 1) {\n        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;\n      }\n\n      time.year += yearsOverflow;\n      time.month -= 12 * yearsOverflow;\n\n      // Now take care of the days (and adjust month if needed)\n      day = time.day + aExtraDays + daysOverflow;\n\n      if (day > 0) {\n        for (;;) {\n          daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);\n          if (day <= daysInMonth) {\n            break;\n          }\n\n          time.month++;\n          if (time.month > 12) {\n            time.year++;\n            time.month = 1;\n          }\n\n          day -= daysInMonth;\n        }\n      } else {\n        while (day <= 0) {\n          if (time.month == 1) {\n            time.year--;\n            time.month = 12;\n          } else {\n            time.month--;\n          }\n\n          day += ICAL.Time.daysInMonth(time.month, time.year);\n        }\n      }\n\n      time.day = day;\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance from unix time, the number of seconds since\n     * January 1st, 1970.\n     *\n     * @param {Number} seconds      The seconds to set up with\n     */\n    fromUnixTime: function fromUnixTime(seconds) {\n      this.zone = ICAL.Timezone.utcTimezone;\n      var epoch = ICAL.Time.epochTime.clone();\n      epoch.adjust(0, 0, 0, seconds);\n\n      this.year = epoch.year;\n      this.month = epoch.month;\n      this.day = epoch.day;\n      this.hour = epoch.hour;\n      this.minute = epoch.minute;\n      this.second = Math.floor(epoch.second);\n\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Converts the current instance to seconds since January 1st 1970.\n     *\n     * @return {Number}         Seconds since 1970\n     */\n    toUnixTime: function toUnixTime() {\n      if (this._cachedUnixTime !== null) {\n        return this._cachedUnixTime;\n      }\n      var offset = this.utcOffset();\n\n      // we use the offset trick to ensure\n      // that we are getting the actual UTC time\n      var ms = Date.UTC(\n        this.year,\n        this.month - 1,\n        this.day,\n        this.hour,\n        this.minute,\n        this.second - offset\n      );\n\n      // seconds\n      this._cachedUnixTime = ms / 1000;\n      return this._cachedUnixTime;\n    },\n\n    /**\n     * Converts time to into Object which can be serialized then re-created\n     * using the constructor.\n     *\n     * @example\n     * // toJSON will automatically be called\n     * var json = JSON.stringify(mytime);\n     *\n     * var deserialized = JSON.parse(json);\n     *\n     * var time = new ICAL.Time(deserialized);\n     *\n     * @return {Object}\n     */\n    toJSON: function() {\n      var copy = [\n        'year',\n        'month',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'isDate'\n      ];\n\n      var result = Object.create(null);\n\n      var i = 0;\n      var len = copy.length;\n      var prop;\n\n      for (; i < len; i++) {\n        prop = copy[i];\n        result[prop] = this[prop];\n      }\n\n      if (this.zone) {\n        result.timezone = this.zone.tzid;\n      }\n\n      return result;\n    }\n\n  };\n\n  (function setupNormalizeAttributes() {\n    // This needs to run before any instances are created!\n    function defineAttr(attr) {\n      Object.defineProperty(ICAL.Time.prototype, attr, {\n        get: function getTimeAttr() {\n          if (this._pendingNormalization) {\n            this._normalize();\n            this._pendingNormalization = false;\n          }\n\n          return this._time[attr];\n        },\n        set: function setTimeAttr(val) {\n          // Check if isDate will be set and if was not set to normalize date.\n          // This avoids losing days when seconds, minutes and hours are zeroed\n          // what normalize will do when time is a date.\n          if (attr === \"isDate\" && val && !this._time.isDate) {\n            this.adjust(0, 0, 0, 0);\n          }\n          this._cachedUnixTime = null;\n          this._pendingNormalization = true;\n          this._time[attr] = val;\n\n          return val;\n        }\n      });\n\n    }\n\n    /* istanbul ignore else */\n    if (\"defineProperty\" in Object) {\n      defineAttr(\"year\");\n      defineAttr(\"month\");\n      defineAttr(\"day\");\n      defineAttr(\"hour\");\n      defineAttr(\"minute\");\n      defineAttr(\"second\");\n      defineAttr(\"isDate\");\n    }\n  })();\n\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n  ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {\n    var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var days = 30;\n\n    if (month < 1 || month > 12) return days;\n\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += ICAL.Time.isLeapYear(year);\n    }\n\n    return days;\n  };\n\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n  ICAL.Time.isLeapYear = function isLeapYear(year) {\n    if (year <= 1752) {\n      return ((year % 4) == 0);\n    } else {\n      return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));\n    }\n  };\n\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {ICAL.Time}            The created instance with the calculated date\n   */\n  ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {\n    var year = aYear;\n    var doy = aDayOfYear;\n    var tt = new ICAL.Time();\n    tt.auto_normalize = false;\n    var is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n\n    if (doy < 1) {\n      year--;\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      return ICAL.Time.fromDayOfYear(doy, year);\n    } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = (ICAL.Time.isLeapYear(year) ? 1 : 0);\n      doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return ICAL.Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (var month = 11; month >= 0; month--) {\n      if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromStringv2 = function fromString(str) {\n    return new ICAL.Time({\n      year: parseInt(str.substr(0, 4), 10),\n      month: parseInt(str.substr(5, 2), 10),\n      day: parseInt(str.substr(8, 2), 10),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n  ICAL.Time.fromDateString = function(aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      isDate: true\n    });\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromDateTimeString = function(aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error(\n        'invalid date-time value: \"' + aValue + '\"'\n      );\n    }\n\n    var zone;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = 'Z';\n    } else if (prop) {\n      zone = prop.getParameter('tzid');\n    }\n\n    // 2012-10-10T10:10:10(Z)?\n    var time = new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),\n      minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),\n      second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),\n      timezone: zone\n    });\n\n    return time;\n  };\n\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n  ICAL.Time.fromString = function fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return ICAL.Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return ICAL.Time.fromDateString(aValue);\n    }\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate     The Javascript Date to read, or null to reset\n   * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n   */\n  ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {\n    var tt = new ICAL.Time();\n    return tt.fromJSDate(aDate, useUTC);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n   */\n  ICAL.Time.fromData = function fromData(aData, aZone) {\n    var t = new ICAL.Time();\n    return t.fromData(aData, aZone);\n  };\n\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * The instance is “floating” - has no timezone relation.\n   * To create an instance considering the time zone, call\n   * ICAL.Time.fromJSDate(new Date(), true)\n   * @return {ICAL.Time}\n   */\n  ICAL.Time.now = function icaltime_now() {\n    return ICAL.Time.fromJSDate(new Date(), false);\n  };\n\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see ICAL.Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.\n   * @return {ICAL.Time}                    The date on which week number 1 starts\n   */\n  ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {\n    var t = ICAL.Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n\n    var dow = t.dayOfWeek();\n    var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;\n    if (dow > ICAL.Time.THURSDAY) {\n      t.day += 7;\n    }\n    if (wkst > ICAL.Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n\n    return t;\n  };\n\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n  ICAL.Time.getDominicalLetter = function(yr) {\n    var LTRS = \"GFEDCBA\";\n    var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    var isLeap = ICAL.Time.isLeapYear(yr);\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  };\n\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {ICAL.Time}\n   * @constant\n   * @instance\n   */\n  ICAL.Time.epochTime = ICAL.Time.fromData({\n    year: 1970,\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    isDate: false,\n    timezone: \"Z\"\n  });\n\n  ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  };\n\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n  ICAL.Time.daysInYearPassedMonth = [\n    [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365],\n    [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]\n  ];\n\n  /**\n   * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via\n   * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...\n   *\n   * @typedef {Number} weekDay\n   * @memberof ICAL.Time\n   */\n\n  ICAL.Time.SUNDAY = 1;\n  ICAL.Time.MONDAY = 2;\n  ICAL.Time.TUESDAY = 3;\n  ICAL.Time.WEDNESDAY = 4;\n  ICAL.Time.THURSDAY = 5;\n  ICAL.Time.FRIDAY = 6;\n  ICAL.Time.SATURDAY = 7;\n\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n  ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2015 */\n\n\n\n(function() {\n\n  /**\n   * Describes a vCard time, which has slight differences to the ICAL.Time.\n   * Properties can be null if not specified, for example for dates with\n   * reduced accuracy or truncation.\n   *\n   * Note that currently not all methods are correctly re-implemented for\n   * VCardTime. For example, comparison will have undefined results when some\n   * members are null.\n   *\n   * Also, normalization is not yet implemented for this class!\n   *\n   * @alias ICAL.VCardTime\n   * @class\n   * @extends {ICAL.Time}\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  ICAL.VCardTime = function(data, zone, icaltype) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n\n    time.year = null;\n    time.month = null;\n    time.day = null;\n    time.hour = null;\n    time.minute = null;\n    time.second = null;\n\n    this.icaltype = icaltype || \"date-and-or-time\";\n\n    this.fromData(data, zone);\n  };\n  ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime, /** @lends ICAL.VCardTime */ {\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"vcardtime\"\n     */\n    icalclass: \"vcardtime\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @type {String}\n     * @default \"date-and-or-time\"\n     */\n    icaltype: \"date-and-or-time\",\n\n    /**\n     * The timezone. This can either be floating, UTC, or an instance of\n     * ICAL.UtcOffset.\n     * @type {ICAL.Timezone|ICAL.UtcOFfset}\n     */\n    zone: null,\n\n    /**\n     * Returns a clone of the vcard date/time object.\n     *\n     * @return {ICAL.VCardTime}     The cloned object\n     */\n    clone: function() {\n      return new ICAL.VCardTime(this._time, this.zone, this.icaltype);\n    },\n\n    _normalize: function() {\n      return this;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    utcOffset: function() {\n      if (this.zone instanceof ICAL.UtcOffset) {\n        return this.zone.toSeconds();\n      } else {\n        return ICAL.Time.prototype.utcOffset.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Returns an RFC 6350 compliant representation of this object.\n     *\n     * @return {String}         vcard date/time string\n     */\n    toICALString: function() {\n      return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this date/time, in jCard form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var p2 = ICAL.helpers.pad2;\n      var y = this.year, m = this.month, d = this.day;\n      var h = this.hour, mm = this.minute, s = this.second;\n\n      var hasYear = y !== null, hasMonth = m !== null, hasDay = d !== null;\n      var hasHour = h !== null, hasMinute = mm !== null, hasSecond = s !== null;\n\n      var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : (hasMonth || hasDay ? '--' : '')) +\n                     (hasMonth ? p2(m) : '') +\n                     (hasDay ? '-' + p2(d) : '');\n      var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') +\n                     (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') +\n                     (hasMinute && hasSecond ? ':' : '') +\n                     (hasSecond ? p2(s) : '');\n\n      var zone;\n      if (this.zone === ICAL.Timezone.utcTimezone) {\n        zone = 'Z';\n      } else if (this.zone instanceof ICAL.UtcOffset) {\n        zone = this.zone.toString();\n      } else if (this.zone === ICAL.Timezone.localTimezone) {\n        zone = '';\n      } else if (this.zone instanceof ICAL.Timezone) {\n        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));\n        zone = offset.toString();\n      } else {\n        zone = '';\n      }\n\n      switch (this.icaltype) {\n        case \"time\":\n          return timepart + zone;\n        case \"date-and-or-time\":\n        case \"date-time\":\n          return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n        case \"date\":\n          return datepart;\n      }\n      return null;\n    }\n  });\n\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {ICAL.VCardTime}   The date/time instance\n   */\n  ICAL.VCardTime.fromDateAndOrTimeString = function(aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;\n    }\n    var parts = aValue.split('T');\n    var dt = parts[0], tmz = parts[1];\n    var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];\n    var zone = splitzone[0], tm = splitzone[1];\n\n    var stoi = ICAL.helpers.strictParseInt;\n    var dtlen = dt ? dt.length : 0;\n    var tmlen = tm ? tm.length : 0;\n\n    var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    var hasDashTime = tm && tm[0] == '-';\n\n    var o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = ICAL.Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = ICAL.UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new ICAL.VCardTime(o, zone, aIcalType);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n\n(function() {\n  var DOW_MAP = {\n    SU: ICAL.Time.SUNDAY,\n    MO: ICAL.Time.MONDAY,\n    TU: ICAL.Time.TUESDAY,\n    WE: ICAL.Time.WEDNESDAY,\n    TH: ICAL.Time.THURSDAY,\n    FR: ICAL.Time.FRIDAY,\n    SA: ICAL.Time.SATURDAY\n  };\n\n  var REVERSE_DOW_MAP = {};\n  for (var key in DOW_MAP) {\n    /* istanbul ignore else */\n    if (DOW_MAP.hasOwnProperty(key)) {\n      REVERSE_DOW_MAP[DOW_MAP[key]] = key;\n    }\n  }\n\n  var COPY_PARTS = [\"BYSECOND\", \"BYMINUTE\", \"BYHOUR\", \"BYDAY\",\n                    \"BYMONTHDAY\", \"BYYEARDAY\", \"BYWEEKNO\",\n                    \"BYMONTH\", \"BYSETPOS\"];\n\n  /**\n   * @classdesc\n   * This class represents the \"recur\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Recur\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n   * @param {ICAL.Time=} data.until                     The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n  ICAL.Recur = function icalrecur(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof(data) === 'object') {\n      this.fromData(data);\n    }\n  };\n\n  ICAL.Recur.prototype = {\n    /**\n     * An object holding the BY-parts of the recurrence rule\n     * @type {Object}\n     */\n    parts: null,\n\n    /**\n     * The interval value for the recurrence rule.\n     * @type {Number}\n     */\n    interval: 1,\n\n    /**\n     * The week start day\n     *\n     * @type {ICAL.Time.weekDay}\n     * @default ICAL.Time.MONDAY\n     */\n    wkst: ICAL.Time.MONDAY,\n\n    /**\n     * The end of the recurrence\n     * @type {?ICAL.Time}\n     */\n    until: null,\n\n    /**\n     * The maximum number of occurrences\n     * @type {?Number}\n     */\n    count: null,\n\n    /**\n     * The frequency value.\n     * @type {ICAL.Recur.frequencyValues}\n     */\n    freq: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalrecur\"\n     */\n    icalclass: \"icalrecur\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"recur\"\n     */\n    icaltype: \"recur\",\n\n    /**\n     * Create a new iterator for this recurrence rule. The passed start date\n     * must be the start date of the event, not the start of the range to\n     * search in.\n     *\n     * @example\n     * var recur = comp.getFirstPropertyValue('rrule');\n     * var dtstart = comp.getFirstPropertyValue('dtstart');\n     * var iter = recur.iterator(dtstart);\n     * for (var next = iter.next(); next; next = iter.next()) {\n     *   if (next.compare(rangeStart) < 0) {\n     *     continue;\n     *   }\n     *   console.log(next.toString());\n     * }\n     *\n     * @param {ICAL.Time} aStart        The item's start date\n     * @return {ICAL.RecurIterator}     The recurrence iterator\n     */\n    iterator: function(aStart) {\n      return new ICAL.RecurIterator({\n        rule: this,\n        dtstart: aStart\n      });\n    },\n\n    /**\n     * Returns a clone of the recurrence object.\n     *\n     * @return {ICAL.Recur}      The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Recur(this.toJSON());\n    },\n\n    /**\n     * Checks if the current rule is finite, i.e. has a count or until part.\n     *\n     * @return {Boolean}        True, if the rule is finite\n     */\n    isFinite: function isfinite() {\n      return !!(this.count || this.until);\n    },\n\n    /**\n     * Checks if the current rule has a count part, and not limited by an until\n     * part.\n     *\n     * @return {Boolean}        True, if the rule is by count\n     */\n    isByCount: function isbycount() {\n      return !!(this.count && !this.until);\n    },\n\n    /**\n     * Adds a component (part) to the recurrence rule. This is not a component\n     * in the sense of {@link ICAL.Component}, but a part of the recurrence\n     * rule, i.e. BYMONTH.\n     *\n     * @param {String} aType            The name of the component part\n     * @param {Array|String} aValue     The component value\n     */\n    addComponent: function addPart(aType, aValue) {\n      var ucname = aType.toUpperCase();\n      if (ucname in this.parts) {\n        this.parts[ucname].push(aValue);\n      } else {\n        this.parts[ucname] = [aValue];\n      }\n    },\n\n    /**\n     * Sets the component value for the given by-part.\n     *\n     * @param {String} aType        The component part name\n     * @param {Array} aValues       The component values\n     */\n    setComponent: function setComponent(aType, aValues) {\n      this.parts[aType.toUpperCase()] = aValues.slice();\n    },\n\n    /**\n     * Gets (a copy) of the requested component value.\n     *\n     * @param {String} aType        The component part name\n     * @return {Array}              The component part value\n     */\n    getComponent: function getComponent(aType) {\n      var ucname = aType.toUpperCase();\n      return (ucname in this.parts ? this.parts[ucname].slice() : []);\n    },\n\n    /**\n     * Retrieves the next occurrence after the given recurrence id. See the\n     * guide on {@tutorial terminology} for more details.\n     *\n     * NOTE: Currently, this method iterates all occurrences from the start\n     * date. It should not be called in a loop for performance reasons. If you\n     * would like to get more than one occurrence, you can iterate the\n     * occurrences manually, see the example on the\n     * {@link ICAL.Recur#iterator iterator} method.\n     *\n     * @param {ICAL.Time} aStartTime        The start of the event series\n     * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence\n     * @return {ICAL.Time}                  The next occurrence after\n     */\n    getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {\n      var iter = this.iterator(aStartTime);\n      var next, cdt;\n\n      do {\n        next = iter.next();\n      } while (next && next.compare(aRecurrenceId) <= 0);\n\n      if (next && aRecurrenceId.zone) {\n        next.zone = aRecurrenceId.zone;\n      }\n\n      return next;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} data                               An object with members of the recurrence\n     * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n     * @param {Number=} data.interval                     The INTERVAL value\n     * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n     * @param {ICAL.Time=} data.until                     The end of the recurrence set\n     * @param {Number=} data.count                        The number of occurrences\n     * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n     * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n     * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n     * @param {Array.<String>=} data.byday                The BYDAY values\n     * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n     * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n     * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n     * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n     * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n     */\n    fromData: function(data) {\n      for (var key in data) {\n        var uckey = key.toUpperCase();\n\n        if (uckey in partDesign) {\n          if (Array.isArray(data[key])) {\n            this.parts[uckey] = data[key];\n          } else {\n            this.parts[uckey] = [data[key]];\n          }\n        } else {\n          this[key] = data[key];\n        }\n      }\n\n      if (this.interval && typeof this.interval != \"number\") {\n        optionDesign.INTERVAL(this.interval, this);\n      }\n\n      if (this.wkst && typeof this.wkst != \"number\") {\n        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);\n      }\n\n      if (this.until && !(this.until instanceof ICAL.Time)) {\n        this.until = ICAL.Time.fromString(this.until);\n      }\n    },\n\n    /**\n     * The jCal representation of this recurrence type.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var res = Object.create(null);\n      res.freq = this.freq;\n\n      if (this.count) {\n        res.count = this.count;\n      }\n\n      if (this.interval > 1) {\n        res.interval = this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore if */\n        if (!this.parts.hasOwnProperty(k)) {\n          continue;\n        }\n        var kparts = this.parts[k];\n        if (Array.isArray(kparts) && kparts.length == 1) {\n          res[k.toLowerCase()] = kparts[0];\n        } else {\n          res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);\n        }\n      }\n\n      if (this.until) {\n        res.until = this.until.toString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return res;\n    },\n\n    /**\n     * The string representation of this recurrence rule.\n     * @return {String}\n     */\n    toString: function icalrecur_toString() {\n      // TODO retain order\n      var str = \"FREQ=\" + this.freq;\n      if (this.count) {\n        str += \";COUNT=\" + this.count;\n      }\n      if (this.interval > 1) {\n        str += \";INTERVAL=\" + this.interval;\n      }\n      for (var k in this.parts) {\n        /* istanbul ignore else */\n        if (this.parts.hasOwnProperty(k)) {\n          str += \";\" + k + \"=\" + this.parts[k];\n        }\n      }\n      if (this.until) {\n        str += ';UNTIL=' + this.until.toICALString();\n      }\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n      return str;\n    }\n  };\n\n  function parseNumericValue(type, min, max, value) {\n    var result = value;\n\n    if (value[0] === '+') {\n      result = value.substr(1);\n    }\n\n    result = ICAL.helpers.strictParseInt(result);\n\n    if (min !== undefined && value < min) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be > ' + min\n      );\n    }\n\n    if (max !== undefined && value > max) {\n      throw new Error(\n        type + ': invalid value \"' + value + '\" must be < ' + min\n      );\n    }\n\n    return result;\n  }\n\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n  ICAL.Recur.icalDayToNumericDay = function toNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    return ((DOW_MAP[string] - firstDow + 7) % 7) + 1;\n  };\n\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n  ICAL.Recur.numericDayToIcalDay = function toIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    var dow = (num + firstDow - ICAL.Time.SUNDAY);\n    if (dow > 7) {\n      dow -= 7;\n    }\n    return REVERSE_DOW_MAP[dow];\n  };\n\n  var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\n  var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n\n  /**\n   * Possible frequency values for the FREQ part\n   * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)\n   *\n   * @typedef {String} frequencyValues\n   * @memberof ICAL.Recur\n   */\n\n  var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY',\n                      'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n\n  var optionDesign = {\n    FREQ: function(value, dict, fmtIcal) {\n      // yes this is actually equal or faster then regex.\n      // upside here is we can enumerate the valid values.\n      if (ALLOWED_FREQ.indexOf(value) !== -1) {\n        dict.freq = value;\n      } else {\n        throw new Error(\n          'invalid frequency \"' + value + '\" expected: \"' +\n          ALLOWED_FREQ.join(', ') + '\"'\n        );\n      }\n    },\n\n    COUNT: function(value, dict, fmtIcal) {\n      dict.count = ICAL.helpers.strictParseInt(value);\n    },\n\n    INTERVAL: function(value, dict, fmtIcal) {\n      dict.interval = ICAL.helpers.strictParseInt(value);\n      if (dict.interval < 1) {\n        // 0 or negative values are not allowed, some engines seem to generate\n        // it though. Assume 1 instead.\n        dict.interval = 1;\n      }\n    },\n\n    UNTIL: function(value, dict, fmtIcal) {\n      if (value.length > 10) {\n        dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);\n      } else {\n        dict.until = ICAL.design.icalendar.value.date.fromICAL(value);\n      }\n      if (!fmtIcal) {\n        dict.until = ICAL.Time.fromString(dict.until);\n      }\n    },\n\n    WKST: function(value, dict, fmtIcal) {\n      if (VALID_DAY_NAMES.test(value)) {\n        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);\n      } else {\n        throw new Error('invalid WKST value \"' + value + '\"');\n      }\n    }\n  };\n\n  var partDesign = {\n    BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),\n    BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),\n    BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),\n    BYDAY: function(value) {\n      if (VALID_BYDAY_PART.test(value)) {\n        return value;\n      } else {\n        throw new Error('invalid BYDAY value \"' + value + '\"');\n      }\n    },\n    BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),\n    BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),\n    BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),\n    BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 1, 12),\n    BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)\n  };\n\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {ICAL.Recur}           The created recurrence instance\n   */\n  ICAL.Recur.fromString = function(string) {\n    var data = ICAL.Recur._stringToData(string, false);\n    return new ICAL.Recur(data);\n  };\n\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} aData.freq    The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {ICAL.Time.weekDay=} aData.wkst             The week start value\n   * @param {ICAL.Time=} aData.until                    The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n  ICAL.Recur.fromData = function(aData) {\n    return new ICAL.Recur(aData);\n  };\n\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {ICAL.Recur}       The recurrence instance\n   */\n  ICAL.Recur._stringToData = function(string, fmtIcal) {\n    var dict = Object.create(null);\n\n    // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n    var values = string.split(';');\n    var len = values.length;\n\n    for (var i = 0; i < len; i++) {\n      var parts = values[i].split('=');\n      var ucname = parts[0].toUpperCase();\n      var lcname = parts[0].toLowerCase();\n      var name = (fmtIcal ? lcname : ucname);\n      var value = parts[1];\n\n      if (ucname in partDesign) {\n        var partArr = value.split(',');\n        var partArrIdx = 0;\n        var partArrLen = partArr.length;\n\n        for (; partArrIdx < partArrLen; partArrIdx++) {\n          partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);\n        }\n        dict[name] = (partArr.length == 1 ? partArr[0] : partArr);\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurIterator = (function() {\n\n  /**\n   * @classdesc\n   * An iterator for a single recurrence rule. This class usually doesn't have\n   * to be instanciated directly, the convenience method\n   * {@link ICAL.Recur#iterator} can be used.\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration from a previous run\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration\n   * from a previous run.\n   *\n   * @class\n   * @alias ICAL.RecurIterator\n   * @param {Object} options                The iterator options\n   * @param {ICAL.Recur} options.rule       The rule to iterate.\n   * @param {ICAL.Time} options.dtstart     The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  function icalrecur_iterator(options) {\n    this.fromData(options);\n  }\n\n  icalrecur_iterator.prototype = {\n\n    /**\n     * True when iteration is finished.\n     * @type {Boolean}\n     */\n    completed: false,\n\n    /**\n     * The rule that is being iterated\n     * @type {ICAL.Recur}\n     */\n    rule: null,\n\n    /**\n     * The start date of the event being iterated.\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * The last occurrence that was returned from the\n     * {@link ICAL.RecurIterator#next} method.\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * The sequence number from the occurrence\n     * @type {Number}\n     */\n    occurrence_number: 0,\n\n    /**\n     * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n     * @type {Object}\n     * @private\n     */\n    by_indices: null,\n\n    /**\n     * If true, the iterator has already been initialized\n     * @type {Boolean}\n     * @private\n     */\n    initialized: false,\n\n    /**\n     * The initializd by-data.\n     * @type {Object}\n     * @private\n     */\n    by_data: null,\n\n    /**\n     * The expanded yeardays\n     * @type {Array}\n     * @private\n     */\n    days: null,\n\n    /**\n     * The index in the {@link ICAL.RecurIterator#days} array.\n     * @type {Number}\n     * @private\n     */\n    days_index: 0,\n\n    /**\n     * Initialize the recurrence iterator from the passed data object. This\n     * method is usually not called directly, you can initialize the iterator\n     * through the constructor.\n     *\n     * @param {Object} options                The iterator options\n     * @param {ICAL.Recur} options.rule       The rule to iterate.\n     * @param {ICAL.Time} options.dtstart     The start date of the event.\n     * @param {Boolean=} options.initialized  When true, assume that options are\n     *        from a previously constructed iterator. Initialization will not be\n     *        repeated.\n     */\n    fromData: function(options) {\n      this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);\n\n      if (!this.rule) {\n        throw new Error('iterator requires a (ICAL.Recur) rule');\n      }\n\n      this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!this.dtstart) {\n        throw new Error('iterator requires a (ICAL.Time) dtstart');\n      }\n\n      if (options.by_data) {\n        this.by_data = options.by_data;\n      } else {\n        this.by_data = ICAL.helpers.clone(this.rule.parts, true);\n      }\n\n      if (options.occurrence_number)\n        this.occurrence_number = options.occurrence_number;\n\n      this.days = options.days || [];\n      if (options.last) {\n        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);\n      }\n\n      this.by_indices = options.by_indices;\n\n      if (!this.by_indices) {\n        this.by_indices = {\n          \"BYSECOND\": 0,\n          \"BYMINUTE\": 0,\n          \"BYHOUR\": 0,\n          \"BYDAY\": 0,\n          \"BYMONTH\": 0,\n          \"BYWEEKNO\": 0,\n          \"BYMONTHDAY\": 0\n        };\n      }\n\n      this.initialized = options.initialized || false;\n\n      if (!this.initialized) {\n        this.init();\n      }\n    },\n\n    /**\n     * Intialize the iterator\n     * @private\n     */\n    init: function icalrecur_iterator_init() {\n      this.initialized = true;\n      this.last = this.dtstart.clone();\n      var parts = this.by_data;\n\n      if (\"BYDAY\" in parts) {\n        // libical does this earlier when the rule is loaded, but we postpone to\n        // now so we can preserve the original order.\n        this.sort_byday_rules(parts.BYDAY);\n      }\n\n      // If the BYYEARDAY appares, no other date rule part may appear\n      if (\"BYYEARDAY\" in parts) {\n        if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts ||\n            \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n          throw new Error(\"Invalid BYYEARDAY rule\");\n        }\n      }\n\n      // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n      if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n        throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n      }\n\n      // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n      // BYWEEKNO may appear.\n      if (this.rule.freq == \"MONTHLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n        throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n      }\n\n      // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n      // BYYEARDAY may appear.\n      if (this.rule.freq == \"WEEKLY\" &&\n          (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n        throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n      }\n\n      // BYYEARDAY may only appear in YEARLY rules\n      if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n        throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n      }\n\n      this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n      this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n      this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n      this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n      this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n      if (this.rule.freq == \"WEEKLY\") {\n        if (\"BYDAY\" in parts) {\n          var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n          if ((this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0) || wkdy < 0) {\n            // Initial time is after first day of BYDAY data\n            this.last.day += wkdy;\n          }\n        } else {\n          var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n          parts.BYDAY = [dayName];\n        }\n      }\n\n      if (this.rule.freq == \"YEARLY\") {\n        for (;;) {\n          this.expand_year_days(this.last.year);\n          if (this.days.length > 0) {\n            break;\n          }\n          this.increment_year(this.rule.interval);\n        }\n\n        this._nextByYearDay();\n      }\n\n      if (this.rule.freq == \"MONTHLY\" && this.has_by_data(\"BYDAY\")) {\n        var tempLast = null;\n        var initLast = this.last.clone();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n\n        // Check every weekday in BYDAY with relative dow and pos.\n        for (var i in this.by_data.BYDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYDAY.hasOwnProperty(i)) {\n            continue;\n          }\n          this.last = initLast.clone();\n          var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var dayOfMonth = this.last.nthWeekDay(dow, pos);\n\n          // If |pos| >= 6, the byday is invalid for a monthly rule.\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          }\n\n          // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n        this.last = tempLast.clone();\n\n        //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        if (this.last.day < 0) {\n          var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n          this.last.day = daysInMonth + this.last.day + 1;\n        }\n      }\n\n    },\n\n    /**\n     * Retrieve the next occurrence from the iterator.\n     * @return {ICAL.Time}\n     */\n    next: function icalrecur_iterator_next() {\n      var before = (this.last ? this.last.clone() : null);\n\n      if ((this.rule.count && this.occurrence_number >= this.rule.count) ||\n          (this.rule.until && this.last.compare(this.rule.until) > 0)) {\n\n        //XXX: right now this is just a flag and has no impact\n        //     we can simplify the above case to check for completed later.\n        this.completed = true;\n\n        return null;\n      }\n\n      if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n        // First of all, give the instance that was initialized\n        this.occurrence_number++;\n        return this.last;\n      }\n\n\n      var valid;\n      do {\n        valid = 1;\n\n        switch (this.rule.freq) {\n        case \"SECONDLY\":\n          this.next_second();\n          break;\n        case \"MINUTELY\":\n          this.next_minute();\n          break;\n        case \"HOURLY\":\n          this.next_hour();\n          break;\n        case \"DAILY\":\n          this.next_day();\n          break;\n        case \"WEEKLY\":\n          this.next_week();\n          break;\n        case \"MONTHLY\":\n          valid = this.next_month();\n          break;\n        case \"YEARLY\":\n          this.next_year();\n          break;\n\n        default:\n          return null;\n        }\n      } while (!this.check_contracting_rules() ||\n               this.last.compare(this.dtstart) < 0 ||\n               !valid);\n\n      // TODO is this valid?\n      if (this.last.compare(before) == 0) {\n        throw new Error(\"Same occurrence found twice, protecting \" +\n                        \"you from death by recursion\");\n      }\n\n      if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n        this.completed = true;\n        return null;\n      } else {\n        this.occurrence_number++;\n        return this.last;\n      }\n    },\n\n    next_second: function next_second() {\n      return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n    },\n\n    increment_second: function increment_second(inc) {\n      return this.increment_generic(inc, \"second\", 60, \"minute\");\n    },\n\n    next_minute: function next_minute() {\n      return this.next_generic(\"BYMINUTE\", \"MINUTELY\",\n                               \"minute\", \"hour\", \"next_second\");\n    },\n\n    increment_minute: function increment_minute(inc) {\n      return this.increment_generic(inc, \"minute\", 60, \"hour\");\n    },\n\n    next_hour: function next_hour() {\n      return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\",\n                               \"monthday\", \"next_minute\");\n    },\n\n    increment_hour: function increment_hour(inc) {\n      this.increment_generic(inc, \"hour\", 24, \"monthday\");\n    },\n\n    next_day: function next_day() {\n      var has_by_day = (\"BYDAY\" in this.by_data);\n      var this_freq = (this.rule.freq == \"DAILY\");\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (this_freq) {\n        this.increment_monthday(this.rule.interval);\n      } else {\n        this.increment_monthday(1);\n      }\n\n      return 0;\n    },\n\n    next_week: function next_week() {\n      var end_of_data = 0;\n\n      if (this.next_weekday_by_week() == 0) {\n        return end_of_data;\n      }\n\n      if (this.has_by_data(\"BYWEEKNO\")) {\n        var idx = ++this.by_indices.BYWEEKNO;\n\n        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n          this.by_indices.BYWEEKNO = 0;\n          end_of_data = 1;\n        }\n\n        // HACK should be first month of the year\n        this.last.month = 1;\n        this.last.day = 1;\n\n        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n\n        this.last.day += 7 * week_no;\n\n        if (end_of_data) {\n          this.increment_year(1);\n        }\n      } else {\n        // Jump to the next week\n        this.increment_monthday(7 * this.rule.interval);\n      }\n\n      return end_of_data;\n    },\n\n    /**\n     * Normalize each by day rule for a given year/month.\n     * Takes into account ordering and negative rules\n     *\n     * @private\n     * @param {Number} year         Current year.\n     * @param {Number} month        Current month.\n     * @param {Array}  rules        Array of rules.\n     *\n     * @return {Array} sorted and normalized rules.\n     *                 Negative rules will be expanded to their\n     *                 correct positive values for easier processing.\n     */\n    normalizeByMonthDayRules: function(year, month, rules) {\n      var daysInMonth = ICAL.Time.daysInMonth(month, year);\n\n      // XXX: This is probably bad for performance to allocate\n      //      a new array for each month we scan, if possible\n      //      we should try to optimize this...\n      var newRules = [];\n\n      var ruleIdx = 0;\n      var len = rules.length;\n      var rule;\n\n      for (; ruleIdx < len; ruleIdx++) {\n        rule = rules[ruleIdx];\n\n        // if this rule falls outside of given\n        // month discard it.\n        if (Math.abs(rule) > daysInMonth) {\n          continue;\n        }\n\n        // negative case\n        if (rule < 0) {\n          // we add (not subtract it is a negative number)\n          // one from the rule because 1 === last day of month\n          rule = daysInMonth + (rule + 1);\n        } else if (rule === 0) {\n          // skip zero: it is invalid.\n          continue;\n        }\n\n        // only add unique items...\n        if (newRules.indexOf(rule) === -1) {\n          newRules.push(rule);\n        }\n\n      }\n\n      // unique and sort\n      return newRules.sort(function(a, b) { return a - b; });\n    },\n\n    /**\n     * NOTES:\n     * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n     * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n     * both conditions match a given date (this.last.day) iteration stops.\n     *\n     * @private\n     * @param {Boolean=} isInit     When given true will not increment the\n     *                                current day (this.last).\n     */\n    _byDayAndMonthDay: function(isInit) {\n      var byMonthDay; // setup in initMonth\n      var byDay = this.by_data.BYDAY;\n\n      var date;\n      var dateIdx = 0;\n      var dateLen; // setup in initMonth\n      var dayLen = byDay.length;\n\n      // we are not valid by default\n      var dataIsValid = 0;\n\n      var daysInMonth;\n      var self = this;\n      // we need a copy of this, because a DateTime gets normalized\n      // automatically if the day is out of range. At some points we\n      // set the last day to 0 to start counting.\n      var lastDay = this.last.day;\n\n      function initMonth() {\n        daysInMonth = ICAL.Time.daysInMonth(\n          self.last.month, self.last.year\n        );\n\n        byMonthDay = self.normalizeByMonthDayRules(\n          self.last.year,\n          self.last.month,\n          self.by_data.BYMONTHDAY\n        );\n\n        dateLen = byMonthDay.length;\n\n        // For the case of more than one occurrence in one month\n        // we have to be sure to start searching after the last\n        // found date or at the last BYMONTHDAY, unless we are\n        // initializing the iterator because in this case we have\n        // to consider the last found date too.\n        while (byMonthDay[dateIdx] <= lastDay &&\n               !(isInit && byMonthDay[dateIdx] == lastDay) &&\n               dateIdx < dateLen - 1) {\n          dateIdx++;\n        }\n      }\n\n      function nextMonth() {\n        // since the day is incremented at the start\n        // of the loop below, we need to start at 0\n        lastDay = 0;\n        self.increment_month();\n        dateIdx = 0;\n        initMonth();\n      }\n\n      initMonth();\n\n      // should come after initMonth\n      if (isInit) {\n        lastDay -= 1;\n      }\n\n      // Use a counter to avoid an infinite loop with malformed rules.\n      // Stop checking after 4 years so we consider also a leap year.\n      var monthsCounter = 48;\n\n      while (!dataIsValid && monthsCounter) {\n        monthsCounter--;\n        // increment the current date. This is really\n        // important otherwise we may fall into the infinite\n        // loop trap. The initial date takes care of the case\n        // where the current date is the date we are looking\n        // for.\n        date = lastDay + 1;\n\n        if (date > daysInMonth) {\n          nextMonth();\n          continue;\n        }\n\n        // find next date\n        var next = byMonthDay[dateIdx++];\n\n        // this logic is dependant on the BYMONTHDAYS\n        // being in order (which is done by #normalizeByMonthDayRules)\n        if (next >= date) {\n          // if the next month day is in the future jump to it.\n          lastDay = next;\n        } else {\n          // in this case the 'next' monthday has past\n          // we must move to the month.\n          nextMonth();\n          continue;\n        }\n\n        // Now we can loop through the day rules to see\n        // if one matches the current month date.\n        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n          var parts = this.ruleDayOfWeek(byDay[dayIdx]);\n          var pos = parts[0];\n          var dow = parts[1];\n\n          this.last.day = lastDay;\n          if (this.last.isNthWeekDay(dow, pos)) {\n            // when we find the valid one we can mark\n            // the conditions as met and break the loop.\n            // (Because we have this condition above\n            //  it will also break the parent loop).\n            dataIsValid = 1;\n            break;\n          }\n        }\n\n        // It is completely possible that the combination\n        // cannot be matched in the current month.\n        // When we reach the end of possible combinations\n        // in the current month we iterate to the next one.\n        // since dateIdx is incremented right after getting\n        // \"next\", we don't need dateLen -1 here.\n        if (!dataIsValid && dateIdx === dateLen) {\n          nextMonth();\n          continue;\n        }\n      }\n\n      if (monthsCounter <= 0) {\n        // Checked 4 years without finding a Byday that matches\n        // a Bymonthday. Maybe the rule is not correct.\n        throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n      }\n\n\n      return dataIsValid;\n    },\n\n    next_month: function next_month() {\n      var this_freq = (this.rule.freq == \"MONTHLY\");\n      var data_valid = 1;\n\n      if (this.next_hour() == 0) {\n        return data_valid;\n      }\n\n      if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n        data_valid = this._byDayAndMonthDay();\n      } else if (this.has_by_data(\"BYDAY\")) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var setpos = 0;\n        var setpos_total = 0;\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          var last_day = this.last.day;\n          for (var day = 1; day <= daysInMonth; day++) {\n            this.last.day = day;\n            if (this.is_day_in_byday(this.last)) {\n              setpos_total++;\n              if (day <= last_day) {\n                setpos++;\n              }\n            }\n          }\n          this.last.day = last_day;\n        }\n\n        data_valid = 0;\n        for (var day = this.last.day + 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") ||\n                this.check_set_position(++setpos) ||\n                this.check_set_position(setpos - setpos_total - 1)) {\n\n              data_valid = 1;\n              break;\n            }\n          }\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          this.increment_month();\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n              data_valid = 1;\n            }\n          } else {\n            data_valid = 0;\n          }\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        this.by_indices.BYMONTHDAY++;\n\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          this.by_indices.BYMONTHDAY = 0;\n          this.increment_month();\n        }\n\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n        if (day < 0) {\n          day = daysInMonth + day + 1;\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          data_valid = this.is_day_in_byday(this.last);\n        } else {\n          this.last.day = day;\n        }\n\n      } else {\n        this.increment_month();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n          data_valid = 0;\n        } else {\n          this.last.day = this.by_data.BYMONTHDAY[0];\n        }\n      }\n\n      return data_valid;\n    },\n\n    next_weekday_by_week: function next_weekday_by_week() {\n      var end_of_data = 0;\n\n      if (this.next_hour() == 0) {\n        return end_of_data;\n      }\n\n      if (!this.has_by_data(\"BYDAY\")) {\n        return 1;\n      }\n\n      for (;;) {\n        var tt = new ICAL.Time();\n        this.by_indices.BYDAY++;\n\n        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n          this.by_indices.BYDAY = 0;\n          end_of_data = 1;\n        }\n\n        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n        var parts = this.ruleDayOfWeek(coded_day);\n        var dow = parts[1];\n\n        dow -= this.rule.wkst;\n\n        if (dow < 0) {\n          dow += 7;\n        }\n\n        tt.year = this.last.year;\n        tt.month = this.last.month;\n        tt.day = this.last.day;\n\n        var startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n        if (dow + startOfWeek < 1) {\n          // The selected date is in the previous year\n          if (!end_of_data) {\n            continue;\n          }\n        }\n\n        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow,\n                                                  this.last.year);\n\n        /**\n         * The normalization horrors below are due to\n         * the fact that when the year/month/day changes\n         * it can effect the other operations that come after.\n         */\n        this.last.year = next.year;\n        this.last.month = next.month;\n        this.last.day = next.day;\n\n        return end_of_data;\n      }\n    },\n\n    next_year: function next_year() {\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (++this.days_index == this.days.length) {\n        this.days_index = 0;\n        do {\n          this.increment_year(this.rule.interval);\n          this.expand_year_days(this.last.year);\n        } while (this.days.length == 0);\n      }\n\n      this._nextByYearDay();\n\n      return 1;\n    },\n\n    _nextByYearDay: function _nextByYearDay() {\n        var doy = this.days[this.days_index];\n        var year = this.last.year;\n        if (doy < 1) {\n            // Time.fromDayOfYear(doy, year) indexes relative to the\n            // start of the given year. That is different from the\n            // semantics of BYYEARDAY where negative indexes are an\n            // offset from the end of the given year.\n            doy += 1;\n            year += 1;\n        }\n        var next = ICAL.Time.fromDayOfYear(doy, year);\n        this.last.day = next.day;\n        this.last.month = next.month;\n    },\n\n    /**\n     * @param dow (eg: '1TU', '-1MO')\n     * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday\n     * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n     */\n    ruleDayOfWeek: function ruleDayOfWeek(dow, aWeekStart) {\n      var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n      if (matches) {\n        var pos = parseInt(matches[1] || 0, 10);\n        dow = ICAL.Recur.icalDayToNumericDay(matches[2], aWeekStart);\n        return [pos, dow];\n      } else {\n        return [0, 0];\n      }\n    },\n\n    next_generic: function next_generic(aRuleType, aInterval, aDateAttr,\n                                        aFollowingAttr, aPreviousIncr) {\n      var has_by_rule = (aRuleType in this.by_data);\n      var this_freq = (this.rule.freq == aInterval);\n      var end_of_data = 0;\n\n      if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n        return end_of_data;\n      }\n\n      if (has_by_rule) {\n        this.by_indices[aRuleType]++;\n        var idx = this.by_indices[aRuleType];\n        var dta = this.by_data[aRuleType];\n\n        if (this.by_indices[aRuleType] == dta.length) {\n          this.by_indices[aRuleType] = 0;\n          end_of_data = 1;\n        }\n        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n      } else if (this_freq) {\n        this[\"increment_\" + aDateAttr](this.rule.interval);\n      }\n\n      if (has_by_rule && end_of_data && this_freq) {\n        this[\"increment_\" + aFollowingAttr](1);\n      }\n\n      return end_of_data;\n    },\n\n    increment_monthday: function increment_monthday(inc) {\n      for (var i = 0; i < inc; i++) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        this.last.day++;\n\n        if (this.last.day > daysInMonth) {\n          this.last.day -= daysInMonth;\n          this.increment_month();\n        }\n      }\n    },\n\n    increment_month: function increment_month() {\n      this.last.day = 1;\n      if (this.has_by_data(\"BYMONTH\")) {\n        this.by_indices.BYMONTH++;\n\n        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n          this.by_indices.BYMONTH = 0;\n          this.increment_year(1);\n        }\n\n        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n      } else {\n        if (this.rule.freq == \"MONTHLY\") {\n          this.last.month += this.rule.interval;\n        } else {\n          this.last.month++;\n        }\n\n        this.last.month--;\n        var years = ICAL.helpers.trunc(this.last.month / 12);\n        this.last.month %= 12;\n        this.last.month++;\n\n        if (years != 0) {\n          this.increment_year(years);\n        }\n      }\n    },\n\n    increment_year: function increment_year(inc) {\n      this.last.year += inc;\n    },\n\n    increment_generic: function increment_generic(inc, aDateAttr,\n                                                  aFactor, aNextIncrement) {\n      this.last[aDateAttr] += inc;\n      var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);\n      this.last[aDateAttr] %= aFactor;\n      if (nextunit != 0) {\n        this[\"increment_\" + aNextIncrement](nextunit);\n      }\n    },\n\n    has_by_data: function has_by_data(aRuleType) {\n      return (aRuleType in this.rule.parts);\n    },\n\n    expand_year_days: function expand_year_days(aYear) {\n      var t = new ICAL.Time();\n      this.days = [];\n\n      // We need our own copy with a few keys set\n      var parts = {};\n      var rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n      for (var p in rules) {\n        /* istanbul ignore else */\n        if (rules.hasOwnProperty(p)) {\n          var part = rules[p];\n          if (part in this.rule.parts) {\n            parts[part] = this.rule.parts[part];\n          }\n        }\n      }\n\n      if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n        var valid = 1;\n        var validWeeks = {};\n        t.year = aYear;\n        t.isDate = true;\n\n        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n          var month = this.by_data.BYMONTH[monthIdx];\n          t.month = month;\n          t.day = 1;\n          var first_week = t.weekNumber(this.rule.wkst);\n          t.day = ICAL.Time.daysInMonth(month, aYear);\n          var last_week = t.weekNumber(this.rule.wkst);\n          for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n            validWeeks[monthIdx] = 1;\n          }\n        }\n\n        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n          var weekno = this.by_data.BYWEEKNO[weekIdx];\n          if (weekno < 52) {\n            valid &= validWeeks[weekIdx];\n          } else {\n            valid = 0;\n          }\n        }\n\n        if (valid) {\n          delete parts.BYMONTH;\n        } else {\n          delete parts.BYWEEKNO;\n        }\n      }\n\n      var partCount = Object.keys(parts).length;\n\n      if (partCount == 0) {\n        var t1 = this.dtstart.clone();\n        t1.year = this.last.year;\n        this.days.push(t1.dayOfYear());\n      } else if (partCount == 1 && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var t2 = this.dtstart.clone();\n          t2.year = aYear;\n          t2.month = this.by_data.BYMONTH[monthkey];\n          t2.isDate = true;\n          this.days.push(t2.dayOfYear());\n        }\n      } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n        for (var monthdaykey in this.by_data.BYMONTHDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n            continue;\n          }\n          var t3 = this.dtstart.clone();\n          var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n          if (day_ < 0) {\n            var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);\n            day_ = day_ + daysInMonth + 1;\n          }\n          t3.day = day_;\n          t3.year = aYear;\n          t3.isDate = true;\n          this.days.push(t3.dayOfYear());\n        }\n      } else if (partCount == 2 &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month_ = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);\n          for (var monthdaykey in this.by_data.BYMONTHDAY) {\n            /* istanbul ignore if */\n            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n              continue;\n            }\n            var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n            if (day_ < 0) {\n              day_ = day_ + daysInMonth + 1;\n            }\n            t.day = day_;\n            t.month = month_;\n            t.year = aYear;\n            t.isDate = true;\n\n            this.days.push(t.dayOfYear());\n          }\n        }\n      } else if (partCount == 1 && \"BYWEEKNO\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 2 &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemented in libical\n      } else if (partCount == 1 && \"BYDAY\" in parts) {\n        this.days = this.days.concat(this.expand_by_day(aYear));\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n          var month = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month, aYear);\n\n          t.year = aYear;\n          t.month = this.by_data.BYMONTH[monthkey];\n          t.day = 1;\n          t.isDate = true;\n\n          var first_dow = t.dayOfWeek();\n          var doy_offset = t.dayOfYear() - 1;\n\n          t.day = daysInMonth;\n          var last_dow = t.dayOfWeek();\n\n          if (this.has_by_data(\"BYSETPOS\")) {\n            var set_pos_counter = 0;\n            var by_month_day = [];\n            for (var day = 1; day <= daysInMonth; day++) {\n              t.day = day;\n              if (this.is_day_in_byday(t)) {\n                by_month_day.push(day);\n              }\n            }\n\n            for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n              if (this.check_set_position(spIndex + 1) ||\n                  this.check_set_position(spIndex - by_month_day.length)) {\n                this.days.push(doy_offset + by_month_day[spIndex]);\n              }\n            }\n          } else {\n            for (var daycodedkey in this.by_data.BYDAY) {\n              /* istanbul ignore if */\n              if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {\n                continue;\n              }\n              var coded_day = this.by_data.BYDAY[daycodedkey];\n              var bydayParts = this.ruleDayOfWeek(coded_day);\n              var pos = bydayParts[0];\n              var dow = bydayParts[1];\n              var month_day;\n\n              var first_matching_day = ((dow + 7 - first_dow) % 7) + 1;\n              var last_matching_day = daysInMonth - ((last_dow + 7 - dow) % 7);\n\n              if (pos == 0) {\n                for (var day = first_matching_day; day <= daysInMonth; day += 7) {\n                  this.days.push(doy_offset + day);\n                }\n              } else if (pos > 0) {\n                month_day = first_matching_day + (pos - 1) * 7;\n\n                if (month_day <= daysInMonth) {\n                  this.days.push(doy_offset + month_day);\n                }\n              } else {\n                month_day = last_matching_day + (pos + 1) * 7;\n\n                if (month_day > 0) {\n                  this.days.push(doy_offset + month_day);\n                }\n              }\n            }\n          }\n        }\n        // Return dates in order of occurrence (1,2,3,...) instead\n        // of by groups of weekdays (1,8,15,...,2,9,16,...).\n        this.days.sort(function(a, b) { return a - b; }); // Comparator function allows to sort numbers.\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYMONTHDAY\" in parts &&\n                 \"BYMONTH\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 &&\n              this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          var weekno = tt.weekNumber(this.rule.wkst);\n\n          if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 &&\n                 \"BYDAY\" in parts &&\n                 \"BYWEEKNO\" in parts &&\n                 \"BYMONTHDAY\" in parts) {\n        // TODO unimplemted in libical\n      } else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n        this.days = this.days.concat(this.by_data.BYYEARDAY);\n      } else {\n        this.days = [];\n      }\n      return 0;\n    },\n\n    expand_by_day: function expand_by_day(aYear) {\n\n      var days_list = [];\n      var tmp = this.last.clone();\n\n      tmp.year = aYear;\n      tmp.month = 1;\n      tmp.day = 1;\n      tmp.isDate = true;\n\n      var start_dow = tmp.dayOfWeek();\n\n      tmp.month = 12;\n      tmp.day = 31;\n      tmp.isDate = true;\n\n      var end_dow = tmp.dayOfWeek();\n      var end_year_day = tmp.dayOfYear();\n\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n\n        if (pos == 0) {\n          var tmp_start_doy = ((dow + 7 - start_dow) % 7) + 1;\n\n          for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n            days_list.push(doy);\n          }\n\n        } else if (pos > 0) {\n          var first;\n          if (dow >= start_dow) {\n            first = dow - start_dow + 1;\n          } else {\n            first = dow - start_dow + 8;\n          }\n\n          days_list.push(first + (pos - 1) * 7);\n        } else {\n          var last;\n          pos = -pos;\n\n          if (dow <= end_dow) {\n            last = end_year_day - end_dow + dow;\n          } else {\n            last = end_year_day - end_dow + dow - 7;\n          }\n\n          days_list.push(last - (pos - 1) * 7);\n        }\n      }\n      return days_list;\n    },\n\n    is_day_in_byday: function is_day_in_byday(tt) {\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n        var this_dow = tt.dayOfWeek();\n\n        if ((pos == 0 && dow == this_dow) ||\n            (tt.nthWeekDay(dow, pos) == tt.day)) {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n\n    /**\n     * Checks if given value is in BYSETPOS.\n     *\n     * @private\n     * @param {Numeric} aPos position to check for.\n     * @return {Boolean} false unless BYSETPOS rules exist\n     *                   and the given value is present in rules.\n     */\n    check_set_position: function check_set_position(aPos) {\n      if (this.has_by_data('BYSETPOS')) {\n        var idx = this.by_data.BYSETPOS.indexOf(aPos);\n        // negative numbers are not false-y\n        return idx !== -1;\n      }\n      return false;\n    },\n\n    sort_byday_rules: function icalrecur_sort_byday_rules(aRules) {\n      for (var i = 0; i < aRules.length; i++) {\n        for (var j = 0; j < i; j++) {\n          var one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n          var two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n          if (one > two) {\n            var tmp = aRules[i];\n            aRules[i] = aRules[j];\n            aRules[j] = tmp;\n          }\n        }\n      }\n    },\n\n    check_contract_restriction: function check_contract_restriction(aRuleType, v) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n      var pass = false;\n\n      if (aRuleType in this.by_data &&\n          ruleMapValue == icalrecur_iterator.CONTRACT) {\n\n        var ruleType = this.by_data[aRuleType];\n\n        for (var bydatakey in ruleType) {\n          /* istanbul ignore else */\n          if (ruleType.hasOwnProperty(bydatakey)) {\n            if (ruleType[bydatakey] == v) {\n              pass = true;\n              break;\n            }\n          }\n        }\n      } else {\n        // Not a contracting byrule or has no data, test passes\n        pass = true;\n      }\n      return pass;\n    },\n\n    check_contracting_rules: function check_contracting_rules() {\n      var dow = this.last.dayOfWeek();\n      var weekNo = this.last.weekNumber(this.rule.wkst);\n      var doy = this.last.dayOfYear();\n\n      return (this.check_contract_restriction(\"BYSECOND\", this.last.second) &&\n              this.check_contract_restriction(\"BYMINUTE\", this.last.minute) &&\n              this.check_contract_restriction(\"BYHOUR\", this.last.hour) &&\n              this.check_contract_restriction(\"BYDAY\", ICAL.Recur.numericDayToIcalDay(dow)) &&\n              this.check_contract_restriction(\"BYWEEKNO\", weekNo) &&\n              this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) &&\n              this.check_contract_restriction(\"BYMONTH\", this.last.month) &&\n              this.check_contract_restriction(\"BYYEARDAY\", doy));\n    },\n\n    setup_defaults: function setup_defaults(aRuleType, req, deftime) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n\n      if (ruleMapValue != icalrecur_iterator.CONTRACT) {\n        if (!(aRuleType in this.by_data)) {\n          this.by_data[aRuleType] = [deftime];\n        }\n        if (this.rule.freq != req) {\n          return this.by_data[aRuleType][0];\n        }\n      }\n      return deftime;\n    },\n\n    /**\n     * Convert iterator into a serialize-able object.  Will preserve current\n     * iteration sequence to ensure the seamless continuation of the recurrence\n     * rule.\n     * @return {Object}\n     */\n    toJSON: function() {\n      var result = Object.create(null);\n\n      result.initialized = this.initialized;\n      result.rule = this.rule.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.by_data = this.by_data;\n      result.days = this.days;\n      result.last = this.last.toJSON();\n      result.by_indices = this.by_indices;\n      result.occurrence_number = this.occurrence_number;\n\n      return result;\n    }\n  };\n\n  icalrecur_iterator._indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n\n  icalrecur_iterator._expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n  icalrecur_iterator.UNKNOWN = 0;\n  icalrecur_iterator.CONTRACT = 1;\n  icalrecur_iterator.EXPAND = 2;\n  icalrecur_iterator.ILLEGAL = 3;\n\n  return icalrecur_iterator;\n\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.RecurExpansion = (function() {\n  function formatTime(item) {\n    return ICAL.helpers.formatClassType(item, ICAL.Time);\n  }\n\n  function compareTime(a, b) {\n    return a.compare(b);\n  }\n\n  function isRecurringComponent(comp) {\n    return comp.hasProperty('rdate') ||\n           comp.hasProperty('rrule') ||\n           comp.hasProperty('recurrence-id');\n  }\n\n  /**\n   * @classdesc\n   * Primary class for expanding recurring rules.  Can take multiple rrules,\n   * rdates, exdate(s) and iterate (in order) over each next occurrence.\n   *\n   * Once initialized this class can also be serialized saved and continue\n   * iteration from the last point.\n   *\n   * NOTE: it is intended that this class is to be used\n   *       with ICAL.Event which handles recurrence exceptions.\n   *\n   * @example\n   * // assuming event is a parsed ical component\n   * var event;\n   *\n   * var expand = new ICAL.RecurExpansion({\n   *   component: event,\n   *   dtstart: event.getFirstPropertyValue('dtstart')\n   * });\n   *\n   * // remember there are infinite rules\n   * // so it is a good idea to limit the scope\n   * // of the iterations then resume later on.\n   *\n   * // next is always an ICAL.Time or null\n   * var next;\n   *\n   * while (someCondition && (next = expand.next())) {\n   *   // do something with next\n   * }\n   *\n   * // save instance for later\n   * var json = JSON.stringify(expand);\n   *\n   * //...\n   *\n   * // NOTE: if the component's properties have\n   * //       changed you will need to rebuild the\n   * //       class and start over. This only works\n   * //       when the component's recurrence info is the same.\n   * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n   *\n   * @description\n   * The options object can be filled with the specified initial values. It can\n   * also contain additional members, as a result of serializing a previous\n   * expansion state, as shown in the example.\n   *\n   * @class\n   * @alias ICAL.RecurExpansion\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {ICAL.Time} options.dtstart\n   *        Start time of the event\n   * @param {ICAL.Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n  function RecurExpansion(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  RecurExpansion.prototype = {\n    /**\n     * True when iteration is fully completed.\n     * @type {Boolean}\n     */\n    complete: false,\n\n    /**\n     * Array of rrule iterators.\n     *\n     * @type {ICAL.RecurIterator[]}\n     * @private\n     */\n    ruleIterators: null,\n\n    /**\n     * Array of rdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    ruleDates: null,\n\n    /**\n     * Array of exdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    exDates: null,\n\n    /**\n     * Current position in ruleDates array.\n     * @type {Number}\n     * @private\n     */\n    ruleDateInc: 0,\n\n    /**\n     * Current position in exDates array\n     * @type {Number}\n     * @private\n     */\n    exDateInc: 0,\n\n    /**\n     * Current negative date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    exDate: null,\n\n    /**\n     * Current additional date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    ruleDate: null,\n\n    /**\n     * Start date of recurring rules.\n     *\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * Last expanded time\n     *\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * Initialize the recurrence expansion from the data object. The options\n     * object may also contain additional members, see the\n     * {@link ICAL.RecurExpansion constructor} for more details.\n     *\n     * @param {Object} options\n     *        Recurrence expansion options\n     * @param {ICAL.Time} options.dtstart\n     *        Start time of the event\n     * @param {ICAL.Component=} options.component\n     *        Component for expansion, required if not resuming.\n     */\n    fromData: function(options) {\n      var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!start) {\n        throw new Error('.dtstart (ICAL.Time) must be given');\n      } else {\n        this.dtstart = start;\n      }\n\n      if (options.component) {\n        this._init(options.component);\n      } else {\n        this.last = formatTime(options.last) || start.clone();\n\n        if (!options.ruleIterators) {\n          throw new Error('.ruleIterators or .component must be given');\n        }\n\n        this.ruleIterators = options.ruleIterators.map(function(item) {\n          return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);\n        });\n\n        this.ruleDateInc = options.ruleDateInc;\n        this.exDateInc = options.exDateInc;\n\n        if (options.ruleDates) {\n          this.ruleDates = options.ruleDates.map(formatTime);\n          this.ruleDate = this.ruleDates[this.ruleDateInc];\n        }\n\n        if (options.exDates) {\n          this.exDates = options.exDates.map(formatTime);\n          this.exDate = this.exDates[this.exDateInc];\n        }\n\n        if (typeof(options.complete) !== 'undefined') {\n          this.complete = options.complete;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence in the series.\n     * @return {ICAL.Time}\n     */\n    next: function() {\n      var iter;\n      var ruleOfDay;\n      var next;\n      var compare;\n\n      var maxTries = 500;\n      var currentTry = 0;\n\n      while (true) {\n        if (currentTry++ > maxTries) {\n          throw new Error(\n            'max tries have occured, rule may be impossible to forfill.'\n          );\n        }\n\n        next = this.ruleDate;\n        iter = this._nextRecurrenceIter(this.last);\n\n        // no more matches\n        // because we increment the rule day or rule\n        // _after_ we choose a value this should be\n        // the only spot where we need to worry about the\n        // end of events.\n        if (!next && !iter) {\n          // there are no more iterators or rdates\n          this.complete = true;\n          break;\n        }\n\n        // no next rule day or recurrence rule is first.\n        if (!next || (iter && next.compare(iter.last) > 0)) {\n          // must be cloned, recur will reuse the time element.\n          next = iter.last.clone();\n          // move to next so we can continue\n          iter.next();\n        }\n\n        // if the ruleDate is still next increment it.\n        if (this.ruleDate === next) {\n          this._nextRuleDay();\n        }\n\n        this.last = next;\n\n        // check the negative rules\n        if (this.exDate) {\n          compare = this.exDate.compare(this.last);\n\n          if (compare < 0) {\n            this._nextExDay();\n          }\n\n          // if the current rule is excluded skip it.\n          if (compare === 0) {\n            this._nextExDay();\n            continue;\n          }\n        }\n\n        //XXX: The spec states that after we resolve the final\n        //     list of dates we execute exdate this seems somewhat counter\n        //     intuitive to what I have seen most servers do so for now\n        //     I exclude based on the original date not the one that may\n        //     have been modified by the exception.\n        return this.last;\n      }\n    },\n\n    /**\n     * Converts object into a serialize-able format. This format can be passed\n     * back into the expansion to resume iteration.\n     * @return {Object}\n     */\n    toJSON: function() {\n      function toJSON(item) {\n        return item.toJSON();\n      }\n\n      var result = Object.create(null);\n      result.ruleIterators = this.ruleIterators.map(toJSON);\n\n      if (this.ruleDates) {\n        result.ruleDates = this.ruleDates.map(toJSON);\n      }\n\n      if (this.exDates) {\n        result.exDates = this.exDates.map(toJSON);\n      }\n\n      result.ruleDateInc = this.ruleDateInc;\n      result.exDateInc = this.exDateInc;\n      result.last = this.last.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.complete = this.complete;\n\n      return result;\n    },\n\n    /**\n     * Extract all dates from the properties in the given component. The\n     * properties will be filtered by the property name.\n     *\n     * @private\n     * @param {ICAL.Component} component        The component to search in\n     * @param {String} propertyName             The property name to search for\n     * @return {ICAL.Time[]}                    The extracted dates.\n     */\n    _extractDates: function(component, propertyName) {\n      function handleProp(prop) {\n        idx = ICAL.helpers.binsearchInsert(\n          result,\n          prop,\n          compareTime\n        );\n\n        // ordered insert\n        result.splice(idx, 0, prop);\n      }\n\n      var result = [];\n      var props = component.getAllProperties(propertyName);\n      var len = props.length;\n      var i = 0;\n      var prop;\n\n      var idx;\n\n      for (; i < len; i++) {\n        props[i].getValues().forEach(handleProp);\n      }\n\n      return result;\n    },\n\n    /**\n     * Initialize the recurrence expansion.\n     *\n     * @private\n     * @param {ICAL.Component} component    The component to initialize from.\n     */\n    _init: function(component) {\n      this.ruleIterators = [];\n\n      this.last = this.dtstart.clone();\n\n      // to provide api consistency non-recurring\n      // events can also use the iterator though it will\n      // only return a single time.\n      if (!isRecurringComponent(component)) {\n        this.ruleDate = this.last.clone();\n        this.complete = true;\n        return;\n      }\n\n      if (component.hasProperty('rdate')) {\n        this.ruleDates = this._extractDates(component, 'rdate');\n\n        // special hack for cases where first rdate is prior\n        // to the start date. We only check for the first rdate.\n        // This is mostly for google's crazy recurring date logic\n        // (contacts birthdays).\n        if ((this.ruleDates[0]) &&\n            (this.ruleDates[0].compare(this.dtstart) < 0)) {\n\n          this.ruleDateInc = 0;\n          this.last = this.ruleDates[0].clone();\n        } else {\n          this.ruleDateInc = ICAL.helpers.binsearchInsert(\n            this.ruleDates,\n            this.last,\n            compareTime\n          );\n        }\n\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (component.hasProperty('rrule')) {\n        var rules = component.getAllProperties('rrule');\n        var i = 0;\n        var len = rules.length;\n\n        var rule;\n        var iter;\n\n        for (; i < len; i++) {\n          rule = rules[i].getFirstValue();\n          iter = rule.iterator(this.dtstart);\n          this.ruleIterators.push(iter);\n\n          // increment to the next occurrence so future\n          // calls to next return times beyond the initial iteration.\n          // XXX: I find this suspicious might be a bug?\n          iter.next();\n        }\n      }\n\n      if (component.hasProperty('exdate')) {\n        this.exDates = this._extractDates(component, 'exdate');\n        // if we have a .last day we increment the index to beyond it.\n        this.exDateInc = ICAL.helpers.binsearchInsert(\n          this.exDates,\n          this.last,\n          compareTime\n        );\n\n        this.exDate = this.exDates[this.exDateInc];\n      }\n    },\n\n    /**\n     * Advance to the next exdate\n     * @private\n     */\n    _nextExDay: function() {\n      this.exDate = this.exDates[++this.exDateInc];\n    },\n\n    /**\n     * Advance to the next rule date\n     * @private\n     */\n    _nextRuleDay: function() {\n      this.ruleDate = this.ruleDates[++this.ruleDateInc];\n    },\n\n    /**\n     * Find and return the recurrence rule with the most recent event and\n     * return it.\n     *\n     * @private\n     * @return {?ICAL.RecurIterator}    Found iterator.\n     */\n    _nextRecurrenceIter: function() {\n      var iters = this.ruleIterators;\n\n      if (iters.length === 0) {\n        return null;\n      }\n\n      var len = iters.length;\n      var iter;\n      var iterTime;\n      var iterIdx = 0;\n      var chosenIter;\n\n      // loop through each iterator\n      for (; iterIdx < len; iterIdx++) {\n        iter = iters[iterIdx];\n        iterTime = iter.last;\n\n        // if iteration is complete\n        // then we must exclude it from\n        // the search and remove it.\n        if (iter.completed) {\n          len--;\n          if (iterIdx !== 0) {\n            iterIdx--;\n          }\n          iters.splice(iterIdx, 1);\n          continue;\n        }\n\n        // find the most recent possible choice\n        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n          // that iterator is saved\n          chosenIter = iter;\n        }\n      }\n\n      // the chosen iterator is returned but not mutated\n      // this iterator contains the most recent event.\n      return chosenIter;\n    }\n  };\n\n  return RecurExpansion;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.Event = (function() {\n\n  /**\n   * @classdesc\n   * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n   * object, followed by the component/property layer. The highest level is the\n   * event representation, which this class is part of. See the\n   * {@tutorial layers} guide for more details.\n   *\n   * @class\n   * @alias ICAL.Event\n   * @param {ICAL.Component=} component         The ICAL.Component to base this event on\n   * @param {Object} options                    Options for this event\n   * @param {Boolean} options.strictExceptions\n   *          When true, will verify exceptions are related by their UUID\n   * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  function Event(component, options) {\n    if (!(component instanceof ICAL.Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new ICAL.Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function(event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n  Event.prototype = {\n\n    THISANDFUTURE: 'THISANDFUTURE',\n\n    /**\n     * List of related event exceptions.\n     *\n     * @type {ICAL.Event[]}\n     */\n    exceptions: null,\n\n    /**\n     * When true, will verify exceptions are related by their UUID.\n     *\n     * @type {Boolean}\n     */\n    strictExceptions: false,\n\n    /**\n     * Relates a given event exception to this object.  If the given component\n     * does not share the UID of this event it cannot be related and will throw\n     * an exception.\n     *\n     * If this component is an exception it cannot have other exceptions\n     * related to it.\n     *\n     * @param {ICAL.Component|ICAL.Event} obj       Component or event\n     */\n    relateException: function(obj) {\n      if (this.isRecurrenceException()) {\n        throw new Error('cannot relate exception to exceptions');\n      }\n\n      if (obj instanceof ICAL.Component) {\n        obj = new ICAL.Event(obj);\n      }\n\n      if (this.strictExceptions && obj.uid !== this.uid) {\n        throw new Error('attempted to relate unrelated exception');\n      }\n\n      var id = obj.recurrenceId.toString();\n\n      // we don't sort or manage exceptions directly\n      // here the recurrence expander handles that.\n      this.exceptions[id] = obj;\n\n      // index RANGE=THISANDFUTURE exceptions so we can\n      // look them up later in getOccurrenceDetails.\n      if (obj.modifiesFuture()) {\n        var item = [\n          obj.recurrenceId.toUnixTime(), id\n        ];\n\n        // we keep them sorted so we can find the nearest\n        // value later on...\n        var idx = ICAL.helpers.binsearchInsert(\n          this.rangeExceptions,\n          item,\n          compareRangeException\n        );\n\n        this.rangeExceptions.splice(idx, 0, item);\n      }\n    },\n\n    /**\n     * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n     * value.\n     *\n     * @return {Boolean}        True, when exception is within range\n     */\n    modifiesFuture: function() {\n      if (!this.component.hasProperty('recurrence-id')) {\n        return false;\n      }\n\n      var range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n      return range === this.THISANDFUTURE;\n    },\n\n    /**\n     * Finds the range exception nearest to the given date.\n     *\n     * @param {ICAL.Time} time usually an occurrence time of an event\n     * @return {?ICAL.Event} the related event/exception or null\n     */\n    findRangeException: function(time) {\n      if (!this.rangeExceptions.length) {\n        return null;\n      }\n\n      var utc = time.toUnixTime();\n      var idx = ICAL.helpers.binsearchInsert(\n        this.rangeExceptions,\n        [utc],\n        compareRangeException\n      );\n\n      idx -= 1;\n\n      // occurs before\n      if (idx < 0) {\n        return null;\n      }\n\n      var rangeItem = this.rangeExceptions[idx];\n\n      /* istanbul ignore next: sanity check only */\n      if (utc < rangeItem[0]) {\n        return null;\n      }\n\n      return rangeItem[1];\n    },\n\n    /**\n     * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}\n     *\n     * @typedef {Object} occurrenceDetails\n     * @memberof ICAL.Event\n     * @property {ICAL.Time} recurrenceId       The passed in recurrence id\n     * @property {ICAL.Event} item              The occurrence\n     * @property {ICAL.Time} startDate          The start of the occurrence\n     * @property {ICAL.Time} endDate            The end of the occurrence\n     */\n\n    /**\n     * Returns the occurrence details based on its start time.  If the\n     * occurrence has an exception will return the details for that exception.\n     *\n     * NOTE: this method is intend to be used in conjunction\n     *       with the {@link ICAL.Event#iterator iterator} method.\n     *\n     * @param {ICAL.Time} occurrence time occurrence\n     * @return {ICAL.Event.occurrenceDetails} Information about the occurrence\n     */\n    getOccurrenceDetails: function(occurrence) {\n      var id = occurrence.toString();\n      var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();\n      var item;\n      var result = {\n        //XXX: Clone?\n        recurrenceId: occurrence\n      };\n\n      if (id in this.exceptions) {\n        item = result.item = this.exceptions[id];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else if (utcId in this.exceptions) {\n        item = this.exceptions[utcId];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else {\n        // range exceptions (RANGE=THISANDFUTURE) have a\n        // lower priority then direct exceptions but\n        // must be accounted for first. Their item is\n        // always the first exception with the range prop.\n        var rangeExceptionId = this.findRangeException(\n          occurrence\n        );\n        var end;\n\n        if (rangeExceptionId) {\n          var exception = this.exceptions[rangeExceptionId];\n\n          // range exception must modify standard time\n          // by the difference (if any) in start/end times.\n          result.item = exception;\n\n          var startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n          if (!startDiff) {\n            var original = exception.recurrenceId.clone();\n            var newStart = exception.startDate.clone();\n\n            // zones must be same otherwise subtract may be incorrect.\n            original.zone = newStart.zone;\n            startDiff = newStart.subtractDate(original);\n\n            this._rangeExceptionCache[rangeExceptionId] = startDiff;\n          }\n\n          var start = occurrence.clone();\n          start.zone = exception.startDate.zone;\n          start.addDuration(startDiff);\n\n          end = start.clone();\n          end.addDuration(exception.duration);\n\n          result.startDate = start;\n          result.endDate = end;\n        } else {\n          // no range exception standard expansion\n          end = occurrence.clone();\n          end.addDuration(this.duration);\n\n          result.endDate = end;\n          result.startDate = occurrence;\n          result.item = this;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Builds a recur expansion instance for a specific point in time (defaults\n     * to startDate).\n     *\n     * @param {ICAL.Time} startTime     Starting point for expansion\n     * @return {ICAL.RecurExpansion}    Expansion object\n     */\n    iterator: function(startTime) {\n      return new ICAL.RecurExpansion({\n        component: this.component,\n        dtstart: startTime || this.startDate\n      });\n    },\n\n    /**\n     * Checks if the event is recurring\n     *\n     * @return {Boolean}        True, if event is recurring\n     */\n    isRecurring: function() {\n      var comp = this.component;\n      return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n    },\n\n    /**\n     * Checks if the event describes a recurrence exception. See\n     * {@tutorial terminology} for details.\n     *\n     * @return {Boolean}    True, if the event describes a recurrence exception\n     */\n    isRecurrenceException: function() {\n      return this.component.hasProperty('recurrence-id');\n    },\n\n    /**\n     * Returns the types of recurrences this event may have.\n     *\n     * Returned as an object with the following possible keys:\n     *\n     *    - YEARLY\n     *    - MONTHLY\n     *    - WEEKLY\n     *    - DAILY\n     *    - MINUTELY\n     *    - SECONDLY\n     *\n     * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}\n     *          Object of recurrence flags\n     */\n    getRecurrenceTypes: function() {\n      var rules = this.component.getAllProperties('rrule');\n      var i = 0;\n      var len = rules.length;\n      var result = Object.create(null);\n\n      for (; i < len; i++) {\n        var value = rules[i].getFirstValue();\n        result[value.freq] = true;\n      }\n\n      return result;\n    },\n\n    /**\n     * The uid of this event\n     * @type {String}\n     */\n    get uid() {\n      return this._firstProp('uid');\n    },\n\n    set uid(value) {\n      this._setProp('uid', value);\n    },\n\n    /**\n     * The start date\n     * @type {ICAL.Time}\n     */\n    get startDate() {\n      return this._firstProp('dtstart');\n    },\n\n    set startDate(value) {\n      this._setTime('dtstart', value);\n    },\n\n    /**\n     * The end date. This can be the result directly from the property, or the\n     * end date calculated from start date and duration. Setting the property\n     * will remove any duration properties.\n     * @type {ICAL.Time}\n     */\n    get endDate() {\n      var endDate = this._firstProp('dtend');\n      if (!endDate) {\n          var duration = this._firstProp('duration');\n          endDate = this.startDate.clone();\n          if (duration) {\n              endDate.addDuration(duration);\n          } else if (endDate.isDate) {\n              endDate.day += 1;\n          }\n      }\n      return endDate;\n    },\n\n    set endDate(value) {\n      if (this.component.hasProperty('duration')) {\n        this.component.removeProperty('duration');\n      }\n      this._setTime('dtend', value);\n    },\n\n    /**\n     * The duration. This can be the result directly from the property, or the\n     * duration calculated from start date and end date. Setting the property\n     * will remove any `dtend` properties.\n     * @type {ICAL.Duration}\n     */\n    get duration() {\n      var duration = this._firstProp('duration');\n      if (!duration) {\n        return this.endDate.subtractDateTz(this.startDate);\n      }\n      return duration;\n    },\n\n    set duration(value) {\n      if (this.component.hasProperty('dtend')) {\n        this.component.removeProperty('dtend');\n      }\n\n      this._setProp('duration', value);\n    },\n\n    /**\n     * The location of the event.\n     * @type {String}\n     */\n    get location() {\n      return this._firstProp('location');\n    },\n\n    set location(value) {\n      return this._setProp('location', value);\n    },\n\n    /**\n     * The attendees in the event\n     * @type {ICAL.Property[]}\n     * @readonly\n     */\n    get attendees() {\n      //XXX: This is way lame we should have a better\n      //     data structure for this later.\n      return this.component.getAllProperties('attendee');\n    },\n\n\n    /**\n     * The event summary\n     * @type {String}\n     */\n    get summary() {\n      return this._firstProp('summary');\n    },\n\n    set summary(value) {\n      this._setProp('summary', value);\n    },\n\n    /**\n     * The event description.\n     * @type {String}\n     */\n    get description() {\n      return this._firstProp('description');\n    },\n\n    set description(value) {\n      this._setProp('description', value);\n    },\n\n    /**\n     * The event color from [rfc7986](https://datatracker.ietf.org/doc/html/rfc7986)\n     * @type {String}\n     */\n    get color() {\n      return this._firstProp('color');\n    },\n\n    set color(value) {\n      this._setProp('color', value);\n    },\n\n    /**\n     * The organizer value as an uri. In most cases this is a mailto: uri, but\n     * it can also be something else, like urn:uuid:...\n     * @type {String}\n     */\n    get organizer() {\n      return this._firstProp('organizer');\n    },\n\n    set organizer(value) {\n      this._setProp('organizer', value);\n    },\n\n    /**\n     * The sequence value for this event. Used for scheduling\n     * see {@tutorial terminology}.\n     * @type {Number}\n     */\n    get sequence() {\n      return this._firstProp('sequence');\n    },\n\n    set sequence(value) {\n      this._setProp('sequence', value);\n    },\n\n    /**\n     * The recurrence id for this event. See {@tutorial terminology} for details.\n     * @type {ICAL.Time}\n     */\n    get recurrenceId() {\n      return this._firstProp('recurrence-id');\n    },\n\n    set recurrenceId(value) {\n      this._setTime('recurrence-id', value);\n    },\n\n    /**\n     * Set/update a time property's value.\n     * This will also update the TZID of the property.\n     *\n     * TODO: this method handles the case where we are switching\n     * from a known timezone to an implied timezone (one without TZID).\n     * This does _not_ handle the case of moving between a known\n     *  (by TimezoneService) timezone to an unknown timezone...\n     *\n     * We will not add/remove/update the VTIMEZONE subcomponents\n     *  leading to invalid ICAL data...\n     * @private\n     * @param {String} propName     The property name\n     * @param {ICAL.Time} time      The time to set\n     */\n    _setTime: function(propName, time) {\n      var prop = this.component.getFirstProperty(propName);\n\n      if (!prop) {\n        prop = new ICAL.Property(propName);\n        this.component.addProperty(prop);\n      }\n\n      // utc and local don't get a tzid\n      if (\n        time.zone === ICAL.Timezone.localTimezone ||\n        time.zone === ICAL.Timezone.utcTimezone\n      ) {\n        // remove the tzid\n        prop.removeParameter('tzid');\n      } else {\n        prop.setParameter('tzid', time.zone.tzid);\n      }\n\n      prop.setValue(time);\n    },\n\n    _setProp: function(name, value) {\n      this.component.updatePropertyWithValue(name, value);\n    },\n\n    _firstProp: function(name) {\n      return this.component.getFirstPropertyValue(name);\n    },\n\n    /**\n     * The string representation of this event.\n     * @return {String}\n     */\n    toString: function() {\n      return this.component.toString();\n    }\n\n  };\n\n  function compareRangeException(a, b) {\n    if (a[0] > b[0]) return 1;\n    if (b[0] > a[0]) return -1;\n    return 0;\n  }\n\n  return Event;\n}());\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n/**\n * This symbol is further described later on\n * @ignore\n */\nICAL.ComponentParser = (function() {\n  /**\n   * @classdesc\n   * The ComponentParser is used to process a String or jCal Object,\n   * firing callbacks for various found components, as well as completion.\n   *\n   * @example\n   * var options = {\n   *   // when false no events will be emitted for type\n   *   parseEvent: true,\n   *   parseTimezone: true\n   * };\n   *\n   * var parser = new ICAL.ComponentParser(options);\n   *\n   * parser.onevent(eventComponent) {\n   *   //...\n   * }\n   *\n   * // ontimezone, etc...\n   *\n   * parser.oncomplete = function() {\n   *\n   * };\n   *\n   * parser.process(stringOrComponent);\n   *\n   * @class\n   * @alias ICAL.ComponentParser\n   * @param {Object=} options        Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  function ComponentParser(options) {\n    if (typeof(options) === 'undefined') {\n      options = {};\n    }\n\n    var key;\n    for (key in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(key)) {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  ComponentParser.prototype = {\n\n    /**\n     * When true, parse events\n     *\n     * @type {Boolean}\n     */\n    parseEvent: true,\n\n    /**\n     * When true, parse timezones\n     *\n     * @type {Boolean}\n     */\n    parseTimezone: true,\n\n\n    /* SAX like events here for reference */\n\n    /**\n     * Fired when parsing is complete\n     * @callback\n     */\n    oncomplete: /* istanbul ignore next */ function() {},\n\n    /**\n     * Fired if an error occurs during parsing.\n     *\n     * @callback\n     * @param {Error} err details of error\n     */\n    onerror: /* istanbul ignore next */ function(err) {},\n\n    /**\n     * Fired when a top level component (VTIMEZONE) is found\n     *\n     * @callback\n     * @param {ICAL.Timezone} component     Timezone object\n     */\n    ontimezone: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Fired when a top level component (VEVENT) is found.\n     *\n     * @callback\n     * @param {ICAL.Event} component    Top level component\n     */\n    onevent: /* istanbul ignore next */ function(component) {},\n\n    /**\n     * Process a string or parse ical object.  This function itself will return\n     * nothing but will start the parsing process.\n     *\n     * Events must be registered prior to calling this method.\n     *\n     * @param {ICAL.Component|String|Object} ical      The component to process,\n     *        either in its final form, as a jCal Object, or string representation\n     */\n    process: function(ical) {\n      //TODO: this is sync now in the future we will have a incremental parser.\n      if (typeof(ical) === 'string') {\n        ical = ICAL.parse(ical);\n      }\n\n      if (!(ical instanceof ICAL.Component)) {\n        ical = new ICAL.Component(ical);\n      }\n\n      var components = ical.getAllSubcomponents();\n      var i = 0;\n      var len = components.length;\n      var component;\n\n      for (; i < len; i++) {\n        component = components[i];\n\n        switch (component.name) {\n          case 'vtimezone':\n            if (this.parseTimezone) {\n              var tzid = component.getFirstPropertyValue('tzid');\n              if (tzid) {\n                this.ontimezone(new ICAL.Timezone({\n                  tzid: tzid,\n                  component: component\n                }));\n              }\n            }\n            break;\n          case 'vevent':\n            if (this.parseEvent) {\n              this.onevent(new ICAL.Event(component));\n            }\n            break;\n          default:\n            continue;\n        }\n      }\n\n      //XXX: ideally we should do a \"nextTick\" here\n      //     so in all cases this is actually async.\n      this.oncomplete();\n    }\n  };\n\n  return ComponentParser;\n}());\n", "import { createPlugin } from '@fullcalendar/core/index.js';\nimport { addDays } from '@fullcalendar/core/internal.js';\nimport * as ICAL from 'ical.js';\n\n/* eslint-disable */\nclass IcalExpander {\n    constructor(opts) {\n        this.maxIterations = opts.maxIterations != null ? opts.maxIterations : 1000;\n        this.skipInvalidDates = opts.skipInvalidDates != null ? opts.skipInvalidDates : false;\n        this.jCalData = ICAL.parse(opts.ics);\n        this.component = new ICAL.Component(this.jCalData);\n        this.events = this.component.getAllSubcomponents('vevent').map(vevent => new ICAL.Event(vevent));\n        if (this.skipInvalidDates) {\n            this.events = this.events.filter((evt) => {\n                try {\n                    evt.startDate.toJSDate();\n                    evt.endDate.toJSDate();\n                    return true;\n                }\n                catch (err) {\n                    // skipping events with invalid time\n                    return false;\n                }\n            });\n        }\n    }\n    between(after, before) {\n        function isEventWithinRange(startTime, endTime) {\n            return (!after || endTime >= after.getTime()) &&\n                (!before || startTime <= before.getTime());\n        }\n        function getTimes(eventOrOccurrence) {\n            const startTime = eventOrOccurrence.startDate.toJSDate().getTime();\n            let endTime = eventOrOccurrence.endDate.toJSDate().getTime();\n            // If it is an all day event, the end date is set to 00:00 of the next day\n            // So we need to make it be 23:59:59 to compare correctly with the given range\n            if (eventOrOccurrence.endDate.isDate && (endTime > startTime)) {\n                endTime -= 1;\n            }\n            return { startTime, endTime };\n        }\n        const exceptions = [];\n        this.events.forEach((event) => {\n            if (event.isRecurrenceException())\n                exceptions.push(event);\n        });\n        const ret = {\n            events: [],\n            occurrences: [],\n        };\n        this.events.filter(e => !e.isRecurrenceException()).forEach((event) => {\n            const exdates = [];\n            event.component.getAllProperties('exdate').forEach((exdateProp) => {\n                const exdate = exdateProp.getFirstValue();\n                exdates.push(exdate.toJSDate().getTime());\n            });\n            // Recurring event is handled differently\n            if (event.isRecurring()) {\n                const iterator = event.iterator();\n                let next;\n                let i = 0;\n                do {\n                    i += 1;\n                    next = iterator.next();\n                    if (next) {\n                        const occurrence = event.getOccurrenceDetails(next);\n                        const { startTime, endTime } = getTimes(occurrence);\n                        const isOccurrenceExcluded = exdates.indexOf(startTime) !== -1;\n                        // TODO check that within same day?\n                        const exception = exceptions.find(ex => ex.uid === event.uid && ex.recurrenceId.toJSDate().getTime() === occurrence.startDate.toJSDate().getTime());\n                        // We have passed the max date, stop\n                        if (before && startTime > before.getTime())\n                            break;\n                        // Check that we are within our range\n                        if (isEventWithinRange(startTime, endTime)) {\n                            if (exception) {\n                                ret.events.push(exception);\n                            }\n                            else if (!isOccurrenceExcluded) {\n                                ret.occurrences.push(occurrence);\n                            }\n                        }\n                    }\n                } while (next && (!this.maxIterations || i < this.maxIterations));\n                return;\n            }\n            // Non-recurring event:\n            const { startTime, endTime } = getTimes(event);\n            if (isEventWithinRange(startTime, endTime))\n                ret.events.push(event);\n        });\n        return ret;\n    }\n    before(before) {\n        return this.between(undefined, before);\n    }\n    after(after) {\n        return this.between(after);\n    }\n    all() {\n        return this.between();\n    }\n}\n\nconst eventSourceDef = {\n    parseMeta(refined) {\n        if (refined.url && refined.format === 'ics') {\n            return {\n                url: refined.url,\n                format: 'ics',\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        let meta = arg.eventSource.meta;\n        let { internalState } = meta;\n        /*\n        NOTE: isRefetch is a HACK. we would do the recurring-expanding in a separate plugin hook,\n        but we couldn't leverage built-in allDay-guessing, among other things.\n        */\n        if (!internalState || arg.isRefetch) {\n            internalState = meta.internalState = {\n                response: null,\n                iCalExpanderPromise: fetch(meta.url, { method: 'GET' }).then((response) => {\n                    return response.text().then((icsText) => {\n                        internalState.response = response;\n                        return new IcalExpander({\n                            ics: icsText,\n                            skipInvalidDates: true,\n                        });\n                    });\n                }),\n            };\n        }\n        internalState.iCalExpanderPromise.then((iCalExpander) => {\n            successCallback({\n                rawEvents: expandICalEvents(iCalExpander, arg.range),\n                response: internalState.response,\n            });\n        }, errorCallback);\n    },\n};\nfunction expandICalEvents(iCalExpander, range) {\n    // expand the range. because our `range` is timeZone-agnostic UTC\n    // or maybe because ical.js always produces dates in local time? i forget\n    let rangeStart = addDays(range.start, -1);\n    let rangeEnd = addDays(range.end, 1);\n    let iCalRes = iCalExpander.between(rangeStart, rangeEnd); // end inclusive. will give extra results\n    let expanded = [];\n    // TODO: instead of using startDate/endDate.toString to communicate allDay,\n    // we can query startDate/endDate.isDate. More efficient to avoid formatting/reparsing.\n    // single events\n    for (let iCalEvent of iCalRes.events) {\n        expanded.push(Object.assign(Object.assign({}, buildNonDateProps(iCalEvent)), { start: iCalEvent.startDate.toString(), end: (specifiesEnd(iCalEvent) && iCalEvent.endDate)\n                ? iCalEvent.endDate.toString()\n                : null }));\n    }\n    // recurring event instances\n    for (let iCalOccurence of iCalRes.occurrences) {\n        let iCalEvent = iCalOccurence.item;\n        expanded.push(Object.assign(Object.assign({}, buildNonDateProps(iCalEvent)), { start: iCalOccurence.startDate.toString(), end: (specifiesEnd(iCalEvent) && iCalOccurence.endDate)\n                ? iCalOccurence.endDate.toString()\n                : null }));\n    }\n    return expanded;\n}\nfunction buildNonDateProps(iCalEvent) {\n    return {\n        title: iCalEvent.summary,\n        url: extractEventUrl(iCalEvent),\n        extendedProps: {\n            location: iCalEvent.location,\n            organizer: iCalEvent.organizer,\n            description: iCalEvent.description,\n        },\n    };\n}\nfunction extractEventUrl(iCalEvent) {\n    let urlProp = iCalEvent.component.getFirstProperty('url');\n    return urlProp ? urlProp.getFirstValue() : '';\n}\nfunction specifiesEnd(iCalEvent) {\n    return Boolean(iCalEvent.component.getFirstProperty('dtend')) ||\n        Boolean(iCalEvent.component.getFirstProperty('duration'));\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/icalendar',\n    eventSourceDefs: [eventSourceDef],\n});\n\nexport { index as default };\n"],
  "mappings": "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",
  "names": ["ICAL", "Component", "index", "aProp", "key", "prop", "Event", "startTime", "endTime"]
}
